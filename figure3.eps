%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: figure3.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Troy Carter
%%CreationDate: 6/11/12
%%BoundingBox: 0 0 861 651
%%HiResBoundingBox: 0 0 860.4302 650.7349
%%CropBox: 0 0 860.4302 650.7349
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 9594 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD11FFFD1252277D277D277D277D277D27FD1552277D2752277D27%7DFD1452277D277D277D277D277DFD0652A8FD20FFA87DFD11FFA8A8FD11%FF7DFD11FFA8A8FD11FFA8A8FD11FF7DA8FD1AFFA8FFA87DA8FFFF27FFFF%52F8FD58FF52A8FD19FFA8F8FF2727A8FF27F87DFFF8F87DFD57FF52A8FD%1AFF7DA8A87D7DFF52F87DFFFFA8FD57FF7D52A8FD1AFF52A8A8A852FFA8%7DFD5CFF52A8FD1AFFA8A8A852A8FFFF52FD18FF7DA8FFFFFF52FD3EFF52%A8FD20FFA87DFFA8A8FD15FF52FF7D7DFF7D52FD3DFF52A8FD12FFA87DFD%0DFF52FFF827FFFF7DA8FD10FFA87DFFA827A8A87DFD3DFF52A8FD10FFA8%7D7D7D52A8FD0AFFA87DFFF8F8FF7DF827FD10FFA852FF7D5252FF52FD3D%FF52A8FD12FFA87DA8FD0BFFA852FD05FF52A8FD10FFA87DA852277DA87D%FD3DFF7DA8FD11FFA8527DA8FD0BFF52F827A8FD04FF5227A8FD0FFF52FD%04A87DA8FD3DFF27FD12FFA8527DA8FD0BFFA8F827F87DFF7DF8F8F8FD11%FFA8FFFFFFA8FD3EFF7DA8FD11FFA852A8A8FD04FFA852FF7D527DFFA852%7D27275252F827A8FD54FF27FD12FFA85252A8FD04FFA852A87DA852FFFF%7DFFFFF8F8FFA8A8A8FD54FF7DA8FD11FFA87DA852FD05FF52A852FF52FF%A8527DFFFD04A87DA8FD52FFA87D27FD12FFA87D527DFD05FF52A87D527D%FFFF7DFD04FF27F827FD55FF7DA8FD10FFA8FFA8A8A8FD05FFA8FFA87DA8%FFA852FD04FF27F852FF7DA8FD52FF27A8FD11FF7DA87D7DA8FD0BFF52FD%07FFA8A87DFD52FF7DA8FD11FFA827277DFD0BFFA852FD08FF7DFD53FF27%FD11FFA87DFFFFA87DFD0BFF52FD09FFA8A8FD51FF7DA8FD20FFA852FD08%FFA87D7DFD51FF52FD15FFA8A8FD0BFF52FD08FFA87DA8FFFFA8FD4EFF52%A8FD13FFA8277DFD06FFA8A8A8FFA87DFD08FFA8A87DFFA87DA8FD4DFF52%A8FD13FFA852A8FD06FF5252FFFFFF52FD0CFFA87D527DFFA8A8FFA8A8FF%7DFD44FF52A8FD10FFA8FFA8A852FD07FF27527DFFA87DFD0DFF7D5252FF%A87D7D7DA8525252FF7D527DFD0BFFA8FD09FFA8FD17FFA8FD05FF7DA8FD%0AFF7DA8FD11FF527D52A8FD08FFA852FFFF27A8FD0DFFA8A8FFFD06A852%A8FF7D527DA8FD04FFA87DA8FFFFA8A8A8FD07FF7DA8FD16FFA87DA8FFFF%FF7DA87DFD09FF7D52A8FD10FFA87DA8FFA8A8FD06FF52527DFFA87DFD14%FFA8FFFFFFA8FFA87D7DA8FD04FFA87D7DFFFFA87DA8FD06FFA87D7DFD16%FFA87DA8FD04FF7DFD0BFF52A8FD11FFFD047DA8FD07FFA8FFFFFF52FD23%FFA8FD0DFFA8FD2AFF52A8FD12FFA8FD0DFFA87DFD5CFF52A8FD21FF52FD%5CFF52A8FD20FFA87DFD5CFF52A8FD21FF52FD5CFF52A8FD20FFA852FD5C%FF52A8FD21FF52FD5CFF7DA8FD1CFF7D52A8FFA852FD12FFA8FD11FFA8FD%11FFA8A8FD12FFA8FD11FF27FD1CFFA8527D7DFFFF52FFFD0FA8FF7DA8A8%FFA8FFA8FFA8FFA8FFFD07A87DFD0BA8FFA8FFA8FFA8A852FFFD0FA8FF7D%7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A87DA8FD1BFFA852FF52FFFF7D%527D527D527D527D527D527D527D527D527D7D7D527D7D7D527D7D7D527D%527D527D527D527D527D527D527D527D527D527D7D7D527D7D7D527D527D%527D527D527D527D527D527D527D7D7D527D7D7D527D7D7D527D7D7D527D%525252FD1DFF7D527DFFFF7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87DA87DA87D7D7DA87D7D7DA87D%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D7DA87DA8FD1DFFA8A8FFFFA852FD047D527D52%7D527D527D527D527D7D5252FD0D7D527D527D277D527D527D527D52FD0A%7D52FD047D527D527D527D527D527D527D527D52FD0F7D52A852A8FD21FF%52FD11FFA8FD12FFA8FD12FFA8FD11FFA8FD12FF52A8FD20FFA852FD5CFF%52A8FD21FF52FF527DFD0CFF7DA8FFFFA8FD21FFA87DA8A87DFD05A87DA8%A8A87DFD05A87DFD05A87DA8A8A87DA87DA8FD05FF7DA8FD20FFA852A8F8%F8FD0BFF527D52FFFFA852FD20FFA87DFFFFFFA8FFA8FFFFFFA8FFA8A8FF%FF7DFFA8A8A8FFA8FFFFFFA8FFA8A8FFFF7DFD05FF52A8FD1DFFA8FFFFFF%52FF7DA8FD0AFF7DA8A85252A8FF7DFD16FF7DFD09FF7DA8FFFFFFF852FD%19FFA8A8FD05FF52A8FD19FF5252FFA85252FFA852FD0DFF7DA8A827A827%FF52FD14FFA8525252A8FFFF7DFFA87DFFA8A8FFA8FF7DA8FD1AFFA8FD05%FF52FD1AFF7D7DFFA8A87DA852F87DFD0CFF52A87D52FF52FF7DA8FD13FF%A87D7D7DA8FFA852FF7D52FF7DA8FF2752FD1BFF7DA8FD04FFA852A8FD19%FF7D52FF7D5252FF52F87DFD0CFF7D7DA827527DFF52FD15FF7D7DA8FFFF%FF7DA85252A8A8A8FF7DA8FF52F8FD18FFA87DFD04FFA852A8FD13FFA8FD%05FFA8A8A8FF7DA8FFA8F8A8FD0DFF7DFFFFA8FF7DA8FD14FFA87D7D7DFD%06FFA8FF7DFD05FF7D7DFD18FFA8A8FD05FF52A8FD10FFA8A87D7D52A8FD%0AFF52F852FD29FF7D277DFD08FFA8A8FF52A827277DFFA8F87DFD15FF7D%FD05FF52A8FD11FFA8FFA8FFA8FD0BFFF8FD2BFF52A8FD08FF7DA8FFF87D%FF27F852FF7DFD15FFA8A8FD05FF52A8FD11FF7D527D52A8FD0AFFA87DFD%04FF7D52A8FD24FFA827A8FD07FFA8A8FFA8FFFFFFF8F87DFD07FFA8FD0F%FF7DFD05FF52A8FD11FFA8A8A8FFA8FD0BFF52FFFFFFA827F852FD24FFA8%A8A8FD07FF7DA8FD05FF2752A852A8FD05FFA8A8FD0DFFA8A8FD05FF52A8%FD11FF7D527D7DFFFFFFA85252FFA85252FFA852FFFF27F85227F852FD22%FFA8527DFD08FFA8A8FD05FFA8FF7DF852FFFFA87DFFFFFF7DFD0DFF7DFD%05FF52FD12FF52A8A87DFFFFFFA87D7DA8FF2752FFFF5252F8F8F8FFFFF8%F8FD22FF7D52527DFD07FF7DA8FD12FFA8FD0BFFA8A8FD04FF7D52A8FD11%FFA852527DFFFFFF7D7D52A87D5227FFA87D52F8F827FFFF7D7DFD22FFA8%7D277DFFFF7DFFA8A8FFA8A8FD13FF7DA8FD0AFF7DFFFFFFA8FF52A8FD12%FFA87DA8FD04FF7D7DA8A87D7DFFFF52FFA827F8FD28FF7D52FF7D7DA87D%52FFA8A8FD14FFA8A8A8FD07FF7DA8FD05FF52A8FD12FF7D52A8FD0BFFA8%7DFFFFA8FFA82752A8A87D7DFD1FFF52FD04FF7D527D7D52A8A8A8FD14FF%A852A8FD07FFA87DFD05FF52A8FD12FFA87D7D7DFD0BFF52FD04FF7DF852%A8A87DA8FD1EFFA852527DFFFFFFFD04A8FF7DFD15FF7DA8FD08FFA8A8FD%05FF52A8FD14FF2727A8FD09FFA852FD04FF7DF827FF7D52A8FFA8A8FD1C%FF7D7D7DFD08FFA8A8FD14FF7D7DFD08FFA87DFD05FF52A8FD12FFA87D7D%7DFFFFFF7DA8FFFFA8A8FFFF52FD05FF277DA87D52A8FFA87DA8FD1CFFA8%2752FD07FFA8FD17FF7DA8FD06FFA8A8FD05FF52A8FD12FFFD047DFFFFA8%5227FFA82727FFA852FD08FFA87DA8FF7DA8A8FD1BFF7DFFA8A8FD07FFA8%A8FD16FFA87DFD07FF7DFD05FF52FD12FF7D7DA8A8A8FFFFA87D7DA8A852%52A8FF52A8FD28FFA87DA8A8FD08FF7DFD19FFA8A8FD04FFA8A8FD04FFA8%52A8FD11FFA87D7D52A8FFFFA85252A87D5252FFA852A8FD0CFFA87DFD1A%FFA8275227A8FD07FFA8A8FD16FFA8A8A852FD04FFA87DFD04FFA852A8FD%14FF7D52FFFFFFA8A8A8FFA8A8FFFF52FD0DFF7DA8A8FD1AFFA87DA8A8FD%07FF7DFD17FFA8FFA87DFD04FFA8A8FD05FF52A8FD11FFA8FFFF52527DFD%09FFA87DFD0EFF7DFD21FF52FF7D7DFFA87DFD0FFFA8FD09FFA8FD04FFA8%7DFD05FF52A8FD11FF52FD0FFF52FD14FFA8A8FFA8FD17FFFD047D52FFA8%7DA8FF7DFD05A87DA8A8A87DFFA87DA8FF7DFD05A87DA8A8A87DFF7DA8FD%05FF52A8FD10FFA852527D52FD0BFFA852FD0EFFA8FD04FFA87DA8A87D7D%FD16FFA8527D7D52A8FF7DFD04A8FFA8FFA8FFA8FFA8A87DFFFD05A8FFA8%FFA8FFA8FFA8A87DA8A8FFA8FFFFFF52A8FD11FF527D7DA8FD04FFA8FD07%FF52FD0EFFA87DFD04FFA8A8FF7DA8FD1AFF7D7DA87D7D527DFD09FF7D7D%FF7D7D527DFD09FF7D7DFF7D5252A8FFFF52A8FD11FFA87D7DA8FFFFFFA8%5227FFFF7D27FFA852FD0EFF7DA8A8FFA8FD20FF7D527D5252277DFD09FF%7D52A87D7D527DFD09FF7D52A85252277DFFFF52FD14FFA85252FFFFA87D%7D7DFF2752FFFF52A8FD10FFA8A8A8FD1FFFA87DA8A87DA8A8FD09FFA87D%A8FFA8A8A8FFFFFF7DFD05FFA87DA87D7D7DA8FF7D52A8FD14FF52527DFF%7D5252A8A87D27FFA87DA8FD10FFA87DA8FFFFA8A8A8FD23FFFD04A87DA8%FFFFA8FFA8FD04FFA8A8A852FD0BFFA8FF52A8FD11FF7DFD07FF7DA8A8FF%FFA8FFFF52FD16FFA87DA8FD24FF52A8527DA8FFFFA87D7D7D52277DFFFF%FFA87DFD0CFF52A8FD10FFA8FD047DFD0BFFA87DFD16FFA8A8A8FFA87DA8%FD20FFFD047D527DFFA852527D527D52FFFFFF7D7DFD0CFF52A8FD11FFFD%047DFD0CFF52FD1AFF7D527DFD22FFA8A8A87D7DFD04A8FD06FFA8A8FD0C%FF52A8FD10FFA87DA8FFA87DA8FD09FFA87DFD1AFF7D527DA8FD22FFA8FF%FFFFA8FD17FF52A8FD11FFA87D527DA8FFFFFFA8FFFFFFA8FFFFFF52FD1B%FFA8A8A8FD3EFF52A8FD18FFA85252FFA85227FFA87DFD1CFFA8FD3FFF52%A8FD18FFA87D7D7DFFA852FFFF52A8FD21FFA87DA8FD0CFFA8FD29FF7D52%A8FD18FF7D5252A8A852A8FFA852A8FD21FF7D7DA8FFFFFFA8FD07FFA87D%7DFD1DFF7DFD0BFF52A8FD19FF7D7DA8A8527DFFFF52FD23FFA8FFFFFFA8%A87DFD07FF7DA8FD1CFFA8A8A8FD0AFF52A8FD20FFA87DFD27FFA87DA8A8%FD1EFFA87DFD05FF7DA8FD0AFF52A8FD21FF52FD49FF7DA87DFD10FF52A8%FD20FFA852FD4AFF7DFD11FF52A8FD19FF7DA8FFFF7DA8FFFF52FD5CFF52%A8FD18FFA85227FFA85252FFA852FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%FFA8A8FD09FFA8FFA8FFA8FFA8FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFFFFF%A8FFA87DFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA8FD0BFFA8FF%A8FF52FD19FFA87D7DA8A8A87DA8FF5252527DFD0B527D527D527D527D52%7D527D527D527D527DFD04527D527DFD08527D527D527D527D527D527D52%7DFD0F527D527D527D527D527D527D527D527DFD0452FD19FFA85252A87D%5252FFA87DFD12A87DFFFD10A852FD11A87D7DFD12A87DFD11A852A8FD19%FFA8A8A8FFA8FFFF7D52A8FD10FF527DFD10FF7D7D52FD10FF7D52A8FD10%FFA827FD10FF7D277DFD1FFFA852A852FD10FF7D7DFD11FFA852A8FD10FF%527DFD0FFFA85252FD10FF7D5252A8FD1EFFA87D7D7DFD10FF7D7DFD10FF%A87DA8FD11FF7D52FD0FFFA85227A8FD0FFFA8FF52FD20FF5252A8FD10FF%A87DFD10FF7D277DFFFFA8FFFFFFA8FD09FF52527DFD11FF52FD10FF7D27%7DFD49FFA8A8FD04FF7DFD79FFFD047DFFFFA87D7D52FD76FF7DFF527DFF%FFFF7D7D52FD75FFA87DFFA87DFF7DA87DFF27A87DA87DFD72FFA8A87DFF%7D2752FFFFFF7D27527DFD73FFA8FFFFFF52A8FFFFFFA8527D7DFDFCFFFD%3CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-11T11:33:40-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUj1Tzjpem+ZtG8&#xA;uTw3TX+uNKtpKlvIbZfRgluG9S4IWINxt2oisX6Hjx3xVKfJf5paH5w1W+sNKt5QLAyiW4kn09qm&#xA;GYw728N1NdxhyCyGWBAVFe4qq8/8qH8ofzG/Mjz1Y3Vhput31rqVre2l3LAHnkgtbO0tZUDSRCsE&#xA;dzblSA5V+R24kFlUp/KI/lH+YnmDXtNX8tLXSRoV39aSaeCCTmZGkh9G4T0UEOy8hb1dag/yVKr1&#xA;GD8kfylha3ZfKmmN9WaZ0D2kLhjOxZhIGU8wvL4A32R9mmKrYPyO/KSEWwXypprfVbeS1T1LWFyy&#xA;ylCXk5KfUkHpDjI1WWrUPxGqqHvPyG/KyXTZ7S28uadbTyWD6fBd/VIZHj5IVWf4l+KZTv6hPI+O&#xA;Kqz/AJGflPJFMkvlfTS9xbRWsrx2sMZAiLn1I+Kj05GMp5OtGai1PwjFVSf8kfylma4ZvKmmL9Za&#xA;F3CWkKBTAwZRGFUcA3H4wv2h9quKuf8AJH8pXeZj5U0wGa5iu2AtIQFeJY1CIAvwxN6QLRj4WJYk&#xA;fEaquH5I/lKHVv8ACmmVW5a7A+qQ0LspXgRx3i+Koj+zXem2Kod/yK/LAXenyweXNMjhs7m5up4H&#xA;sbeQXH1pZf3Tll/u43m5RruFCqqgACiqItvyR/KW3a2ZfKmmP9VWVEElpDIHErBiZQyn1CvH4C1e&#xA;I6dcVU4fyL/KSKGCEeVdOZYLQ2Ks9tEzshCj1HYqS83wf3rfH133OKum/Iv8pJYZ4T5V05VntBYs&#xA;yW0SuqAMPURgoKTfH/er8fTfYYqqXH5I/lLPJO7eVNMQz+hyEdpCir9XcuvAKoCciaScftjZqjFU&#xA;PD+RX5YC51GW48uaZNHeX0N9bwixt4xbrDBBF9XQqu8TyW7SMuysXaoNTVVED8kfylDq3+FNMqty&#xA;12B9UhoXZSvAjjvF8VRH9mu9NsVdF+SP5SxNCw8qaYxgnnuFD2kLBmuGdmVwVPONPVPpo3woAvED&#xA;iKKutvyR/KW3a2ZfKmmP9VWVEElpDIHErBiZQyn1CvH4C1eI6dcVQ7/kR+VIsVtrfy1p0ckVi1hD&#xA;cPawyuAyqomfkv7yZeAPqMefXfc4q5PyI/Kk2LW1x5a06SSWxWwmuEtYYnIVWUzJxX93M3Mn1FPP&#xA;pvsMVRFz+SP5S3DXLN5U0xPrSxI4jtIYwgiYsDEFUemW5fGVpyHXpirpfyR/KWVpmPlTTFM88Fww&#xA;S0hUK1uyMqoAo4Rv6Q9RF+FwW5A8jVVx/JH8pS7N/hTTKtcrdkfVIaB1ULwA47RfDUx/ZrvTfFUl&#xA;vvIXlTyv538kSeXvL1hpy3WsXpudRt444rismk6hJ9XAWMMYSRyC8+K8VAXpRV6jirsVdirsVdir&#xA;sVY95i8u3upeY/KupwPGsGh3tzdXauWDsk1hcWqiMBWBPOdSakbV+WKpD5c8k6/b+bNP1S/tNH0y&#xA;w0WzvrOyi0USR/WTfTxylpYXjRYFQQ14LJJV2LchiqT+RfJ/kjQfPn5g+YRpkOltp+op/uYeb04E&#xA;hn0u1urmPi0nGNVkmeRyVC/GKH4aKq9VilimiSaF1kikUPHIhDKysKhlI2IIxVdirsVdirsVSXWf&#xA;MZsNc0TRoLf6zeaxJMTV/TWG2tY+c05+F+XFnjQL3ZxuBiqhd+ddJm0bV73y3c2fmG90iN5J9Ps7&#xA;uJm5oC3pM0fq+m7BTxDDc+HXFU30rUrTVNMs9Tsn9SzvoI7m2k6copkDofpVhiqKxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KvP/N+k2UP5keRtSjsG+tXOp3CT6l6nwAJot+FhMRfqwFQypT4dzvuq&#xA;9AxV2KuxV2KvM/PS3Z8xJZq/mXV7yWI3cen6FdW2nQ21ur+mpdnmtGlLNWtXf5KKYqzXypa6jb6N&#xA;CL+4u55JAJVj1H0DdwK6g+hNJbfupGjNRyFfm3XFU3xV2KvmvXPMv5Zec/MH5oeQtX1yby7PqGow&#xA;zfpa8mWGwB0qCztDEsc08cbSfWYJCwCgugU8vgXiqzPzL+XGraJ+R2m+VfKHnEaI+nSQv/iC5uDZ&#xA;pOk8zM0f1iGrQpJLcD0+PLoqVNScVT/8lvO2ha75Xh0a18yr5n1vQIIbfW78JOvKZuQDCSdIzMv7&#xA;tgJBXlTkdzir0LFXYq7FWEeaBc2H5j+WtWQAxXdjqeixvJX0ku7g293b8ytSok+pOtfGg6kYqwHy&#xA;npvnvy55ju/O/m+wktbOz8t3NtfKDp3om7juIZo4bS3sAJDEwDiL1SznoeJI5KvUvy30S80L8v8A&#xA;y5o97UXlhptrBcqTXjKkKh1+StUYqyPFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwjzqsX+Pfy+&#xA;Yx3JmGp3gWVXkFqFOj39VeMN6RlJpwYpyChqEAkFVm+KuxV2KuxV5F+a/l+fWfO1glvpdlrsltpN&#xA;xM+n38c8qxhZAweP03jRXmK+mo3LEb0Arir0LyRc2lz5P0Wa0SKK2aygEcNurpFGFjA9NFk+NQlO&#xA;NG3HfFUp806t5jsfPfk20tb2GPQ9Wurq2v7L6vynkaLT7q5VvrDOQqBok+FYw1R9uh44qx3yH5t8&#xA;13mt+X59T1I3tl5stNUuxpxhgjSwNlcRCFYXjRZXX05uD+q7HkARTpirF9a/Kf8ALzz35785aXrM&#xA;OoW2otrFtNBe6dZssaomjWruj3xtZrdTI87M0ckleQUgAsearFZfy68/ap+Xd55Z/N/XbPyvomk3&#xA;VgPKF1NLp4hLW0FzCbZWWSJnUwlePrPz2rvRsVeo/kN5L8reXdJmn0CwCxX9pYvJrAF0v1o+m7FQ&#xA;Ll3VuHLmZYAsb86BRxxV6pirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYB5v1&#xA;G2m/MjyNZK98txbancGSJrSdLBw+i35Di7aEQPKvQKk1aFqrtsqz/FXYq7FXYq8i/NHVdOXW47XV&#xA;NCt/MU8PL6qdMvLuDUbaB+LMLqK0SSRYfhqXL8TT7IxVnfkG+jvPLVtLANOjs0AjtLTSZTPb28SK&#xA;AkPqcY+TIOtEWnSnfFU1vtF0y+vtOv7qH1LrSZXn0+Tk6+nJLC9u7UUhWrFKy0YHrXriqXaL5E8q&#xA;6Jq1xq2m2RhvrkSKztNNKkaTSmeVIIpHeOBJJTzZYlUMdziqUeSZVPnf8w4vrLMyarZMbMqAsYbR&#xA;rICQPxqTJx4kcjTgNhU1VUfzV/Jzyt+Zlpp9vrs13bHTJHktprKREakoUSKwkSVCDwX9mop8wVV1&#xA;h5W1Lydomk+XfKSTtpGmW5SEu1tIXnaYOzXjzlH9NuTMfq4ru1AKKuKs5xV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsI86zKPPv5fQfW2Vm1O8cWHBSjhdHvx6xfjyBTlxC8qHl0&#xA;NNlWb4q7FXYq7FUNHbWNhFcSW9vHArs9xOIUVS8jfE7txA5O3cnc4qxf8uPOvl7zhbXmr6RawW5l&#xA;9FriSOeynmfkhaP6x9UkmaN1XbhLRhirMcVSnSvN3lPWL2ew0nWrDUb61BNza2l1DPLEFbgTIkbM&#xA;y0bY1HXFUg8k3Abzv+Ydv9bido9VspDYLT1ohJo1kBM55E8JfT4p8I3Rtz2VZrirG/PlhdXuk28c&#xA;CKwS6jeUyWxvo1QKw5vaKVacBmWig/CaPvxpiqlpGpnQfKejwXttLJd/Vwv1WFFRwkKcnf05HRYl&#xA;RBXhy+HZBU4qyDTdT0/U7GG/0+4jurO4XlDPEwZWHzH4jFUTirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVYR51ulHn38vrX69ArPqd5KNNIX6xIE0e/X11PPl6cfPi3wEVddx0KrN8Vdir&#xA;sVdirzrUvNfm9tfv7Cw13y7YpbO5js9VtL6G6ESdXq88Cypt/eRrw98VT38tpNNi8oaZpNhejUk0&#xA;i0t7N9QhikW2maKMKXglYenKhK9Y2YYqyjFXkv5VaXcaZ5ht7LRo/MUHl6DTJ11aLzGJxTUDdI0H&#xA;oCQC35emZvUNp+6I4/tb4qyDyi+tHz752SFrT9EDV4Dcqxk+tiQ6Jp4UqB8HA0HX3xVnWKuxVLfM&#xA;Pl3SfMGmSadqcCzQSBgpZVZkZ0aMsnMMteLkGoIIJBBBIxVjXlf8tDoWj61p66l6ravAIPWjgEHA&#xA;pE8KylFcq0vBl5MOPLiCfiqSq3P5AvvTVLe6t41ZpmEUEclpBaySiEJPaQxSNxeP0C1Gb4mdjyUF&#xA;gyqnoXkHWdM86z60dRV7CZ5pXVWmWWYSqFWK4jLPE/pEB0kFCDyHGjDiqkmg6Z+cFt5iW51Ge7lt&#xA;JFEc6+vZS27zfWVZpTEwVoYBbkooh+MkVYdMVeq4qx/SNX125125tLu29Ozj+sUb6tNFw9OdUt/3&#xA;7sYp/XiJk/dj4KUbfFXeYtZ1uxvoIrC0M8Tx86C3nm9aT1FX0fVi/d23wmvqS1XfwVsVZBiqW+Yb&#xA;++sdPE1lEZJWlijZhDLc+mjuFaT0YSJH4jsp9zsDiqpol3eXmlW9zeRejcSA80KPFUBiFf05Pjj5&#xA;qA3B/iWtDuMVR2KuxV2KuxVC6tcXdtpd5cWcP1i7hgkktrfr6kioSibfzMKYqg/LWoale2k736Ua&#xA;KcxwT/VprMTR8EbmLe4Z5Y6OzJud+PIbHFULrVv5mfWrV9PlkWxBtqhHhWNeNxyu/WWRGdhJb/DH&#xA;wrRv5ftYqyDFXYqwTzc+s/4+8kxytafok6vM1uimT62ZBomoAlgfg4bnp7YqzvFXYq7FXYqhdR0n&#xA;StTiSLUrOC9ijdZI47iJJVV1NVYBwwDA9DiqKAAFBsB0GKuxV2KsM8kwuPOv5hTG2hVH1azQXitW&#xA;eQpo1iTHIvAUSPmGQ8zUu/wrSrKszxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KsJ8627nzz+X9x9Ut2RdVu4zflv9JQto1+RCiemaxvx5MfUG6r8J6qqzbFXYq7FXYq7FXY&#xA;q7FWKeVfzI0bzJqC2dra3dsLi3kvdLubpIlivbWGYQST2/CSR+Adl/vFQkMrAUNcVQnkuOOPzv8A&#xA;mHO1skZk1axi+vFl5S8dHsiISvX92XqPHntirNPWirTmtS3DqPtdePzxVwmibjR1PKoWhG5XrT5Y&#xA;q0JoW40kU8lLLQjdRSpHsKjFVC/1TT7CwuL+6mVLS1ge6nkFX4wxqXZwqhmYBR2GKqqXds8QlWRe&#xA;BRZak0oj/ZYg9Aad8VXmaJeVXUcaBqkbFulfnirjNECQXWqsEO42Y0IX5moxV3rRVpzWpbh1H2uv&#xA;H54qhbjV9Ot7uytJZgLjUJJILNAGbnJDG8si1UELxSNvtEdKdcVRSzRNx4up51K0INQOtPlirQng&#xA;IBEikMvNSCKFP5h7b9cVcZ4ACTIoCrzYkigT+Y+23XFW2miUkM6grTkCQKcjRa/M9MVQtrq+nXVx&#xA;fW8EwabTbhbO9Uhl4TvBFcKlWADViuI2+Go3p1BGKor1oq05rUtw6j7XXj88VcJojSjqeRKrQjdl&#xA;ryA9xQ1xVyzRNx4up51K0INQOtPliqjc6hZW1rJdzTKLeKJrh3HxfukHJnAWpIp4Yq621CyubWO7&#xA;hmU28sS3COfh/dOOSuQ1CBTxxVWaaJeXJ1HChapAoD0r88VcZohWrqOJCtUjZmpxB9zUUxV3rRVp&#xA;zWobh1H2uvH54qwjznFE/nz8v7lbRJDHql5F+kQy8o66PfkwcftUcpyPhxxVnOKuxV2KuxV2KuxV&#xA;2KvOvIH5eeYNC1LSW1SW0aw8taVPoujNbPK808c88UhnuFeOJYmWO1jXgrOCSx5dBirHvMXl/VPM&#xA;HnbzCdL8uaffwWGp2VvfPLq+o2Vw85sbSZbswwfuAIY5UAYfGfT2FaYqpr+W3mP1E/51CxH+nMfU&#xA;/wAQ6r8J4N/pvj8X2Nv3m+4pXFXWn5beYw9lTyhY21JLmj/4h1X/AEerN8fwVP8ApH2vgqd/joa4&#xA;qstPy28xhbGnk2xtqWc4C/4h1T/RgWi/0T4K/wB91+Cqfu/iI+GqqGvPIOt2ekz3dx5Lslt7bSXk&#xA;mgXX9VdhHGhZtPCIG5GgpRf3Z8cVV5/y68wSw3ki+TbG6SSxgIB8waqDdKTKRaUk4/3Na/vKJ+8+&#xA;E15UVVbv8tvMZe9r5QsbmsltV/8AEOq/6RRl+P46H/R/tfHQ7fBU0xV0v5beY/Uuf+dQsZK30BMn&#xA;+IdV/fEJD/pu+/7inD4v3n7v4QRxqq5fy28x+on/ADqFiP8ATmPqf4h1X4Twb/TfH4vsbfvN9xSu&#xA;Kof/AALrNveaXbS+UrO3mu729S3I17WGELKJ5GuWaNWCfWlUtX7X7yj0bkMVRFj+W3mMPYU8oWNn&#xA;SOej/wCIdV/0WrL8H7up/f8A2v3dRt8VDTFVG2/LXzELW1H+CrGCmmlRb/4h1P8AcCif7j/hqu/T&#xA;4CYvh+10xV1z+WvmI2t0P8FWM9dNCm3/AMQ6n+/FH/3H/FRdunxkRfF9rriqte/lt5jM13XyhY3d&#xA;fqtZf8Q6r+/pKf56H/Rv7z46f5FWxVDxeRdZurvVIYfKVnLJZanbw3Ltr2sKJZTbW0wvFLqvMQxy&#xA;ovL7dY6L0GKohfy28x+on/OoWI/05j6n+IdV+E8G/wBN8fi+xt+833FK4q63/LbzGHtf+dQsYKXd&#xA;2Q/+IdV/cEtL/pXw1P8ApX2vgq/7z4wDyoq6x/LbzGHsKeULGzpHPR/8Q6r/AKLVl+D93U/v/tfu&#xA;6jb4qGmKoX/lXuvW2mwzy+S7K3ig0t2eAeYNUY26KiE6eFj5A1ApSOsfw9emKu/5V7r1zps08Xku&#xA;yuIp9LRkgPmDVFNwjI5GnlZOIFAaUkpH8XXriqKvvy28xl7+vlCxvKxwVf8AxDqv+lUZvg/eUP7j&#xA;7X7yg3+Gprirrj8tvMZe6/51Cxnrd2hL/wCIdV/fkNF/pXxUP+i/a+Oj/u/gBPGqrm/LbzH6j/8A&#xA;OoWJ/wBOU+p/iHVfiPBf9N8fh+xv+822FKYqqeXPKieX/O2gXWqeWrWwu7/Ur22sZodZ1C9kSUWV&#xA;3M139Xn/AHJE0UTgk/GOe+9cVezYq7FXYq7FXYq7FXYq7FXj+sa55p0F/wA1tX8p6Tbat5hg1TSx&#xA;bWoSSe5lVtNsFcSww8JWjjR3aPi/2ue226rPvy91nzLrXkzStU8zab+iNduoi97p4DJ6bB2VTwkJ&#xA;dOaAPwY1WtDuMVZFiqjfXttY2Vxe3TiK1tY3mnkPRY41LMx+QGKvP7T82AvmDRYte+paBo2q6BLr&#xA;TvezhJIpfrUEVvG0ztFEOUU9WTjUNsGIG6rKZvNUEXmbS9HaNXtNatZrjTdRjkDpJLb8XeHiFp8U&#xA;MnqIwY8gG6UFVU9xV2KuxV2KuxVYs8DTPCsitNGAZIwwLKG+ySOorTbFV+Kpf5h1CXTvL+p6hCY1&#xA;ms7Se4jaYExhoo2cFwGQlajf4h88VSqwl863mipex3mmtdSxF4U+pzCN2oeB5C7aivsa77HviqC8&#xA;tearvzVZ/pDyxr2l6pp8N1LZ3dxHZ3ACPCpLBa3I5fEUp2KtyBIpVVOfQ84/WOP17T/Q4V5/U5uX&#xA;OvTj9a6U71xV0UHnEvMJL7T1QOBAVs5iWTgpJYfWhQ8+Qp4Yqh7f/HE+jxXX1iwiv5bdZfqklnOo&#xA;WZk5emzfWqijbE0xVESwecQ8IjvtPZC5E5azmBVODEFR9aNTz4inhirvQ84/WOP17T/Q4V5/U5uX&#xA;OvTj9a6U71xVYV82RLcy3Wo6bDbQkssptJgPSVAzO5N2AtG5fQK4qjfL+oSaloOm6jIUMl5awXDm&#xA;KojLSxq54VLfDvtucVYr52VP+Vgfl63pWpcaleATMf8ATADo99VY14/3J6ueX2gux7Ks5xV2KuxV&#xA;2KrZJI415SMEWoHJiAKsaAb+JNMVXYqwa40ua1/N9ddEN49k3l66S4nH1meBZVurYrHFH8aJIyIT&#xA;wiUM9K0JxVieh6PqMn5sR6mul3kV82rXt1f6xNbTRRy6LNpax2cH1h1CkLcen/o9eSMrEqvdVJfy&#xA;S8wee7n86PzD0rW9Q0qZI7oXF7bQmI3BZFFvA1q0Q5NFDDHHHKJTVGoGpIz1Ve/4q7FUl876Tc6z&#xA;5M1/SLU0udS067tIDWlJJ4HjXftu2KvNXttY1XW/K3nbTfK48xabH5dlsJrF5bWGa3u5ZYuacLtk&#xA;UPF6TxydKfENzsVVfyl5Y1PSLv8ALryzdcW1DQE1LWNSSBi0NtBcpPbwWwc0qqte8I/ERE9sVeu4&#xA;q7FXYq7FVG9iE1nPEXMYkjdS6l1ZeSkVBjZJAR/ksD4EHFXh/kPy/oV55h0ueGXULWe6Bv8AT7ma&#xA;LSVivIUKNLwfTW/SEJZWU/v5vi/b5n4cVeq65F5gTzJpN/ZPcTaVbw3n6Q0+ExBZH9MGA/GUZn5A&#xA;qo5cd96dcVYjZW/nW30jzpLrzzx2p0644PeSxywm5BumaW1VHrHb/V2g+FuPToG5Eqp/r9h+Y1/N&#xA;5bufLuvWENjFfRz6+Bb0W804sjFIGf63xYoGFQRXkDyWm6qjYahbeW/PVt5K0TyY9j5fv7N9Rl17&#xA;TrdYbCO85MhhnWONIw7RwD4uZbdBxp8QVZtirsVdirsVdiqG1F7iOzkkguIbQxjm89yhkiVFFWLA&#xA;SQ0278tsVQHk1uXlDQ25rJy0+1PNPstWFd13bY/PFWLeb3vP+Vl+Ro52sPq51K5azQFv0gQNGvhK&#xA;SDt6PIivHvxrir0HFXYq7FXYq8x85aZJc65MJfL1try8+MM/mbUUttPBdBWKytFiuVbirBS5hDE/&#xA;tNirJPIdhdWUFzDPp95pHplFGmTXQvrNNvtWc5rJwPQo3Hj/ACDqVWVYq7FXk35beQ/Lmm/nF+Y/&#xA;mKzZV1BruG1+qCRmaNL20ttQuJXUsTSe4clew4MF22xVkP5ofnF5Q/LewtLvXfrFw17M0EFrYokk&#xA;xMah5GIkeJAqB1rVq/ENsVZP5d8waV5i0Oy1vSZxcabqESzW0wBWqt4qdwQdiD0OKpjirsVdirsV&#xA;dirsVdirsVeVw6M/lD80ZNS07QnurDzNO8M0ulW44WoePT4hJeFVVVCywzSfJy3Xlir1TFUn85Nx&#xA;8oa43NY+On3R5v8AZWkLbtuuw+eKpT5h8qax5g1byrrFj5ouNNtdHlNzfWthyFtqiSekwSQCXj6f&#xA;7s8eXPZj88VeFfmponmD8oPOuh6t+XmsTvL5s1G4M/lzUJHktri7mdKtI5MSGP8AfKlZZA6/aDmr&#xA;FVXrf5f6V5Bg80at5mtryCHznrsNqPMOkrfx3AtZ2QExLGDy+Nx8JbrT4KKaYq9EluIogxdt1RpC&#xA;g3YqvUhRucVUdM1GDUbRbqAERszLQlW3Ripo0bOjbjqrHFUVirsVUruT0rWaX1Y4OEbN68wrGlAT&#xA;zcck+Fep+IfMYqlnk1uXlDQ25rJy0+1PNPstWFd13bY/PFUg86zU8+/l9D69sOWp3j/VmH+lNx0e&#xA;/HNDy/ul5Uf4ftFdx3VZvirsVdirsVeQ/mboJ03XZ9futL0PzBb6uVggj1yGSWW0+q2Us8kUDLHO&#xA;vpOlq8nGi/GTvuKKs/8AIWlNpfk/S7Jrj6zxi9RZFVkRVmYyrFGrFmWOJXEcYJqFAxV5vJo+pw/m&#xA;w+pPpd7+lItce8k1xLaZ4G8vDRjELVZ0Vkb/AEulLcVcv8fHviqG0HStaf8APFtb/Rd5HBcX12z3&#xA;E1lcRMti+nQpBJLqEgWGSBpY6R2VBJE55N0IxVDecn/N99d87xflffWQ1SLXbF9R0/0rU36wSaHa&#xA;BJjLeSmEQu6cVX0eXJWKv9pcVeff84teSfK3nBfOtv5p019QcSWnrwXZYp6jtcEyhhxkScMGHLly&#xA;AJFd2xV65/zj5+Wer+R08xR3PmSDXdOu7iJLCK1laSOH6urIWdGqsUrR+mpRCaBAKmgoq9exV2Ku&#xA;xV2KuxV2KuxVpwxRgrcWIIVqVofGmKvBL3T/ADLofni111jNq2na3qEN5d6j5ai1NoTFbvHEyy2u&#xA;m8oGr9p/rDSllDAFqBcVevan500fTfMFtodwsxuZxAXmRA0MP1ySSG1ErVBHryQuiUB3G9MVSKX8&#xA;wNC80eWfOMWlOV/Q9teW888xi4FkSaMuESUyCPlEd3CV7d6Ksy069t7yzjmguobwU4vcWxBiZwPi&#xA;40aSm/bkaYqicVY9afl75Ns/MF95itNLit9a1N43vryIujStEQy1AbjQsoZgBRmFWqcVTeTTLSTU&#xA;I79lJuI1Cqamnwhwpp7CVx9PyoqtvdKtby4tp5gedq3OOlP5lehqCftRqdqHbwqMVQltrgilS21g&#xA;x2V5cS8LSFmX4wVWm4ZxUuSq1oWpsO2KpviqG1G9t7OzkmnuobMU4pcXJAiVyPh5VaOu/bkK4qgP&#xA;JrcvKGhtzWTlp9qeafZasK7ru2x+eKsW83yXi/mX5Ghn1Gwa3l1K5ks9LEDJqACaNfLLMZzcMHhD&#xA;MAQtutCy1bxVeg4q7FXYq7FWKfmHH5WksbAeZJri2s1uJPTuIY5GjR5rSe1YzyJHIsSencP8T8Ry&#xA;pv2xVKfyi13zdqdneW+vppyQ2EdrDZrp9xDcMGCOsvNoZpxwPBGjZuLGpqopirMv8QaD+mf0J+kr&#xA;X9NCP1jpnrx/WvS/356PL1OPvSmKtDzDoB1k6GNTtDrSx+s2lieP60I6V5mDl6nHfrTFWNeSZ+Xn&#xA;f8w7f6zG/p6rZSfUwtJI/U0ayHqs3LdZOHFRxFOB3NdlWJ/85V6F5k1n8qzBoMV3czQ6hbz3drZK&#xA;7vLAodaOiEMyJIySbBqFQabcgqk2m3es6b+X/leLWtMd9b1G1sIZ9N1QR8ZFsuUMdv8AVisfruyM&#xA;03CSRXDlBuaLir1PRtZt9P8ALWjRxxXF/NcQfu4oVjD0jTlIaNL6aon2VAkbsAW64qyK1uoLu1hu&#xA;rducFwiywvQjkjgMpoaHcHFVXFXYq7FXYq7FWn58G4U50PGvSvatMVeIaTrOrflrrPl3RfPPmeUa&#xA;aYhaafHy05bBkRUt1Z3EOn3K+m0i1H70KPiY0HPFXqeseSvL+r6pFql5FL9dhRY1khnmhDCMu0Jd&#xA;Y3VWaF5XaJiKoxqtDiqWav5V0XQ/Lnmi/sg6XN3p9z6s9zNLOscapLKI4xK5EcSvK7cUoN/lRVld&#xA;pJ6trDL6sc/ONW9eEUjeoB5oOT/C3UfEfmcVVcVdirsVdirBvMlvZ6b5pPmHV7NJdKtYTLFd/AXj&#xA;lUK7EVAf4BbAheVDXYchuqzDTtSsdRtVu7GZZ7dyyrInSqMVYb7ghhQ4qqXcnpWs0vqxwcI2b15h&#xA;WNKAnm45J8K9T8Q+YxVLPJrcvKGhtzWTlp9qeafZasK7ru2x+eKpB51uaeffy+tfrka89TvJfqBT&#xA;96/DR79fWV+WyJz4kcdyw3FN1Wb4q7FXYq7FWE+cvKPmjVtRgubW50/ULG3mW5g0rVophFFMsZj5&#xA;BrZ0WVfiLcZ434turDoFUF+UnmHTtWS/ZZoW1KdLe9kjtrKOwhNrOHW3liUPNM6t6b7zPzH8iVpi&#xA;qVS+T/NMfn97saU01lF5gfzGutJLb8pLf9DHTxYKjyJMJTLsOQEfEV5dsVQ+h+Q/NEX5pjXpdPuI&#xA;bZ9Uu9Tnvp7qGW2NrdactvFbpaLK5ju45TxaVY/sKR6jKQuKsi8nnUZPzF89JDqES2Nvqls91ppt&#xA;2aVml0WxWOQXPqBVBMf2eB+z13xVn2KqV3Z2l5bvbXkEdzbSikkEyq6MAa0ZWBB3xVLfMtvosegz&#xA;zajp0F/Z6fE0yWsscboOCFdhICifCSC3QLXtiq/y9rK6paTOEiR7WZraT6vL68BZFUn0peMfNRy4&#xA;n4RRgV6jFU0xV2KuxV2KuxVTuHmS3leGP1plRjHFyC82AqF5HpU7VxV5L+Xt/wDmrpraNoWoaaj2&#xA;djCsF/bxWElo0Z4UE0l/Nd3NtcfHVn9AFyd6Dpir17FUn85MV8oa4wYKV0+6IYgsBSFtyAQTiqZW&#xA;cvrWkMpkWUvGrGVFKKxIryVWLFQfAk0xVWxV2KuxVwIYAg1B3BHQjFUPqBcWU/CAXLcDSBvst7Eb&#xA;1GKsOtNS1jTvOOj6JbWqwaPd2xe4hADCIhJivxGklawqBuQFPHiKA4qzS7kaO1mkV1iZI2YSOpdV&#xA;IBPJkUqWA8ARXFUs8mvz8n6E/IPy0+1PNQQDWBNwCTTFWL+b5L9PzI8jQy6jE1nNqdxJbaYLZllU&#xA;x6Lfq8pueZVhV6cOAO/tir0DFXYq7FXYq8vuPOuu6d+YnmLTtN0ebzBcM1qIbdNUsrf0YltY2IS1&#xA;up423kkYl1Sh6VNNlWV+S9G0pLGLVf8ADFr5c1eX1o57eKGBZo1WVlCtLCKMGCK3wkqe2Kpt/iDQ&#xA;f0z+hP0la/poR+sdM9eP616X+/PR5epx96UxVEPqFhHfRWElzEl9OjywWjOoleOMqJHSMnkyoXXk&#xA;QNqjFWI+SZq+d/zDh+scuGq2T/VOFPT56NZD1PU/a9ThTj24++Ks1xV2KuxVKPL+v2GqIY7S3lto&#xA;0hguoFkVFWS2uefoyp6bOAr+m3wtRhTdRUYqh/MzeaBNB+hkkZBHIT6f1bibgMnpLceuVYQU5c/S&#xA;+PwptVVpdX10+a2082/+40PxDfVpx+6+riT6x9bJ+rn9+fR9Hjz/AGq0GKsgxV2KuxV2KuxVgnmz&#xA;yl5lvfOdjrmmmCSC1jtvS9W4kheBraWeWdI1WORWF8kscMhP2VStG6YqxnQbSbTPNOveWdVmeKXX&#xA;4PqI1C3L3EUl3P8AXblLif1QginktiAEHIfAFLfYBVUtN/MrSoYtN8vDXb0XGsj/AHHTNaWlszW1&#xA;yU9K7R5JlXg5uAY6fGf5MVemy6Rr0jwv+mnT0nL8VgjAeqMnFxXdfir8wMVd+iNe+set+mn+xw9P&#xA;0I+HWvKlftYqkMuuzWfmkaDJrFy91eSIPXNpG1tFNJA7x2/PlVWeO2dwKUr1ILAFVj7ee9JsIdM8&#xA;uRa3eI95NNo1o5tre3lRrJorZ5C1w8NKNOnEgcm6qpxVn0uka9I8L/pp09Jy/FYIwHqjJxcV3X4q&#xA;/MDFXfojXvrHrfpp/scPT9CPh1rypX7WKscvtZvbbzKPL6a7cpe3ssYF0bKKS2hmeB5I7fkWHFpI&#xA;7Z3ApSverAFVK/LH5teS9Nk0LyOn139JRRW9jEt2kFtJ6caRRRTzJJKhT1eQpHT1OoKDaqqc+dbi&#xA;nn38vrf61x5aneSfUvTrz46Pfj1fU7cOXHj35V7YqzfFXYq7FXYqx26i8u+Z9R1LRdT0hL2PSWhV&#xA;57qOJ4/VmjEwENS0isiMpLcR12OKpF+WPlnz75fL2muahb6jpf1aKNGF3cXMy3cJZZZF9aJOKSgi&#xA;sYaiFfhG5xVJpfJ/mmPz+92NKaayi8wP5jXWklt+Ulv+hjp4sFR5EmEpl2HICPiK8u2Kq9t5C84J&#xA;+clh50luo7jTrq0vYrqOaAJPZQutt9WseS3bo9HR3Dxx0B58uXNSqqZ+T4rqX8xfPTR6nPHb22qW&#xA;zT6UIY/QkMui2KpJ67R8+VU3VJNqCo+LdVn2KuxV2KpVcaHb22k6hb6FBBpt5dwyLFNAiwgTFCI3&#xA;Yop+yxrWhxV3lyy1K0tJo75qcpme2hM8l20URVRwaeYLI5Lhn+L7PLiNgMVQmg+bY9W1O4slijX0&#xA;hMVMcwmkT0JzAy3MYUeg7NuiljWjdCpGKsgxV2KuxV2KuxV2KpFf+SfL99rketzxSjUIwvF4p5ok&#xA;5xq6JKY0dUMiJK6ByK8Wp4UVSuD8pfJMEkbRW1wojKAR/XLr0zDEVMVsyepxa3jMa8IiOA8NzVVO&#xA;vNnmH/D2iyaobSS9WKSJGiiKqQJZFj5sXI+FeVTSp9sVY7H+Z6z+YZtLttNMlvb6kmmS3pmC/FIx&#xA;iV1Tga/voLlCvLb0wa/HRVVbzlpflbT9StPNGpwTKVmjhuLuK4mijhb05Y7edoY2CvJyl9BWpy/e&#xA;U8MVYPe+dPy5ltbXUtU0bV4jPPNdyx2jTSW0k1FuLuOVkkjjlWBrZeaMKEr8Ada1VekWur6n5j0S&#xA;W80VhZW93aTx2s0vw3cF9G7wkPGySw0jkQg/aFR3GKovyxrcuqWt3Hcx+lfaZdS2F6obmrSRBWWR&#xA;W4ptJE6PTjtWnauKqV95K8v3uvQ67NFKNRhMbK0c80cZeIMscjRI6xs6pK6ciK8WI8KKpRpf5QeS&#xA;9NECW6XjQwTfWRBLe3Ukbyeosw9VDJSUerGsnx1+Lr1NVUH5vW5j/MjyN6mpzyQ3Gp3Dw6UYE9CP&#xA;09Fv1aQXCx8+VW+w0m9TQbbKvQMVdirsVdiry3zZ5P0aXzBfap5g8sanqKXkimK/0XULthREWKNJ&#xA;bOCW0dGKoKsqyDuzqNgqy3yJY3mn6QLD9FPpOlwFzp9vdXX1q8pJI8jeuV9RBu/w/vpD/Ma4qm3+&#xA;INB/TP6E/SVr+mhH6x0z14/rXpf789Hl6nH3pTFVqeZfLj60+hJqtm2txr6j6WLiI3SpQNyMHL1A&#xA;KEGvHFWN+SXr53/MNPWnbjqtk31doqW6V0ayHOOb0xzkelJE9RuIVDxXlV1Wa4q7FXYq7FXYq0FU&#xA;EkAAsasR3NKVP0DFXlPl/wAmebvLXmd70yC6mu0iiFxCktx9aZrnldPfSzOPSKxU9Ij7IHGrkUdV&#xA;6virsVdirsVdirsVdiqld2dreW7213Ck9u9OcUihlNCCKg7bEVxVJL7yF5UvpCbnT4pLZ0KTWJRP&#xA;q8jGc3CSslP7yOWSVlYEf3j1rXZVR0j8vtD0yzSyjeaeyjvWv4rWdleJWMHoCLjxp6S/bVf598VX&#xA;af8Alx5HsbcQx6NayH00heaaJJJXSOJoEEkjAs5ETlKsa064qn1pZ2lnB6FpCkEIZ3EUahV5SOZH&#xA;NBtVnYsffFVHS9Js9MinjtQ3+k3E13O7sWZ5Z3LuST2FeKjsoAGwxVGYq7FWEedZKeffy+j9e5Fd&#xA;TvG+qrDW1amj349R5/SPGVa0RPVHJSx4NxqqrN8VdirsVdirsVdiryeXyf5pj8/vdjSmmsovMD+Y&#xA;11pJbflJb/oY6eLBUeRJhKZdhyAj4ivLtiqO0zSdXvfzEGp6r5Xu7Cws7mWfR5IDpa2yzT2voz31&#xA;80V011NcSKTCAIiqrT7X2lVRnk+2upfzF89TJqN7Fb22qW3qaaIrf6jKZdFsQHMzwNOZF4/EqTgA&#xA;car8W6rPsVdirsVdirsVdirsVdiqQaRo+t22u3N3dXPqWb/WOI+sTy+p60yyQ/uHHpQfV4wY/wB2&#xA;TzrU06YqiNY8y2ul3Ahkt57jjH691JCI+MEHLh6snN0ZhWu0YZtunSqqb4qlvmGfU4dO56erep6k&#xA;azvGglljgLASyRRnZ3Vegof9VvslVV0WXUJdLt5NRT07xlPqLQKaVPEsoLhWZaFlDGh2qcVRuKux&#xA;V2KuxVxIAqdgOpxVZBcQXESzQSLNC/2ZI2DKaGmxG2KpLq3mlNP1m304wo3qfVubvMsbn63ObdPQ&#xA;jIPq8GHKXdeK0pyJpiqe4q7FWAeb4bmP8yPI0jajfS29xqdwY9OaGD6hEY9Fv1LiZYFn9Vq7K85B&#xA;BYhdtlWf4q7FXYq7FXYq7FUi/wAc+Vv8T/4Y+u/7mq8PQ9Kb0/U9H6x6P1jh6Hq+j+89Pnz4/FSm&#xA;Kuh88eV5/MknluK8LavGzI0XpTCIyJGszxLcFPQaVIpFdo1csF3IxVJ/JLf87v8AmGvOc01WyPps&#xA;tLcV0ay3jfiKyGn7wcjQBNhXdVmuKuxV2KqV1dW1pazXd1IsNtbo0s8zmioiAszMT0AAqcVVEdJE&#xA;WRCGRwGVh0IO4IxVvFXYq7FVGe9s4J7e3mmSOe7ZktY2IDSMiGRgo7kIpb5DFVO70rS7yeCe8s4L&#xA;me2PK2lmjR3jNVaqMwJX4kU7eAxVFYq7FXYqo297aXEtzDBMkstnIILtFIJjlMaTBHHY+nKjU8CM&#xA;VVsVdirsVQWuWtpd6JqFpey+hZ3FtNFczfD8ETxlXb4wy7KSdxTFUN5b0yKzs5Zo7hLn9IyC7aWF&#xA;BFCeUSRr6UYLcVKRqftGpqe+KpqURmVmUFkrxYjcV2NMVbxV2KsI86t/zvv5fL6lyK6neH0lStqa&#xA;aPf/ABPJx2lH7C8915bGlQqzfFXYq7FXYq7FXYq82k/L3zMvnF76F7KTQ01p/MsBeWVLtrs6WdPW&#xA;1dRE8axcjz9UMWp8PDvirWn+RPMVr5ui1jUJbKPRbHU7zzArRSyyXHr3unm0kt2RokT04jJIwlD1&#xA;YcRwXfFWOeXtOs/O3m1tRvX1fQR5htLbzPplrZapyt54ohDaxTzQCCP0Z1jjt2Kh3G4+LYjFWaj8&#xA;ptLDq41zW+S3LXqn68drhlKGT7PXixGKug/KbS4Gt2h1zW0a1aZ7ci+PwNcMWlI+H9oscVag/KPS&#xA;YBbCHW9aQWlvJaWwF8fggmKGRB8PRjCn3YqlPmf8tdL0jy1fXcVzr+qpa6e1mdOg1CNGezC0aLlO&#xA;YkCBd2+LlTpU7FVW0X8t9I17y9a6pLqutRLrem2guLf6+WpAUaWOEsEWoQ3D70HXFUxn/KbS52uG&#xA;m1zW3a6aF7gm+PxtbsGiJ+H9kqMVc/5TaW7zO2ua2WnuYr2Y/Xj8VxCsaRyfZ6qsKD6MVcPym0sO&#xA;rjXNb5Lcteqfrx2uGUoZPs9eLEYqwrznoQ8rXfr20eu3umaIDqt1qcmpvbiOXUriWKVbIG3lW4uD&#xA;6kjvGXSgZRWrAYqzW2/KbS7ZrZoNc1tGs1lS2Ivj8CzsGkAqv7RUYqsh/KDRoYYII9a1pYre0Onw&#xA;IL5qLakKDEPh6UjX32xV035QaNNDPBJrWtNFcWg0+dDfNRrUBgIj8PSkje++Kr7j8ptLuZJ5J9c1&#xA;t3ufQ9djfH4vqzmSGtF/Yc1GKsH8p6NBrXm3VNA1ObUtP1IelrV4ltriX0sVxC0UEC36xQRpBcel&#xA;DEyorupVeu26rOB+U2lh1ca5rfJblr1T9eO1wylDJ9nrxYjFXRflNpcTQtHrmtq1vPPdQkXx+Ga6&#xA;Z2mcfD1czPX54q62/KbS7ZrZoNc1tGs1lS2Ivj8CzsGkAqv7RUYqlusflx5V0DQJb291zW49N0yw&#xA;ayCLeM5+qEKv1dF41cvwVVXqTQYql/kjyPpHm7ybb6tPd65p6anaSabcac+oGQpbQSywegzCNP8A&#xA;K6DavXFWRXP5TaXctctPrmtu14sSXJN8fjWBi0YNF/ZLHFXS/lNpcrTNJrmts1xPBdTE3x+Ka1ZG&#xA;hc/D1QwpT5Yq4/lNpZdnOua3ya5W9Y/XjvcKoQSfZ68VAxV59rDaP5O/NPTrOO81DUPqQTVpZNV1&#xA;K7/R9vPqbz2JkZLewvEV2EslGmljWrgVxV7zirsVdirsVdirsVdiq2WKOWJ4pByjkUq6+IYUIxVh&#xA;fkf8ubny5e29xeasNTTTNNTRNFjW3FuYLGNw9Jm9SX1pSI41LgIKL9mpOKs2xV2KuxVC6rZfX9Mv&#xA;LHn6f1uCSD1KcuPqIV5UqK0r44qpeX9K/Q+gabpPq+v+jrWC09bjw5+hGsfLjVuPLjWlTiqPxV2K&#xA;uxVhXmfyP5g1bzXa63b6tY/VLGKMWWl6lp817DDcI7M11GI720T1mDKoZ0Ypx+GlWqqntz5nsLbX&#xA;G02d44YYoYnubyaVY0Sa7m9G0t1DfaeZlegrXZRQ8xiqrf65DFoN1rGnBdUito5JQltIG9QQEiVI&#xA;2XmC44MAv8woaYqhl89eSW1KHSh5g039KXIjNvp/1uAXDiZQ8fGHn6h5qwZdtxiqeHp4e+KsN0Dy&#xA;Rrtt5ng8w+YNdj1m9sbGbTbJ4rJbJzFcTJK73RSWRZZP3KAcEjQbnjvirMsVdirsVSrzJ5Y0bzHY&#xA;JY6tFJJbxTR3MXozz2sizQnlG6y27xSAq24o3XFUH5C8nQeUPLcWiQ3Ut6scs8xnmeVyTPK0lAJp&#xA;JioUMBs1Cat1Y4qyHFXYq7FWI+dfJmu+ZfWsBrq2vly+jih1LTGs1lkZY5echt7kSRGIzJ8D81kA&#xA;AqoU1qqy7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwfW/L9y155qtksDfprlkb+w&#xA;ZgKJfwWwszEJmPGElFhaLcbmRh0OKpVrPmTzZ5QuPL/l7RPLj39lJYH1GiillIulRqI8sdIox6gU&#xA;u7Vry/Z64qmCeRdQ0KXQtX07UXk/w5o02nXVgLf1XvU/dTBYW5/uWaS3AoEb4TxXjQHFUu/Lz8x/&#xA;OfmHU7S01jRf0cjxSNccrS+h6NIUkSWVDCq8VjBRnqS1QabYq9OxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>10.611111</stDim:w>
            <stDim:h>9.111111</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -650.735 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 650.735 li
860.43 650.735 li
860.43 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
662.664 167.831 mo
663.784 167.946 li
664.856 168.272 li
665.849 168.801 li
666.721 169.513 li
667.434 170.385 li
667.962 171.378 li
668.29 172.452 li
668.405 173.571 li
668.29 174.69 li
667.962 175.764 li
667.434 176.757 li
666.721 177.629 li
665.849 178.342 li
664.856 178.87 li
663.784 179.197 li
662.664 179.311 li
661.544 179.197 li
660.47 178.87 li
659.478 178.342 li
658.605 177.629 li
657.893 176.757 li
657.365 175.764 li
657.039 174.69 li
656.923 173.571 li
657.039 172.452 li
657.365 171.378 li
657.893 170.385 li
658.605 169.513 li
659.478 168.801 li
660.47 168.272 li
661.544 167.946 li
662.664 167.831 li
621.538 172.556 mo
622.656 172.671 li
623.73 172.997 li
624.723 173.526 li
625.595 174.238 li
626.307 175.11 li
626.835 176.103 li
627.162 177.177 li
627.277 178.296 li
627.162 179.415 li
626.835 180.489 li
626.307 181.481 li
625.595 182.354 li
624.723 183.067 li
623.73 183.595 li
622.656 183.922 li
621.538 184.038 li
620.418 183.922 li
619.344 183.595 li
618.351 183.067 li
617.479 182.354 li
616.766 181.481 li
616.238 180.489 li
615.911 179.415 li
615.795 178.296 li
615.911 177.177 li
616.238 176.103 li
616.766 175.11 li
617.479 174.238 li
618.351 173.526 li
619.344 172.997 li
620.418 172.671 li
621.538 172.556 li
455.686 172.833 mo
456.804 172.948 li
457.878 173.274 li
458.872 173.803 li
459.744 174.514 li
460.456 175.387 li
460.983 176.379 li
461.31 177.454 li
461.425 178.573 li
461.31 179.693 li
460.983 180.766 li
460.456 181.76 li
459.744 182.631 li
458.872 183.344 li
457.878 183.872 li
456.804 184.199 li
455.686 184.314 li
454.565 184.199 li
453.493 183.872 li
452.499 183.344 li
451.627 182.631 li
450.915 181.76 li
450.387 180.766 li
450.059 179.693 li
449.944 178.573 li
450.059 177.454 li
450.387 176.379 li
450.915 175.387 li
451.627 174.514 li
452.499 173.803 li
453.493 173.274 li
454.565 172.948 li
455.686 172.833 li
395.057 172.797 mo
396.176 172.913 li
397.25 173.239 li
398.243 173.768 li
399.116 174.479 li
399.827 175.352 li
400.356 176.344 li
400.682 177.418 li
400.797 178.537 li
400.682 179.656 li
400.356 180.73 li
399.827 181.723 li
399.116 182.596 li
398.243 183.309 li
397.25 183.836 li
396.176 184.164 li
395.057 184.277 li
393.938 184.164 li
392.864 183.836 li
391.872 183.309 li
390.999 182.596 li
390.286 181.723 li
389.758 180.73 li
389.431 179.656 li
389.317 178.537 li
389.431 177.418 li
389.758 176.344 li
390.286 175.352 li
390.999 174.479 li
391.872 173.768 li
392.864 173.239 li
393.938 172.913 li
395.057 172.797 li
359.662 172.144 mo
360.78 172.259 li
361.853 172.586 li
362.847 173.114 li
363.72 173.825 li
364.431 174.698 li
364.958 175.69 li
365.287 176.765 li
365.401 177.884 li
365.287 179.004 li
364.958 180.077 li
364.431 181.071 li
363.72 181.942 li
362.847 182.655 li
361.853 183.183 li
360.78 183.51 li
359.662 183.625 li
358.541 183.51 li
357.468 183.183 li
356.474 182.655 li
355.602 181.942 li
354.89 181.071 li
354.363 180.077 li
354.035 179.004 li
353.92 177.884 li
354.035 176.765 li
354.363 175.69 li
354.89 174.698 li
355.602 173.825 li
356.474 173.114 li
357.468 172.586 li
358.541 172.259 li
359.662 172.144 li
313.595 168.972 mo
314.714 169.087 li
315.786 169.415 li
316.78 169.942 li
317.653 170.656 li
318.364 171.528 li
318.892 172.521 li
319.22 173.593 li
319.335 174.714 li
319.22 175.833 li
318.892 176.907 li
318.364 177.899 li
317.653 178.772 li
316.78 179.483 li
315.786 180.013 li
314.714 180.339 li
313.595 180.454 li
312.474 180.339 li
311.402 180.013 li
310.408 179.483 li
309.535 178.772 li
308.824 177.899 li
308.296 176.907 li
307.968 175.833 li
307.853 174.714 li
307.968 173.593 li
308.296 172.521 li
308.824 171.528 li
309.535 170.656 li
310.408 169.942 li
311.402 169.415 li
312.474 169.087 li
313.595 168.972 li
302.184 168.034 mo
303.304 168.149 li
304.376 168.475 li
305.369 169.004 li
306.242 169.716 li
306.955 170.588 li
307.482 171.581 li
307.81 172.655 li
307.925 173.774 li
307.81 174.895 li
307.482 175.967 li
306.955 176.96 li
306.242 177.833 li
305.369 178.545 li
304.376 179.073 li
303.304 179.4 li
302.184 179.516 li
301.065 179.4 li
299.991 179.073 li
298.998 178.545 li
298.125 177.833 li
297.414 176.96 li
296.885 175.967 li
296.559 174.895 li
296.444 173.774 li
296.559 172.655 li
296.885 171.581 li
297.414 170.588 li
298.125 169.716 li
298.998 169.004 li
299.991 168.475 li
301.065 168.149 li
302.184 168.034 li
306.258 166.42 mo
307.377 166.533 li
308.449 166.861 li
309.444 167.388 li
310.316 168.101 li
311.028 168.974 li
311.555 169.967 li
311.883 171.041 li
311.998 172.16 li
311.883 173.278 li
311.555 174.353 li
311.028 175.345 li
310.316 176.218 li
309.444 176.929 li
308.449 177.458 li
307.377 177.785 li
306.258 177.899 li
305.138 177.785 li
304.065 177.458 li
303.071 176.929 li
302.198 176.218 li
301.487 175.345 li
300.959 174.353 li
300.631 173.278 li
300.517 172.16 li
300.631 171.041 li
300.959 169.967 li
301.487 168.974 li
302.198 168.101 li
303.071 167.388 li
304.065 166.861 li
305.138 166.533 li
306.258 166.42 li
281.928 164.909 mo
283.047 165.024 li
284.122 165.35 li
285.114 165.879 li
285.987 166.591 li
286.698 167.463 li
287.227 168.456 li
287.553 169.53 li
287.668 170.649 li
287.553 171.77 li
287.227 172.842 li
286.698 173.835 li
285.987 174.708 li
285.114 175.42 li
284.122 175.948 li
283.047 176.275 li
281.928 176.391 li
280.808 176.275 li
279.735 175.948 li
278.743 175.42 li
277.87 174.708 li
277.157 173.835 li
276.629 172.842 li
276.302 171.77 li
276.187 170.649 li
276.302 169.53 li
276.629 168.456 li
277.157 167.463 li
277.87 166.591 li
278.743 165.879 li
279.735 165.35 li
280.808 165.024 li
281.928 164.909 li
261.446 164.006 mo
262.565 164.121 li
263.639 164.449 li
264.632 164.977 li
265.504 165.689 li
266.217 166.562 li
266.745 167.555 li
267.073 168.627 li
267.188 169.748 li
267.073 170.867 li
266.745 171.94 li
266.217 172.933 li
265.504 173.806 li
264.632 174.518 li
263.639 175.046 li
262.565 175.373 li
261.446 175.488 li
260.327 175.373 li
259.253 175.046 li
258.26 174.518 li
257.388 173.806 li
256.676 172.933 li
256.147 171.94 li
255.821 170.867 li
255.706 169.748 li
255.821 168.627 li
256.147 167.555 li
256.676 166.562 li
257.388 165.689 li
258.26 164.977 li
259.253 164.449 li
260.327 164.121 li
261.446 164.006 li
277.883 163.024 mo
279.003 163.14 li
280.076 163.466 li
281.07 163.995 li
281.941 164.706 li
282.654 165.579 li
283.182 166.571 li
283.509 167.646 li
283.624 168.765 li
283.509 169.885 li
283.182 170.958 li
282.654 171.952 li
281.941 172.823 li
281.07 173.536 li
280.076 174.063 li
279.003 174.391 li
277.883 174.506 li
276.764 174.391 li
275.689 174.063 li
274.697 173.536 li
273.824 172.823 li
273.113 171.952 li
272.584 170.958 li
272.258 169.885 li
272.143 168.765 li
272.258 167.646 li
272.584 166.571 li
273.113 165.579 li
273.824 164.706 li
274.697 163.995 li
275.689 163.466 li
276.764 163.14 li
277.883 163.024 li
244.811 162.432 mo
245.932 162.547 li
247.004 162.875 li
247.999 163.402 li
248.871 164.115 li
249.583 164.986 li
250.11 165.98 li
250.438 167.053 li
250.553 168.173 li
250.438 169.292 li
250.11 170.366 li
249.583 171.359 li
248.871 172.231 li
247.999 172.943 li
247.004 173.47 li
245.932 173.798 li
244.811 173.913 li
243.692 173.798 li
242.62 173.47 li
241.625 172.943 li
240.753 172.231 li
240.042 171.359 li
239.514 170.366 li
239.186 169.292 li
239.071 168.173 li
239.186 167.053 li
239.514 165.98 li
240.042 164.986 li
240.753 164.115 li
241.625 163.402 li
242.62 162.875 li
243.692 162.547 li
244.811 162.432 li
221.71 162.465 mo
222.831 162.579 li
223.904 162.906 li
224.898 163.436 li
225.769 164.146 li
226.482 165.02 li
227.009 166.012 li
227.337 167.086 li
227.452 168.205 li
227.337 169.324 li
227.009 170.398 li
226.482 171.391 li
225.769 172.264 li
224.898 172.975 li
223.904 173.504 li
222.831 173.832 li
221.71 173.945 li
220.592 173.832 li
219.518 173.504 li
218.525 172.975 li
217.652 172.264 li
216.941 171.391 li
216.414 170.398 li
216.086 169.324 li
215.971 168.205 li
216.086 167.086 li
216.414 166.012 li
216.941 165.02 li
217.652 164.146 li
218.525 163.436 li
219.518 162.906 li
220.592 162.579 li
221.71 162.465 li
217.411 159.738 mo
218.531 159.854 li
219.604 160.179 li
220.598 160.708 li
221.469 161.42 li
222.182 162.292 li
222.709 163.285 li
223.037 164.359 li
223.152 165.478 li
223.037 166.597 li
222.709 167.671 li
222.182 168.664 li
221.469 169.537 li
220.598 170.25 li
219.604 170.777 li
218.531 171.104 li
217.411 171.218 li
216.292 171.104 li
215.218 170.777 li
214.225 170.25 li
213.353 169.537 li
212.641 168.664 li
212.114 167.671 li
211.786 166.597 li
211.671 165.478 li
211.786 164.359 li
212.114 163.285 li
212.641 162.292 li
213.353 161.42 li
214.225 160.708 li
215.218 160.179 li
216.292 159.854 li
217.411 159.738 li
210.282 153.193 mo
211.402 153.308 li
212.475 153.636 li
213.469 154.163 li
214.34 154.874 li
215.053 155.747 li
215.581 156.741 li
215.908 157.813 li
216.023 158.934 li
215.908 160.053 li
215.581 161.125 li
215.053 162.12 li
214.34 162.993 li
213.469 163.704 li
212.475 164.231 li
211.402 164.559 li
210.282 164.674 li
209.163 164.559 li
208.089 164.231 li
207.096 163.704 li
206.224 162.993 li
205.512 162.12 li
204.983 161.125 li
204.657 160.053 li
204.542 158.934 li
204.657 157.813 li
204.983 156.741 li
205.512 155.747 li
206.224 154.874 li
207.096 154.163 li
208.089 153.636 li
209.163 153.308 li
210.282 153.193 li
186.273 144.785 mo
187.393 144.9 li
188.466 145.226 li
189.459 145.755 li
190.332 146.466 li
191.043 147.339 li
191.572 148.332 li
191.9 149.406 li
192.013 150.525 li
191.9 151.646 li
191.572 152.718 li
191.043 153.71 li
190.332 154.583 li
189.459 155.296 li
188.466 155.824 li
187.393 156.151 li
186.273 156.267 li
185.155 156.151 li
184.081 155.824 li
183.088 155.296 li
182.215 154.583 li
181.504 153.71 li
180.975 152.718 li
180.647 151.646 li
180.534 150.525 li
180.647 149.406 li
180.975 148.332 li
181.504 147.339 li
182.215 146.466 li
183.088 145.755 li
184.081 145.226 li
185.155 144.9 li
186.273 144.785 li
186.085 134.827 mo
187.204 134.942 li
188.278 135.27 li
189.271 135.797 li
190.143 136.508 li
190.854 137.381 li
191.382 138.375 li
191.709 139.448 li
191.825 140.568 li
191.709 141.687 li
191.382 142.76 li
190.854 143.754 li
190.143 144.627 li
189.271 145.338 li
188.278 145.865 li
187.204 146.193 li
186.085 146.308 li
184.964 146.193 li
183.892 145.865 li
182.897 145.338 li
182.026 144.627 li
181.313 143.754 li
180.786 142.76 li
180.458 141.687 li
180.343 140.568 li
180.458 139.448 li
180.786 138.375 li
181.313 137.381 li
182.026 136.508 li
182.897 135.797 li
183.892 135.27 li
184.964 134.942 li
186.085 134.827 li
179.984 115.748 mo
181.103 115.863 li
182.177 116.19 li
183.169 116.718 li
184.042 117.429 li
184.753 118.302 li
185.281 119.295 li
185.608 120.369 li
185.724 121.488 li
185.608 122.608 li
185.281 123.681 li
184.753 124.675 li
184.042 125.546 li
183.169 126.259 li
182.177 126.787 li
181.103 127.114 li
179.984 127.229 li
178.863 127.114 li
177.791 126.787 li
176.796 126.259 li
175.925 125.546 li
175.212 124.675 li
174.685 123.681 li
174.357 122.608 li
174.242 121.488 li
174.357 120.369 li
174.685 119.295 li
175.212 118.302 li
175.925 117.429 li
176.796 116.718 li
177.791 116.19 li
178.863 115.863 li
179.984 115.748 li
167.078 92.1519 mo
168.198 92.2671 li
169.271 92.5947 li
170.265 93.1221 li
171.136 93.835 li
171.849 94.708 li
172.376 95.7002 li
172.705 96.7729 li
172.819 97.8936 li
172.705 99.0122 li
172.376 100.086 li
171.849 101.079 li
171.136 101.952 li
170.265 102.663 li
169.271 103.192 li
168.198 103.519 li
167.078 103.633 li
165.959 103.519 li
164.885 103.192 li
163.892 102.663 li
163.02 101.952 li
162.308 101.079 li
161.781 100.086 li
161.453 99.0122 li
161.338 97.8936 li
161.453 96.7729 li
161.781 95.7002 li
162.308 94.708 li
163.02 93.835 li
163.892 93.1221 li
164.885 92.5947 li
165.959 92.2671 li
167.078 92.1519 li
168.695 75.1299 mo
169.814 75.2451 li
170.889 75.5713 li
171.881 76.1006 li
172.754 76.8115 li
173.465 77.6846 li
173.994 78.6772 li
174.32 79.751 li
174.436 80.8701 li
174.32 81.9907 li
173.994 83.063 li
173.465 84.0576 li
172.754 84.9287 li
171.881 85.6416 li
170.889 86.1689 li
169.814 86.4966 li
168.695 86.6118 li
167.575 86.4966 li
166.502 86.1689 li
165.51 85.6416 li
164.637 84.9287 li
163.924 84.0576 li
163.396 83.063 li
163.069 81.9907 li
162.954 80.8701 li
163.069 79.751 li
163.396 78.6772 li
163.924 77.6846 li
164.637 76.8115 li
165.51 76.1006 li
166.502 75.5713 li
167.575 75.2451 li
168.695 75.1299 li
159.357 57.6943 mo
160.477 57.8096 li
161.55 58.1372 li
162.543 58.6646 li
163.416 59.3774 li
164.129 60.2505 li
164.656 61.2432 li
164.984 62.3154 li
165.099 63.436 li
164.984 64.5547 li
164.656 65.6289 li
164.129 66.6216 li
163.416 67.4946 li
162.543 68.2056 li
161.55 68.7349 li
160.477 69.061 li
159.357 69.1758 li
158.239 69.061 li
157.165 68.7349 li
156.172 68.2056 li
155.299 67.4946 li
154.588 66.6216 li
154.059 65.6289 li
153.732 64.5547 li
153.618 63.436 li
153.732 62.3154 li
154.059 61.2432 li
154.588 60.2505 li
155.299 59.3774 li
156.172 58.6646 li
157.165 58.1372 li
158.239 57.8096 li
159.357 57.6943 li
142.405 14.6343 mo
143.524 14.7495 li
144.598 15.0771 li
145.59 15.6045 li
146.463 16.3174 li
147.176 17.1904 li
147.703 18.1826 li
148.031 19.2568 li
148.146 20.376 li
148.031 21.4951 li
147.703 22.5688 li
147.176 23.5615 li
146.463 24.4346 li
145.59 25.1455 li
144.598 25.6748 li
143.524 26.001 li
142.405 26.1157 li
141.286 26.001 li
140.212 25.6748 li
139.219 25.1455 li
138.347 24.4346 li
137.634 23.5615 li
137.106 22.5688 li
136.779 21.4951 li
136.665 20.376 li
136.779 19.2568 li
137.106 18.1826 li
137.634 17.1904 li
138.347 16.3174 li
139.219 15.6045 li
140.212 15.0771 li
141.286 14.7495 li
142.405 14.6343 li
116.288 20.2158 mo
117.407 20.3311 li
118.481 20.6572 li
119.474 21.1865 li
120.347 21.8975 li
121.058 22.7705 li
121.586 23.7632 li
121.914 24.8369 li
122.029 25.9561 li
121.914 27.0767 li
121.586 28.1489 li
121.058 29.1436 li
120.347 30.0146 li
119.474 30.7275 li
118.481 31.2549 li
117.407 31.5825 li
116.288 31.6978 li
115.168 31.5825 li
114.095 31.2549 li
113.102 30.7275 li
112.229 30.0146 li
111.518 29.1436 li
110.989 28.1489 li
110.662 27.0767 li
110.547 25.9561 li
110.662 24.8369 li
110.989 23.7632 li
111.518 22.7705 li
112.229 21.8975 li
113.102 21.1865 li
114.095 20.6572 li
115.168 20.3311 li
116.288 20.2158 li
133.727 53.5146 mo
134.847 53.6299 li
135.92 53.9556 li
136.913 54.4849 li
137.786 55.1963 li
138.498 56.0688 li
139.025 57.0615 li
139.353 58.1357 li
139.468 59.2544 li
139.353 60.375 li
139.025 61.4478 li
138.498 62.4419 li
137.786 63.313 li
136.913 64.0259 li
135.92 64.5532 li
134.847 64.8809 li
133.727 64.9961 li
132.608 64.8809 li
131.534 64.5532 li
130.541 64.0259 li
129.668 63.313 li
128.957 62.4419 li
128.429 61.4478 li
128.101 60.375 li
127.986 59.2544 li
128.101 58.1357 li
128.429 57.0615 li
128.957 56.0688 li
129.668 55.1963 li
130.541 54.4849 li
131.534 53.9556 li
132.608 53.6299 li
133.727 53.5146 li
118.066 71.6279 mo
119.185 71.7432 li
120.259 72.0708 li
121.252 72.5981 li
122.125 73.3096 li
122.836 74.1821 li
123.364 75.1768 li
123.691 76.249 li
123.806 77.3696 li
123.691 78.4883 li
123.364 79.561 li
122.836 80.5552 li
122.125 81.4277 li
121.252 82.1392 li
120.259 82.667 li
119.185 82.9946 li
118.066 83.1094 li
116.946 82.9946 li
115.873 82.667 li
114.879 82.1392 li
114.007 81.4277 li
113.295 80.5552 li
112.767 79.561 li
112.44 78.4883 li
112.325 77.3696 li
112.44 76.249 li
112.767 75.1768 li
113.295 74.1821 li
114.007 73.3096 li
114.879 72.5981 li
115.873 72.0708 li
116.946 71.7432 li
118.066 71.6279 li
130.153 78.3237 mo
131.273 78.4375 li
132.346 78.7651 li
133.339 79.2925 li
134.212 80.0054 li
134.924 80.8779 li
135.452 81.8706 li
135.779 82.9448 li
135.894 84.064 li
135.779 85.1826 li
135.452 86.2568 li
134.924 87.2495 li
134.212 88.1221 li
133.339 88.8335 li
132.346 89.3623 li
131.273 89.6885 li
130.153 89.8037 li
129.034 89.6885 li
127.96 89.3623 li
126.967 88.8335 li
126.095 88.1221 li
125.383 87.2495 li
124.855 86.2568 li
124.528 85.1826 li
124.413 84.064 li
124.528 82.9448 li
124.855 81.8706 li
125.383 80.8779 li
126.095 80.0054 li
126.967 79.2925 li
127.96 78.7651 li
129.034 78.4375 li
130.153 78.3237 li
157.515 80.3682 mo
158.635 80.4834 li
159.708 80.811 li
160.702 81.3384 li
161.575 82.0498 li
162.286 82.9224 li
162.813 83.915 li
163.141 84.9893 li
163.256 86.1084 li
163.141 87.2285 li
162.813 88.3013 li
162.286 89.2954 li
161.575 90.1665 li
160.702 90.8794 li
159.708 91.4072 li
158.635 91.7344 li
157.515 91.8496 li
156.396 91.7344 li
155.323 91.4072 li
154.329 90.8794 li
153.456 90.1665 li
152.745 89.2954 li
152.217 88.3013 li
151.89 87.2285 li
151.774 86.1084 li
151.89 84.9893 li
152.217 83.915 li
152.745 82.9224 li
153.456 82.0498 li
154.329 81.3384 li
155.323 80.811 li
156.396 80.4834 li
157.515 80.3682 li
141.767 88.5508 mo
142.886 88.6655 li
143.96 88.9932 li
144.953 89.521 li
145.825 90.2319 li
146.538 91.105 li
147.065 92.0991 li
147.393 93.1719 li
147.507 94.2905 li
147.393 95.4111 li
147.065 96.4834 li
146.538 97.4775 li
145.825 98.3506 li
144.953 99.062 li
143.96 99.5894 li
142.886 99.917 li
141.767 100.032 li
140.647 99.917 li
139.574 99.5894 li
138.581 99.062 li
137.708 98.3506 li
136.997 97.4775 li
136.468 96.4834 li
136.141 95.4111 li
136.026 94.2905 li
136.141 93.1719 li
136.468 92.0991 li
136.997 91.105 li
137.708 90.2319 li
138.581 89.521 li
139.574 88.9932 li
140.647 88.6655 li
141.767 88.5508 li
156.104 105.745 mo
157.224 105.858 li
158.298 106.186 li
159.291 106.713 li
160.163 107.426 li
160.875 108.299 li
161.402 109.292 li
161.729 110.366 li
161.845 111.485 li
161.729 112.604 li
161.402 113.678 li
160.875 114.67 li
160.163 115.543 li
159.291 116.254 li
158.298 116.784 li
157.224 117.11 li
156.104 117.225 li
154.984 117.11 li
153.912 116.784 li
152.917 116.254 li
152.046 115.543 li
151.333 114.67 li
150.806 113.678 li
150.478 112.604 li
150.363 111.485 li
150.478 110.366 li
150.806 109.292 li
151.333 108.299 li
152.046 107.426 li
152.917 106.713 li
153.912 106.186 li
154.984 105.858 li
156.104 105.745 li
159.807 105.512 mo
160.927 105.626 li
162 105.954 li
162.994 106.482 li
163.865 107.193 li
164.578 108.066 li
165.105 109.06 li
165.433 110.133 li
165.548 111.253 li
165.433 112.372 li
165.105 113.444 li
164.578 114.438 li
163.865 115.312 li
162.994 116.023 li
162 116.55 li
160.927 116.878 li
159.807 116.993 li
158.688 116.878 li
157.614 116.55 li
156.621 116.023 li
155.748 115.312 li
155.037 114.438 li
154.509 113.444 li
154.182 112.372 li
154.067 111.253 li
154.182 110.133 li
154.509 109.06 li
155.037 108.066 li
155.748 107.193 li
156.621 106.482 li
157.614 105.954 li
158.688 105.626 li
159.807 105.512 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
160.927 105.626 mo
162 105.954 li
159.807 105.512 li
160.927 105.626 li
cp
f
162 105.954 mo
162.994 106.482 li
159.807 105.512 li
162 105.954 li
cp
f
162.994 106.482 mo
163.865 107.193 li
159.807 105.512 li
162.994 106.482 li
cp
f
163.865 107.193 mo
164.578 108.066 li
159.807 105.512 li
163.865 107.193 li
cp
f
164.578 108.066 mo
165.105 109.06 li
159.807 105.512 li
164.578 108.066 li
cp
f
165.105 109.06 mo
165.433 110.133 li
159.807 105.512 li
165.105 109.06 li
cp
f
165.433 110.133 mo
165.548 111.253 li
159.807 105.512 li
165.433 110.133 li
cp
f
165.548 111.253 mo
165.433 112.372 li
159.807 105.512 li
165.548 111.253 li
cp
f
165.433 112.372 mo
165.105 113.444 li
159.807 105.512 li
165.433 112.372 li
cp
f
165.105 113.444 mo
164.578 114.438 li
159.807 105.512 li
165.105 113.444 li
cp
f
164.578 114.438 mo
163.865 115.312 li
159.807 105.512 li
164.578 114.438 li
cp
f
163.865 115.312 mo
162.994 116.023 li
159.807 105.512 li
163.865 115.312 li
cp
f
162.994 116.023 mo
162 116.55 li
159.807 105.512 li
162.994 116.023 li
cp
f
162 116.55 mo
160.927 116.878 li
159.807 105.512 li
162 116.55 li
cp
f
160.927 116.878 mo
159.807 116.993 li
159.807 105.512 li
160.927 116.878 li
cp
f
159.807 116.993 mo
158.688 116.878 li
159.807 105.512 li
159.807 116.993 li
cp
f
158.688 116.878 mo
157.614 116.55 li
159.807 105.512 li
158.688 116.878 li
cp
f
157.614 116.55 mo
156.621 116.023 li
159.807 105.512 li
157.614 116.55 li
cp
f
156.621 116.023 mo
155.748 115.312 li
159.807 105.512 li
156.621 116.023 li
cp
f
155.748 115.312 mo
155.037 114.438 li
159.807 105.512 li
155.748 115.312 li
cp
f
155.037 114.438 mo
154.509 113.444 li
159.807 105.512 li
155.037 114.438 li
cp
f
154.509 113.444 mo
154.182 112.372 li
159.807 105.512 li
154.509 113.444 li
cp
f
154.182 112.372 mo
154.067 111.253 li
159.807 105.512 li
154.182 112.372 li
cp
f
154.067 111.253 mo
154.182 110.133 li
159.807 105.512 li
154.067 111.253 li
cp
f
154.182 110.133 mo
154.509 109.06 li
159.807 105.512 li
154.182 110.133 li
cp
f
154.509 109.06 mo
155.037 108.066 li
159.807 105.512 li
154.509 109.06 li
cp
f
155.037 108.066 mo
155.748 107.193 li
159.807 105.512 li
155.037 108.066 li
cp
f
155.748 107.193 mo
156.621 106.482 li
159.807 105.512 li
155.748 107.193 li
cp
f
156.621 106.482 mo
157.614 105.954 li
159.807 105.512 li
156.621 106.482 li
cp
f
157.614 105.954 mo
158.688 105.626 li
159.807 105.512 li
157.614 105.954 li
cp
f
158.688 105.626 mo
159.807 105.512 li
159.807 105.512 li
158.688 105.626 li
cp
f
159.807 105.512 mo
160.927 105.626 li
162 105.954 li
162.994 106.482 li
163.865 107.193 li
164.578 108.066 li
165.105 109.06 li
165.433 110.133 li
165.548 111.253 li
165.433 112.372 li
165.105 113.444 li
164.578 114.438 li
163.865 115.312 li
162.994 116.023 li
162 116.55 li
160.927 116.878 li
159.807 116.993 li
158.688 116.878 li
157.614 116.55 li
156.621 116.023 li
155.748 115.312 li
155.037 114.438 li
154.509 113.444 li
154.182 112.372 li
154.067 111.253 li
154.182 110.133 li
154.509 109.06 li
155.037 108.066 li
155.748 107.193 li
156.621 106.482 li
157.614 105.954 li
158.688 105.626 li
159.807 105.512 li
@
157.224 105.858 mo
158.298 106.186 li
156.104 105.745 li
157.224 105.858 li
cp
f
158.298 106.186 mo
159.291 106.713 li
156.104 105.745 li
158.298 106.186 li
cp
f
159.291 106.713 mo
160.163 107.426 li
156.104 105.745 li
159.291 106.713 li
cp
f
160.163 107.426 mo
160.875 108.299 li
156.104 105.745 li
160.163 107.426 li
cp
f
160.875 108.299 mo
161.402 109.292 li
156.104 105.745 li
160.875 108.299 li
cp
f
161.402 109.292 mo
161.729 110.366 li
156.104 105.745 li
161.402 109.292 li
cp
f
161.729 110.366 mo
161.845 111.485 li
156.104 105.745 li
161.729 110.366 li
cp
f
161.845 111.485 mo
161.729 112.604 li
156.104 105.745 li
161.845 111.485 li
cp
f
161.729 112.604 mo
161.402 113.678 li
156.104 105.745 li
161.729 112.604 li
cp
f
161.402 113.678 mo
160.875 114.67 li
156.104 105.745 li
161.402 113.678 li
cp
f
160.875 114.67 mo
160.163 115.543 li
156.104 105.745 li
160.875 114.67 li
cp
f
160.163 115.543 mo
159.291 116.254 li
156.104 105.745 li
160.163 115.543 li
cp
f
159.291 116.254 mo
158.298 116.784 li
156.104 105.745 li
159.291 116.254 li
cp
f
158.298 116.784 mo
157.224 117.11 li
156.104 105.745 li
158.298 116.784 li
cp
f
157.224 117.11 mo
156.104 117.225 li
156.104 105.745 li
157.224 117.11 li
cp
f
156.104 117.225 mo
154.984 117.11 li
156.104 105.745 li
156.104 117.225 li
cp
f
154.984 117.11 mo
153.912 116.784 li
156.104 105.745 li
154.984 117.11 li
cp
f
153.912 116.784 mo
152.917 116.254 li
156.104 105.745 li
153.912 116.784 li
cp
f
152.917 116.254 mo
152.046 115.543 li
156.104 105.745 li
152.917 116.254 li
cp
f
152.046 115.543 mo
151.333 114.67 li
156.104 105.745 li
152.046 115.543 li
cp
f
151.333 114.67 mo
150.806 113.678 li
156.104 105.745 li
151.333 114.67 li
cp
f
150.806 113.678 mo
150.478 112.604 li
156.104 105.745 li
150.806 113.678 li
cp
f
150.478 112.604 mo
150.363 111.485 li
156.104 105.745 li
150.478 112.604 li
cp
f
150.363 111.485 mo
150.478 110.366 li
156.104 105.745 li
150.363 111.485 li
cp
f
150.478 110.366 mo
150.806 109.292 li
156.104 105.745 li
150.478 110.366 li
cp
f
150.806 109.292 mo
151.333 108.299 li
156.104 105.745 li
150.806 109.292 li
cp
f
151.333 108.299 mo
152.046 107.426 li
156.104 105.745 li
151.333 108.299 li
cp
f
152.046 107.426 mo
152.917 106.713 li
156.104 105.745 li
152.046 107.426 li
cp
f
152.917 106.713 mo
153.912 106.186 li
156.104 105.745 li
152.917 106.713 li
cp
f
153.912 106.186 mo
154.984 105.858 li
156.104 105.745 li
153.912 106.186 li
cp
f
154.984 105.858 mo
156.104 105.745 li
156.104 105.745 li
154.984 105.858 li
cp
f
156.104 105.745 mo
157.224 105.858 li
158.298 106.186 li
159.291 106.713 li
160.163 107.426 li
160.875 108.299 li
161.402 109.292 li
161.729 110.366 li
161.845 111.485 li
161.729 112.604 li
161.402 113.678 li
160.875 114.67 li
160.163 115.543 li
159.291 116.254 li
158.298 116.784 li
157.224 117.11 li
156.104 117.225 li
154.984 117.11 li
153.912 116.784 li
152.917 116.254 li
152.046 115.543 li
151.333 114.67 li
150.806 113.678 li
150.478 112.604 li
150.363 111.485 li
150.478 110.366 li
150.806 109.292 li
151.333 108.299 li
152.046 107.426 li
152.917 106.713 li
153.912 106.186 li
154.984 105.858 li
156.104 105.745 li
@
142.886 88.6655 mo
143.96 88.9932 li
141.767 88.5508 li
142.886 88.6655 li
cp
f
143.96 88.9932 mo
144.953 89.521 li
141.767 88.5508 li
143.96 88.9932 li
cp
f
144.953 89.521 mo
145.825 90.2319 li
141.767 88.5508 li
144.953 89.521 li
cp
f
145.825 90.2319 mo
146.538 91.105 li
141.767 88.5508 li
145.825 90.2319 li
cp
f
146.538 91.105 mo
147.065 92.0991 li
141.767 88.5508 li
146.538 91.105 li
cp
f
147.065 92.0991 mo
147.393 93.1719 li
141.767 88.5508 li
147.065 92.0991 li
cp
f
147.393 93.1719 mo
147.507 94.2905 li
141.767 88.5508 li
147.393 93.1719 li
cp
f
147.507 94.2905 mo
147.393 95.4111 li
141.767 88.5508 li
147.507 94.2905 li
cp
f
147.393 95.4111 mo
147.065 96.4834 li
141.767 88.5508 li
147.393 95.4111 li
cp
f
147.065 96.4834 mo
146.538 97.4775 li
141.767 88.5508 li
147.065 96.4834 li
cp
f
146.538 97.4775 mo
145.825 98.3506 li
141.767 88.5508 li
146.538 97.4775 li
cp
f
145.825 98.3506 mo
144.953 99.062 li
141.767 88.5508 li
145.825 98.3506 li
cp
f
144.953 99.062 mo
143.96 99.5894 li
141.767 88.5508 li
144.953 99.062 li
cp
f
143.96 99.5894 mo
142.886 99.917 li
141.767 88.5508 li
143.96 99.5894 li
cp
f
142.886 99.917 mo
141.767 100.032 li
141.767 88.5508 li
142.886 99.917 li
cp
f
141.767 100.032 mo
140.647 99.917 li
141.767 88.5508 li
141.767 100.032 li
cp
f
140.647 99.917 mo
139.574 99.5894 li
141.767 88.5508 li
140.647 99.917 li
cp
f
139.574 99.5894 mo
138.581 99.062 li
141.767 88.5508 li
139.574 99.5894 li
cp
f
138.581 99.062 mo
137.708 98.3506 li
141.767 88.5508 li
138.581 99.062 li
cp
f
137.708 98.3506 mo
136.997 97.4775 li
141.767 88.5508 li
137.708 98.3506 li
cp
f
136.997 97.4775 mo
136.468 96.4834 li
141.767 88.5508 li
136.997 97.4775 li
cp
f
136.468 96.4834 mo
136.141 95.4111 li
141.767 88.5508 li
136.468 96.4834 li
cp
f
136.141 95.4111 mo
136.026 94.2905 li
141.767 88.5508 li
136.141 95.4111 li
cp
f
136.026 94.2905 mo
136.141 93.1719 li
141.767 88.5508 li
136.026 94.2905 li
cp
f
136.141 93.1719 mo
136.468 92.0991 li
141.767 88.5508 li
136.141 93.1719 li
cp
f
136.468 92.0991 mo
136.997 91.105 li
141.767 88.5508 li
136.468 92.0991 li
cp
f
136.997 91.105 mo
137.708 90.2319 li
141.767 88.5508 li
136.997 91.105 li
cp
f
137.708 90.2319 mo
138.581 89.521 li
141.767 88.5508 li
137.708 90.2319 li
cp
f
138.581 89.521 mo
139.574 88.9932 li
141.767 88.5508 li
138.581 89.521 li
cp
f
139.574 88.9932 mo
140.647 88.6655 li
141.767 88.5508 li
139.574 88.9932 li
cp
f
140.647 88.6655 mo
141.767 88.5508 li
141.767 88.5508 li
140.647 88.6655 li
cp
f
141.767 88.5508 mo
142.886 88.6655 li
143.96 88.9932 li
144.953 89.521 li
145.825 90.2319 li
146.538 91.105 li
147.065 92.0991 li
147.393 93.1719 li
147.507 94.2905 li
147.393 95.4111 li
147.065 96.4834 li
146.538 97.4775 li
145.825 98.3506 li
144.953 99.062 li
143.96 99.5894 li
142.886 99.917 li
141.767 100.032 li
140.647 99.917 li
139.574 99.5894 li
138.581 99.062 li
137.708 98.3506 li
136.997 97.4775 li
136.468 96.4834 li
136.141 95.4111 li
136.026 94.2905 li
136.141 93.1719 li
136.468 92.0991 li
136.997 91.105 li
137.708 90.2319 li
138.581 89.521 li
139.574 88.9932 li
140.647 88.6655 li
141.767 88.5508 li
@
158.635 80.4834 mo
159.708 80.811 li
157.515 80.3682 li
158.635 80.4834 li
cp
f
159.708 80.811 mo
160.702 81.3384 li
157.515 80.3682 li
159.708 80.811 li
cp
f
160.702 81.3384 mo
161.575 82.0498 li
157.515 80.3682 li
160.702 81.3384 li
cp
f
161.575 82.0498 mo
162.286 82.9224 li
157.515 80.3682 li
161.575 82.0498 li
cp
f
162.286 82.9224 mo
162.813 83.915 li
157.515 80.3682 li
162.286 82.9224 li
cp
f
162.813 83.915 mo
163.141 84.9893 li
157.515 80.3682 li
162.813 83.915 li
cp
f
163.141 84.9893 mo
163.256 86.1084 li
157.515 80.3682 li
163.141 84.9893 li
cp
f
163.256 86.1084 mo
163.141 87.2285 li
157.515 80.3682 li
163.256 86.1084 li
cp
f
163.141 87.2285 mo
162.813 88.3013 li
157.515 80.3682 li
163.141 87.2285 li
cp
f
162.813 88.3013 mo
162.286 89.2954 li
157.515 80.3682 li
162.813 88.3013 li
cp
f
162.286 89.2954 mo
161.575 90.1665 li
157.515 80.3682 li
162.286 89.2954 li
cp
f
161.575 90.1665 mo
160.702 90.8794 li
157.515 80.3682 li
161.575 90.1665 li
cp
f
160.702 90.8794 mo
159.708 91.4072 li
157.515 80.3682 li
160.702 90.8794 li
cp
f
159.708 91.4072 mo
158.635 91.7344 li
157.515 80.3682 li
159.708 91.4072 li
cp
f
158.635 91.7344 mo
157.515 91.8496 li
157.515 80.3682 li
158.635 91.7344 li
cp
f
157.515 91.8496 mo
156.396 91.7344 li
157.515 80.3682 li
157.515 91.8496 li
cp
f
156.396 91.7344 mo
155.323 91.4072 li
157.515 80.3682 li
156.396 91.7344 li
cp
f
155.323 91.4072 mo
154.329 90.8794 li
157.515 80.3682 li
155.323 91.4072 li
cp
f
154.329 90.8794 mo
153.456 90.1665 li
157.515 80.3682 li
154.329 90.8794 li
cp
f
153.456 90.1665 mo
152.745 89.2954 li
157.515 80.3682 li
153.456 90.1665 li
cp
f
152.745 89.2954 mo
152.217 88.3013 li
157.515 80.3682 li
152.745 89.2954 li
cp
f
152.217 88.3013 mo
151.89 87.2285 li
157.515 80.3682 li
152.217 88.3013 li
cp
f
151.89 87.2285 mo
151.774 86.1084 li
157.515 80.3682 li
151.89 87.2285 li
cp
f
151.774 86.1084 mo
151.89 84.9893 li
157.515 80.3682 li
151.774 86.1084 li
cp
f
151.89 84.9893 mo
152.217 83.915 li
157.515 80.3682 li
151.89 84.9893 li
cp
f
152.217 83.915 mo
152.745 82.9224 li
157.515 80.3682 li
152.217 83.915 li
cp
f
152.745 82.9224 mo
153.456 82.0498 li
157.515 80.3682 li
152.745 82.9224 li
cp
f
153.456 82.0498 mo
154.329 81.3384 li
157.515 80.3682 li
153.456 82.0498 li
cp
f
154.329 81.3384 mo
155.323 80.811 li
157.515 80.3682 li
154.329 81.3384 li
cp
f
155.323 80.811 mo
156.396 80.4834 li
157.515 80.3682 li
155.323 80.811 li
cp
f
156.396 80.4834 mo
157.515 80.3682 li
157.515 80.3682 li
156.396 80.4834 li
cp
f
157.515 80.3682 mo
158.635 80.4834 li
159.708 80.811 li
160.702 81.3384 li
161.575 82.0498 li
162.286 82.9224 li
162.813 83.915 li
163.141 84.9893 li
163.256 86.1084 li
163.141 87.2285 li
162.813 88.3013 li
162.286 89.2954 li
161.575 90.1665 li
160.702 90.8794 li
159.708 91.4072 li
158.635 91.7344 li
157.515 91.8496 li
156.396 91.7344 li
155.323 91.4072 li
154.329 90.8794 li
153.456 90.1665 li
152.745 89.2954 li
152.217 88.3013 li
151.89 87.2285 li
151.774 86.1084 li
151.89 84.9893 li
152.217 83.915 li
152.745 82.9224 li
153.456 82.0498 li
154.329 81.3384 li
155.323 80.811 li
156.396 80.4834 li
157.515 80.3682 li
@
131.273 78.4375 mo
132.346 78.7651 li
130.153 78.3237 li
131.273 78.4375 li
cp
f
132.346 78.7651 mo
133.339 79.2925 li
130.153 78.3237 li
132.346 78.7651 li
cp
f
133.339 79.2925 mo
134.212 80.0054 li
130.153 78.3237 li
133.339 79.2925 li
cp
f
134.212 80.0054 mo
134.924 80.8779 li
130.153 78.3237 li
134.212 80.0054 li
cp
f
134.924 80.8779 mo
135.452 81.8706 li
130.153 78.3237 li
134.924 80.8779 li
cp
f
135.452 81.8706 mo
135.779 82.9448 li
130.153 78.3237 li
135.452 81.8706 li
cp
f
135.779 82.9448 mo
135.894 84.064 li
130.153 78.3237 li
135.779 82.9448 li
cp
f
135.894 84.064 mo
135.779 85.1826 li
130.153 78.3237 li
135.894 84.064 li
cp
f
135.779 85.1826 mo
135.452 86.2568 li
130.153 78.3237 li
135.779 85.1826 li
cp
f
135.452 86.2568 mo
134.924 87.2495 li
130.153 78.3237 li
135.452 86.2568 li
cp
f
134.924 87.2495 mo
134.212 88.1221 li
130.153 78.3237 li
134.924 87.2495 li
cp
f
134.212 88.1221 mo
133.339 88.8335 li
130.153 78.3237 li
134.212 88.1221 li
cp
f
133.339 88.8335 mo
132.346 89.3623 li
130.153 78.3237 li
133.339 88.8335 li
cp
f
132.346 89.3623 mo
131.273 89.6885 li
130.153 78.3237 li
132.346 89.3623 li
cp
f
131.273 89.6885 mo
130.153 89.8037 li
130.153 78.3237 li
131.273 89.6885 li
cp
f
130.153 89.8037 mo
129.034 89.6885 li
130.153 78.3237 li
130.153 89.8037 li
cp
f
129.034 89.6885 mo
127.96 89.3623 li
130.153 78.3237 li
129.034 89.6885 li
cp
f
127.96 89.3623 mo
126.967 88.8335 li
130.153 78.3237 li
127.96 89.3623 li
cp
f
126.967 88.8335 mo
126.095 88.1221 li
130.153 78.3237 li
126.967 88.8335 li
cp
f
126.095 88.1221 mo
125.383 87.2495 li
130.153 78.3237 li
126.095 88.1221 li
cp
f
125.383 87.2495 mo
124.855 86.2568 li
130.153 78.3237 li
125.383 87.2495 li
cp
f
124.855 86.2568 mo
124.528 85.1826 li
130.153 78.3237 li
124.855 86.2568 li
cp
f
124.528 85.1826 mo
124.413 84.064 li
130.153 78.3237 li
124.528 85.1826 li
cp
f
124.413 84.064 mo
124.528 82.9448 li
130.153 78.3237 li
124.413 84.064 li
cp
f
124.528 82.9448 mo
124.855 81.8706 li
130.153 78.3237 li
124.528 82.9448 li
cp
f
124.855 81.8706 mo
125.383 80.8779 li
130.153 78.3237 li
124.855 81.8706 li
cp
f
125.383 80.8779 mo
126.095 80.0054 li
130.153 78.3237 li
125.383 80.8779 li
cp
f
126.095 80.0054 mo
126.967 79.2925 li
130.153 78.3237 li
126.095 80.0054 li
cp
f
126.967 79.2925 mo
127.96 78.7651 li
130.153 78.3237 li
126.967 79.2925 li
cp
f
127.96 78.7651 mo
129.034 78.4375 li
130.153 78.3237 li
127.96 78.7651 li
cp
f
129.034 78.4375 mo
130.153 78.3237 li
130.153 78.3237 li
129.034 78.4375 li
cp
f
130.153 78.3237 mo
131.273 78.4375 li
132.346 78.7651 li
133.339 79.2925 li
134.212 80.0054 li
134.924 80.8779 li
135.452 81.8706 li
135.779 82.9448 li
135.894 84.064 li
135.779 85.1826 li
135.452 86.2568 li
134.924 87.2495 li
134.212 88.1221 li
133.339 88.8335 li
132.346 89.3623 li
131.273 89.6885 li
130.153 89.8037 li
129.034 89.6885 li
127.96 89.3623 li
126.967 88.8335 li
126.095 88.1221 li
125.383 87.2495 li
124.855 86.2568 li
124.528 85.1826 li
124.413 84.064 li
124.528 82.9448 li
124.855 81.8706 li
125.383 80.8779 li
126.095 80.0054 li
126.967 79.2925 li
127.96 78.7651 li
129.034 78.4375 li
130.153 78.3237 li
@
119.185 71.7432 mo
120.259 72.0708 li
118.066 71.6279 li
119.185 71.7432 li
cp
f
120.259 72.0708 mo
121.252 72.5981 li
118.066 71.6279 li
120.259 72.0708 li
cp
f
121.252 72.5981 mo
122.125 73.3096 li
118.066 71.6279 li
121.252 72.5981 li
cp
f
122.125 73.3096 mo
122.836 74.1821 li
118.066 71.6279 li
122.125 73.3096 li
cp
f
122.836 74.1821 mo
123.364 75.1768 li
118.066 71.6279 li
122.836 74.1821 li
cp
f
123.364 75.1768 mo
123.691 76.249 li
118.066 71.6279 li
123.364 75.1768 li
cp
f
123.691 76.249 mo
123.806 77.3696 li
118.066 71.6279 li
123.691 76.249 li
cp
f
123.806 77.3696 mo
123.691 78.4883 li
118.066 71.6279 li
123.806 77.3696 li
cp
f
123.691 78.4883 mo
123.364 79.561 li
118.066 71.6279 li
123.691 78.4883 li
cp
f
123.364 79.561 mo
122.836 80.5552 li
118.066 71.6279 li
123.364 79.561 li
cp
f
122.836 80.5552 mo
122.125 81.4277 li
118.066 71.6279 li
122.836 80.5552 li
cp
f
122.125 81.4277 mo
121.252 82.1392 li
118.066 71.6279 li
122.125 81.4277 li
cp
f
121.252 82.1392 mo
120.259 82.667 li
118.066 71.6279 li
121.252 82.1392 li
cp
f
120.259 82.667 mo
119.185 82.9946 li
118.066 71.6279 li
120.259 82.667 li
cp
f
119.185 82.9946 mo
118.066 83.1094 li
118.066 71.6279 li
119.185 82.9946 li
cp
f
118.066 83.1094 mo
116.946 82.9946 li
118.066 71.6279 li
118.066 83.1094 li
cp
f
116.946 82.9946 mo
115.873 82.667 li
118.066 71.6279 li
116.946 82.9946 li
cp
f
115.873 82.667 mo
114.879 82.1392 li
118.066 71.6279 li
115.873 82.667 li
cp
f
114.879 82.1392 mo
114.007 81.4277 li
118.066 71.6279 li
114.879 82.1392 li
cp
f
114.007 81.4277 mo
113.295 80.5552 li
118.066 71.6279 li
114.007 81.4277 li
cp
f
113.295 80.5552 mo
112.767 79.561 li
118.066 71.6279 li
113.295 80.5552 li
cp
f
112.767 79.561 mo
112.44 78.4883 li
118.066 71.6279 li
112.767 79.561 li
cp
f
112.44 78.4883 mo
112.325 77.3696 li
118.066 71.6279 li
112.44 78.4883 li
cp
f
112.325 77.3696 mo
112.44 76.249 li
118.066 71.6279 li
112.325 77.3696 li
cp
f
112.44 76.249 mo
112.767 75.1768 li
118.066 71.6279 li
112.44 76.249 li
cp
f
112.767 75.1768 mo
113.295 74.1821 li
118.066 71.6279 li
112.767 75.1768 li
cp
f
113.295 74.1821 mo
114.007 73.3096 li
118.066 71.6279 li
113.295 74.1821 li
cp
f
114.007 73.3096 mo
114.879 72.5981 li
118.066 71.6279 li
114.007 73.3096 li
cp
f
114.879 72.5981 mo
115.873 72.0708 li
118.066 71.6279 li
114.879 72.5981 li
cp
f
115.873 72.0708 mo
116.946 71.7432 li
118.066 71.6279 li
115.873 72.0708 li
cp
f
116.946 71.7432 mo
118.066 71.6279 li
118.066 71.6279 li
116.946 71.7432 li
cp
f
118.066 71.6279 mo
119.185 71.7432 li
120.259 72.0708 li
121.252 72.5981 li
122.125 73.3096 li
122.836 74.1821 li
123.364 75.1768 li
123.691 76.249 li
123.806 77.3696 li
123.691 78.4883 li
123.364 79.561 li
122.836 80.5552 li
122.125 81.4277 li
121.252 82.1392 li
120.259 82.667 li
119.185 82.9946 li
118.066 83.1094 li
116.946 82.9946 li
115.873 82.667 li
114.879 82.1392 li
114.007 81.4277 li
113.295 80.5552 li
112.767 79.561 li
112.44 78.4883 li
112.325 77.3696 li
112.44 76.249 li
112.767 75.1768 li
113.295 74.1821 li
114.007 73.3096 li
114.879 72.5981 li
115.873 72.0708 li
116.946 71.7432 li
118.066 71.6279 li
@
134.847 53.6299 mo
135.92 53.9556 li
133.727 53.5146 li
134.847 53.6299 li
cp
f
135.92 53.9556 mo
136.913 54.4849 li
133.727 53.5146 li
135.92 53.9556 li
cp
f
136.913 54.4849 mo
137.786 55.1963 li
133.727 53.5146 li
136.913 54.4849 li
cp
f
137.786 55.1963 mo
138.498 56.0688 li
133.727 53.5146 li
137.786 55.1963 li
cp
f
138.498 56.0688 mo
139.025 57.0615 li
133.727 53.5146 li
138.498 56.0688 li
cp
f
139.025 57.0615 mo
139.353 58.1357 li
133.727 53.5146 li
139.025 57.0615 li
cp
f
139.353 58.1357 mo
139.468 59.2544 li
133.727 53.5146 li
139.353 58.1357 li
cp
f
139.468 59.2544 mo
139.353 60.375 li
133.727 53.5146 li
139.468 59.2544 li
cp
f
139.353 60.375 mo
139.025 61.4478 li
133.727 53.5146 li
139.353 60.375 li
cp
f
139.025 61.4478 mo
138.498 62.4419 li
133.727 53.5146 li
139.025 61.4478 li
cp
f
138.498 62.4419 mo
137.786 63.313 li
133.727 53.5146 li
138.498 62.4419 li
cp
f
137.786 63.313 mo
136.913 64.0259 li
133.727 53.5146 li
137.786 63.313 li
cp
f
136.913 64.0259 mo
135.92 64.5532 li
133.727 53.5146 li
136.913 64.0259 li
cp
f
135.92 64.5532 mo
134.847 64.8809 li
133.727 53.5146 li
135.92 64.5532 li
cp
f
134.847 64.8809 mo
133.727 64.9961 li
133.727 53.5146 li
134.847 64.8809 li
cp
f
133.727 64.9961 mo
132.608 64.8809 li
133.727 53.5146 li
133.727 64.9961 li
cp
f
132.608 64.8809 mo
131.534 64.5532 li
133.727 53.5146 li
132.608 64.8809 li
cp
f
131.534 64.5532 mo
130.541 64.0259 li
133.727 53.5146 li
131.534 64.5532 li
cp
f
130.541 64.0259 mo
129.668 63.313 li
133.727 53.5146 li
130.541 64.0259 li
cp
f
129.668 63.313 mo
128.957 62.4419 li
133.727 53.5146 li
129.668 63.313 li
cp
f
128.957 62.4419 mo
128.429 61.4478 li
133.727 53.5146 li
128.957 62.4419 li
cp
f
128.429 61.4478 mo
128.101 60.375 li
133.727 53.5146 li
128.429 61.4478 li
cp
f
128.101 60.375 mo
127.986 59.2544 li
133.727 53.5146 li
128.101 60.375 li
cp
f
127.986 59.2544 mo
128.101 58.1357 li
133.727 53.5146 li
127.986 59.2544 li
cp
f
128.101 58.1357 mo
128.429 57.0615 li
133.727 53.5146 li
128.101 58.1357 li
cp
f
128.429 57.0615 mo
128.957 56.0688 li
133.727 53.5146 li
128.429 57.0615 li
cp
f
128.957 56.0688 mo
129.668 55.1963 li
133.727 53.5146 li
128.957 56.0688 li
cp
f
129.668 55.1963 mo
130.541 54.4849 li
133.727 53.5146 li
129.668 55.1963 li
cp
f
130.541 54.4849 mo
131.534 53.9556 li
133.727 53.5146 li
130.541 54.4849 li
cp
f
131.534 53.9556 mo
132.608 53.6299 li
133.727 53.5146 li
131.534 53.9556 li
cp
f
132.608 53.6299 mo
133.727 53.5146 li
133.727 53.5146 li
132.608 53.6299 li
cp
f
133.727 53.5146 mo
134.847 53.6299 li
135.92 53.9556 li
136.913 54.4849 li
137.786 55.1963 li
138.498 56.0688 li
139.025 57.0615 li
139.353 58.1357 li
139.468 59.2544 li
139.353 60.375 li
139.025 61.4478 li
138.498 62.4419 li
137.786 63.313 li
136.913 64.0259 li
135.92 64.5532 li
134.847 64.8809 li
133.727 64.9961 li
132.608 64.8809 li
131.534 64.5532 li
130.541 64.0259 li
129.668 63.313 li
128.957 62.4419 li
128.429 61.4478 li
128.101 60.375 li
127.986 59.2544 li
128.101 58.1357 li
128.429 57.0615 li
128.957 56.0688 li
129.668 55.1963 li
130.541 54.4849 li
131.534 53.9556 li
132.608 53.6299 li
133.727 53.5146 li
@
117.407 20.3311 mo
118.481 20.6572 li
116.288 20.2158 li
117.407 20.3311 li
cp
f
118.481 20.6572 mo
119.474 21.1865 li
116.288 20.2158 li
118.481 20.6572 li
cp
f
119.474 21.1865 mo
120.347 21.8975 li
116.288 20.2158 li
119.474 21.1865 li
cp
f
120.347 21.8975 mo
121.058 22.7705 li
116.288 20.2158 li
120.347 21.8975 li
cp
f
121.058 22.7705 mo
121.586 23.7632 li
116.288 20.2158 li
121.058 22.7705 li
cp
f
121.586 23.7632 mo
121.914 24.8369 li
116.288 20.2158 li
121.586 23.7632 li
cp
f
121.914 24.8369 mo
122.029 25.9561 li
116.288 20.2158 li
121.914 24.8369 li
cp
f
122.029 25.9561 mo
121.914 27.0767 li
116.288 20.2158 li
122.029 25.9561 li
cp
f
121.914 27.0767 mo
121.586 28.1489 li
116.288 20.2158 li
121.914 27.0767 li
cp
f
121.586 28.1489 mo
121.058 29.1436 li
116.288 20.2158 li
121.586 28.1489 li
cp
f
121.058 29.1436 mo
120.347 30.0146 li
116.288 20.2158 li
121.058 29.1436 li
cp
f
120.347 30.0146 mo
119.474 30.7275 li
116.288 20.2158 li
120.347 30.0146 li
cp
f
119.474 30.7275 mo
118.481 31.2549 li
116.288 20.2158 li
119.474 30.7275 li
cp
f
118.481 31.2549 mo
117.407 31.5825 li
116.288 20.2158 li
118.481 31.2549 li
cp
f
117.407 31.5825 mo
116.288 31.6978 li
116.288 20.2158 li
117.407 31.5825 li
cp
f
116.288 31.6978 mo
115.168 31.5825 li
116.288 20.2158 li
116.288 31.6978 li
cp
f
115.168 31.5825 mo
114.095 31.2549 li
116.288 20.2158 li
115.168 31.5825 li
cp
f
114.095 31.2549 mo
113.102 30.7275 li
116.288 20.2158 li
114.095 31.2549 li
cp
f
113.102 30.7275 mo
112.229 30.0146 li
116.288 20.2158 li
113.102 30.7275 li
cp
f
112.229 30.0146 mo
111.518 29.1436 li
116.288 20.2158 li
112.229 30.0146 li
cp
f
111.518 29.1436 mo
110.989 28.1489 li
116.288 20.2158 li
111.518 29.1436 li
cp
f
110.989 28.1489 mo
110.662 27.0767 li
116.288 20.2158 li
110.989 28.1489 li
cp
f
110.662 27.0767 mo
110.547 25.9561 li
116.288 20.2158 li
110.662 27.0767 li
cp
f
110.547 25.9561 mo
110.662 24.8369 li
116.288 20.2158 li
110.547 25.9561 li
cp
f
110.662 24.8369 mo
110.989 23.7632 li
116.288 20.2158 li
110.662 24.8369 li
cp
f
110.989 23.7632 mo
111.518 22.7705 li
116.288 20.2158 li
110.989 23.7632 li
cp
f
111.518 22.7705 mo
112.229 21.8975 li
116.288 20.2158 li
111.518 22.7705 li
cp
f
112.229 21.8975 mo
113.102 21.1865 li
116.288 20.2158 li
112.229 21.8975 li
cp
f
113.102 21.1865 mo
114.095 20.6572 li
116.288 20.2158 li
113.102 21.1865 li
cp
f
114.095 20.6572 mo
115.168 20.3311 li
116.288 20.2158 li
114.095 20.6572 li
cp
f
115.168 20.3311 mo
116.288 20.2158 li
116.288 20.2158 li
115.168 20.3311 li
cp
f
116.288 20.2158 mo
117.407 20.3311 li
118.481 20.6572 li
119.474 21.1865 li
120.347 21.8975 li
121.058 22.7705 li
121.586 23.7632 li
121.914 24.8369 li
122.029 25.9561 li
121.914 27.0767 li
121.586 28.1489 li
121.058 29.1436 li
120.347 30.0146 li
119.474 30.7275 li
118.481 31.2549 li
117.407 31.5825 li
116.288 31.6978 li
115.168 31.5825 li
114.095 31.2549 li
113.102 30.7275 li
112.229 30.0146 li
111.518 29.1436 li
110.989 28.1489 li
110.662 27.0767 li
110.547 25.9561 li
110.662 24.8369 li
110.989 23.7632 li
111.518 22.7705 li
112.229 21.8975 li
113.102 21.1865 li
114.095 20.6572 li
115.168 20.3311 li
116.288 20.2158 li
@
143.524 14.7495 mo
144.598 15.0771 li
142.405 14.6343 li
143.524 14.7495 li
cp
f
144.598 15.0771 mo
145.59 15.6045 li
142.405 14.6343 li
144.598 15.0771 li
cp
f
145.59 15.6045 mo
146.463 16.3174 li
142.405 14.6343 li
145.59 15.6045 li
cp
f
146.463 16.3174 mo
147.176 17.1904 li
142.405 14.6343 li
146.463 16.3174 li
cp
f
147.176 17.1904 mo
147.703 18.1826 li
142.405 14.6343 li
147.176 17.1904 li
cp
f
147.703 18.1826 mo
148.031 19.2568 li
142.405 14.6343 li
147.703 18.1826 li
cp
f
148.031 19.2568 mo
148.146 20.376 li
142.405 14.6343 li
148.031 19.2568 li
cp
f
148.146 20.376 mo
148.031 21.4951 li
142.405 14.6343 li
148.146 20.376 li
cp
f
148.031 21.4951 mo
147.703 22.5688 li
142.405 14.6343 li
148.031 21.4951 li
cp
f
147.703 22.5688 mo
147.176 23.5615 li
142.405 14.6343 li
147.703 22.5688 li
cp
f
147.176 23.5615 mo
146.463 24.4346 li
142.405 14.6343 li
147.176 23.5615 li
cp
f
146.463 24.4346 mo
145.59 25.1455 li
142.405 14.6343 li
146.463 24.4346 li
cp
f
145.59 25.1455 mo
144.598 25.6748 li
142.405 14.6343 li
145.59 25.1455 li
cp
f
144.598 25.6748 mo
143.524 26.001 li
142.405 14.6343 li
144.598 25.6748 li
cp
f
143.524 26.001 mo
142.405 26.1157 li
142.405 14.6343 li
143.524 26.001 li
cp
f
142.405 26.1157 mo
141.286 26.001 li
142.405 14.6343 li
142.405 26.1157 li
cp
f
141.286 26.001 mo
140.212 25.6748 li
142.405 14.6343 li
141.286 26.001 li
cp
f
140.212 25.6748 mo
139.219 25.1455 li
142.405 14.6343 li
140.212 25.6748 li
cp
f
139.219 25.1455 mo
138.347 24.4346 li
142.405 14.6343 li
139.219 25.1455 li
cp
f
138.347 24.4346 mo
137.634 23.5615 li
142.405 14.6343 li
138.347 24.4346 li
cp
f
137.634 23.5615 mo
137.106 22.5688 li
142.405 14.6343 li
137.634 23.5615 li
cp
f
137.106 22.5688 mo
136.779 21.4951 li
142.405 14.6343 li
137.106 22.5688 li
cp
f
136.779 21.4951 mo
136.665 20.376 li
142.405 14.6343 li
136.779 21.4951 li
cp
f
136.665 20.376 mo
136.779 19.2568 li
142.405 14.6343 li
136.665 20.376 li
cp
f
136.779 19.2568 mo
137.106 18.1826 li
142.405 14.6343 li
136.779 19.2568 li
cp
f
137.106 18.1826 mo
137.634 17.1904 li
142.405 14.6343 li
137.106 18.1826 li
cp
f
137.634 17.1904 mo
138.347 16.3174 li
142.405 14.6343 li
137.634 17.1904 li
cp
f
138.347 16.3174 mo
139.219 15.6045 li
142.405 14.6343 li
138.347 16.3174 li
cp
f
139.219 15.6045 mo
140.212 15.0771 li
142.405 14.6343 li
139.219 15.6045 li
cp
f
140.212 15.0771 mo
141.286 14.7495 li
142.405 14.6343 li
140.212 15.0771 li
cp
f
141.286 14.7495 mo
142.405 14.6343 li
142.405 14.6343 li
141.286 14.7495 li
cp
f
142.405 14.6343 mo
143.524 14.7495 li
144.598 15.0771 li
145.59 15.6045 li
146.463 16.3174 li
147.176 17.1904 li
147.703 18.1826 li
148.031 19.2568 li
148.146 20.376 li
148.031 21.4951 li
147.703 22.5688 li
147.176 23.5615 li
146.463 24.4346 li
145.59 25.1455 li
144.598 25.6748 li
143.524 26.001 li
142.405 26.1157 li
141.286 26.001 li
140.212 25.6748 li
139.219 25.1455 li
138.347 24.4346 li
137.634 23.5615 li
137.106 22.5688 li
136.779 21.4951 li
136.665 20.376 li
136.779 19.2568 li
137.106 18.1826 li
137.634 17.1904 li
138.347 16.3174 li
139.219 15.6045 li
140.212 15.0771 li
141.286 14.7495 li
142.405 14.6343 li
@
160.477 57.8096 mo
161.55 58.1372 li
159.357 57.6943 li
160.477 57.8096 li
cp
f
161.55 58.1372 mo
162.543 58.6646 li
159.357 57.6943 li
161.55 58.1372 li
cp
f
162.543 58.6646 mo
163.416 59.3774 li
159.357 57.6943 li
162.543 58.6646 li
cp
f
163.416 59.3774 mo
164.129 60.2505 li
159.357 57.6943 li
163.416 59.3774 li
cp
f
164.129 60.2505 mo
164.656 61.2432 li
159.357 57.6943 li
164.129 60.2505 li
cp
f
164.656 61.2432 mo
164.984 62.3154 li
159.357 57.6943 li
164.656 61.2432 li
cp
f
164.984 62.3154 mo
165.099 63.436 li
159.357 57.6943 li
164.984 62.3154 li
cp
f
165.099 63.436 mo
164.984 64.5547 li
159.357 57.6943 li
165.099 63.436 li
cp
f
164.984 64.5547 mo
164.656 65.6289 li
159.357 57.6943 li
164.984 64.5547 li
cp
f
164.656 65.6289 mo
164.129 66.6216 li
159.357 57.6943 li
164.656 65.6289 li
cp
f
164.129 66.6216 mo
163.416 67.4946 li
159.357 57.6943 li
164.129 66.6216 li
cp
f
163.416 67.4946 mo
162.543 68.2056 li
159.357 57.6943 li
163.416 67.4946 li
cp
f
162.543 68.2056 mo
161.55 68.7349 li
159.357 57.6943 li
162.543 68.2056 li
cp
f
161.55 68.7349 mo
160.477 69.061 li
159.357 57.6943 li
161.55 68.7349 li
cp
f
160.477 69.061 mo
159.357 69.1758 li
159.357 57.6943 li
160.477 69.061 li
cp
f
159.357 69.1758 mo
158.239 69.061 li
159.357 57.6943 li
159.357 69.1758 li
cp
f
158.239 69.061 mo
157.165 68.7349 li
159.357 57.6943 li
158.239 69.061 li
cp
f
157.165 68.7349 mo
156.172 68.2056 li
159.357 57.6943 li
157.165 68.7349 li
cp
f
156.172 68.2056 mo
155.299 67.4946 li
159.357 57.6943 li
156.172 68.2056 li
cp
f
155.299 67.4946 mo
154.588 66.6216 li
159.357 57.6943 li
155.299 67.4946 li
cp
f
154.588 66.6216 mo
154.059 65.6289 li
159.357 57.6943 li
154.588 66.6216 li
cp
f
154.059 65.6289 mo
153.732 64.5547 li
159.357 57.6943 li
154.059 65.6289 li
cp
f
153.732 64.5547 mo
153.618 63.436 li
159.357 57.6943 li
153.732 64.5547 li
cp
f
153.618 63.436 mo
153.732 62.3154 li
159.357 57.6943 li
153.618 63.436 li
cp
f
153.732 62.3154 mo
154.059 61.2432 li
159.357 57.6943 li
153.732 62.3154 li
cp
f
154.059 61.2432 mo
154.588 60.2505 li
159.357 57.6943 li
154.059 61.2432 li
cp
f
154.588 60.2505 mo
155.299 59.3774 li
159.357 57.6943 li
154.588 60.2505 li
cp
f
155.299 59.3774 mo
156.172 58.6646 li
159.357 57.6943 li
155.299 59.3774 li
cp
f
156.172 58.6646 mo
157.165 58.1372 li
159.357 57.6943 li
156.172 58.6646 li
cp
f
157.165 58.1372 mo
158.239 57.8096 li
159.357 57.6943 li
157.165 58.1372 li
cp
f
158.239 57.8096 mo
159.357 57.6943 li
159.357 57.6943 li
158.239 57.8096 li
cp
f
159.357 57.6943 mo
160.477 57.8096 li
161.55 58.1372 li
162.543 58.6646 li
163.416 59.3774 li
164.129 60.2505 li
164.656 61.2432 li
164.984 62.3154 li
165.099 63.436 li
164.984 64.5547 li
164.656 65.6289 li
164.129 66.6216 li
163.416 67.4946 li
162.543 68.2056 li
161.55 68.7349 li
160.477 69.061 li
159.357 69.1758 li
158.239 69.061 li
157.165 68.7349 li
156.172 68.2056 li
155.299 67.4946 li
154.588 66.6216 li
154.059 65.6289 li
153.732 64.5547 li
153.618 63.436 li
153.732 62.3154 li
154.059 61.2432 li
154.588 60.2505 li
155.299 59.3774 li
156.172 58.6646 li
157.165 58.1372 li
158.239 57.8096 li
159.357 57.6943 li
@
169.814 75.2451 mo
170.889 75.5713 li
168.695 75.1299 li
169.814 75.2451 li
cp
f
170.889 75.5713 mo
171.881 76.1006 li
168.695 75.1299 li
170.889 75.5713 li
cp
f
171.881 76.1006 mo
172.754 76.8115 li
168.695 75.1299 li
171.881 76.1006 li
cp
f
172.754 76.8115 mo
173.465 77.6846 li
168.695 75.1299 li
172.754 76.8115 li
cp
f
173.465 77.6846 mo
173.994 78.6772 li
168.695 75.1299 li
173.465 77.6846 li
cp
f
173.994 78.6772 mo
174.32 79.751 li
168.695 75.1299 li
173.994 78.6772 li
cp
f
174.32 79.751 mo
174.436 80.8701 li
168.695 75.1299 li
174.32 79.751 li
cp
f
174.436 80.8701 mo
174.32 81.9907 li
168.695 75.1299 li
174.436 80.8701 li
cp
f
174.32 81.9907 mo
173.994 83.063 li
168.695 75.1299 li
174.32 81.9907 li
cp
f
173.994 83.063 mo
173.465 84.0576 li
168.695 75.1299 li
173.994 83.063 li
cp
f
173.465 84.0576 mo
172.754 84.9287 li
168.695 75.1299 li
173.465 84.0576 li
cp
f
172.754 84.9287 mo
171.881 85.6416 li
168.695 75.1299 li
172.754 84.9287 li
cp
f
171.881 85.6416 mo
170.889 86.1689 li
168.695 75.1299 li
171.881 85.6416 li
cp
f
170.889 86.1689 mo
169.814 86.4966 li
168.695 75.1299 li
170.889 86.1689 li
cp
f
169.814 86.4966 mo
168.695 86.6118 li
168.695 75.1299 li
169.814 86.4966 li
cp
f
168.695 86.6118 mo
167.575 86.4966 li
168.695 75.1299 li
168.695 86.6118 li
cp
f
167.575 86.4966 mo
166.502 86.1689 li
168.695 75.1299 li
167.575 86.4966 li
cp
f
166.502 86.1689 mo
165.51 85.6416 li
168.695 75.1299 li
166.502 86.1689 li
cp
f
165.51 85.6416 mo
164.637 84.9287 li
168.695 75.1299 li
165.51 85.6416 li
cp
f
164.637 84.9287 mo
163.924 84.0576 li
168.695 75.1299 li
164.637 84.9287 li
cp
f
163.924 84.0576 mo
163.396 83.063 li
168.695 75.1299 li
163.924 84.0576 li
cp
f
163.396 83.063 mo
163.069 81.9907 li
168.695 75.1299 li
163.396 83.063 li
cp
f
163.069 81.9907 mo
162.954 80.8701 li
168.695 75.1299 li
163.069 81.9907 li
cp
f
162.954 80.8701 mo
163.069 79.751 li
168.695 75.1299 li
162.954 80.8701 li
cp
f
163.069 79.751 mo
163.396 78.6772 li
168.695 75.1299 li
163.069 79.751 li
cp
f
163.396 78.6772 mo
163.924 77.6846 li
168.695 75.1299 li
163.396 78.6772 li
cp
f
163.924 77.6846 mo
164.637 76.8115 li
168.695 75.1299 li
163.924 77.6846 li
cp
f
164.637 76.8115 mo
165.51 76.1006 li
168.695 75.1299 li
164.637 76.8115 li
cp
f
165.51 76.1006 mo
166.502 75.5713 li
168.695 75.1299 li
165.51 76.1006 li
cp
f
166.502 75.5713 mo
167.575 75.2451 li
168.695 75.1299 li
166.502 75.5713 li
cp
f
167.575 75.2451 mo
168.695 75.1299 li
168.695 75.1299 li
167.575 75.2451 li
cp
f
168.695 75.1299 mo
169.814 75.2451 li
170.889 75.5713 li
171.881 76.1006 li
172.754 76.8115 li
173.465 77.6846 li
173.994 78.6772 li
174.32 79.751 li
174.436 80.8701 li
174.32 81.9907 li
173.994 83.063 li
173.465 84.0576 li
172.754 84.9287 li
171.881 85.6416 li
170.889 86.1689 li
169.814 86.4966 li
168.695 86.6118 li
167.575 86.4966 li
166.502 86.1689 li
165.51 85.6416 li
164.637 84.9287 li
163.924 84.0576 li
163.396 83.063 li
163.069 81.9907 li
162.954 80.8701 li
163.069 79.751 li
163.396 78.6772 li
163.924 77.6846 li
164.637 76.8115 li
165.51 76.1006 li
166.502 75.5713 li
167.575 75.2451 li
168.695 75.1299 li
@
3.00001 lw
115.633 15.9131 mo
120.948 15.9131 li
115.633 30.3247 mo
126.263 30.3247 li
115.633 44.7358 mo
120.948 44.7358 li
115.633 59.1475 mo
120.948 59.1475 li
115.633 73.5586 mo
120.948 73.5586 li
115.633 87.9717 mo
120.948 87.9717 li
115.633 102.383 mo
126.263 102.383 li
115.633 116.795 mo
120.948 116.795 li
115.633 131.206 mo
120.948 131.206 li
115.633 145.618 mo
120.948 145.618 li
115.633 160.031 mo
120.948 160.031 li
115.633 174.442 mo
126.263 174.442 li
115.633 188.854 mo
120.948 188.854 li
115.633 203.265 mo
120.948 203.265 li
115.633 217.678 mo
120.948 217.678 li
115.633 232.089 mo
120.948 232.089 li
115.633 246.501 mo
126.263 246.501 li
115.633 246.501 mo
115.633 1.5 li
744.194 246.501 mo
744.194 235.87 li
731.623 246.501 mo
731.623 241.186 li
719.051 246.501 mo
719.051 241.186 li
706.481 246.501 mo
706.481 241.186 li
693.91 246.501 mo
693.91 241.186 li
681.337 246.501 mo
681.337 241.186 li
668.766 246.501 mo
668.766 241.186 li
656.196 246.501 mo
656.196 241.186 li
643.625 246.501 mo
643.625 241.186 li
631.052 246.501 mo
631.052 241.186 li
618.483 246.501 mo
618.483 235.87 li
605.911 246.501 mo
605.911 241.186 li
593.339 246.501 mo
593.339 241.186 li
580.767 246.501 mo
580.767 241.186 li
568.198 246.501 mo
568.198 241.186 li
555.625 246.501 mo
555.625 241.186 li
543.054 246.501 mo
543.054 241.186 li
530.483 246.501 mo
530.483 241.186 li
517.913 246.501 mo
517.913 241.186 li
505.341 246.501 mo
505.341 241.186 li
492.769 246.501 mo
492.769 235.87 li
480.198 246.501 mo
480.198 241.186 li
467.627 246.501 mo
467.627 241.186 li
455.056 246.501 mo
455.056 241.186 li
442.484 246.501 mo
442.484 241.186 li
429.915 246.501 mo
429.915 241.186 li
417.342 246.501 mo
417.342 241.186 li
404.771 246.501 mo
404.771 241.186 li
392.199 246.501 mo
392.199 241.186 li
379.629 246.501 mo
379.629 241.186 li
367.058 246.501 mo
367.058 235.87 li
354.486 246.501 mo
354.486 241.186 li
341.914 246.501 mo
341.914 241.186 li
329.344 246.501 mo
329.344 241.186 li
316.772 246.501 mo
316.772 241.186 li
304.201 246.501 mo
304.201 241.186 li
291.629 246.501 mo
291.629 241.186 li
279.059 246.501 mo
279.059 241.186 li
266.487 246.501 mo
266.487 241.186 li
253.916 246.501 mo
253.916 241.186 li
241.344 246.501 mo
241.344 235.87 li
228.774 246.501 mo
228.774 241.186 li
216.203 246.501 mo
216.203 241.186 li
203.631 246.501 mo
203.631 241.186 li
191.061 246.501 mo
191.061 241.186 li
178.489 246.501 mo
178.489 241.186 li
165.917 246.501 mo
165.917 241.186 li
153.346 246.501 mo
153.346 241.186 li
140.775 246.501 mo
140.775 241.186 li
128.204 246.501 mo
128.204 241.186 li
115.633 246.501 mo
115.633 235.87 li
115.633 246.501 mo
744.194 246.501 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IDULSF+Helvetica /Helvetica findfont ct_VMDictPut/IDULSF+Helvetica*1 [48{/.notdef}rp /zero 207{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf80.0093 258.573 mo(0)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [48{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf80.0093 186.167 mo(5)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf61.0249 114.448 mo(10)[19.2339 0 ]xshIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf61.0249 42.3931 mo(15)[19.2339 0 ]xsh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 225 /uni3008 putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/uni3008 <1C60D8A8C9B82356E2B8CD2A1CDD298E14C4068471CC72806EAA3789CBB16DA7C812A876> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IDULSG+Symbol /Symbol findfont ct_VMDictPut/IDULSG+Symbol*1 [225{/.notdef}rp /uni3008 30{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [0 -34.584 -34.5275 0 0 0 ]msf30.3843 192.963 mo(\341)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B7EF320B5E1B1901757FD427860A5A6931496E07> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 76 /L putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 22{/.notdef}rp /L 179{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -34.584 -34.5275 0 0 0 ]msf30.3843 179.604 mo(L)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 22{/.notdef}rp /L 33{/.notdef}rp /n 145{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -21.4075 -21.3725 0 0 0 ]msf38.6421 161.096 mo(n)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 32 /space putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 3{/.notdef}rp /five 22{/.notdef}rp /L 33{/.notdef}rp /n 145{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -34.584 -34.5275 0 0 0 ]msf30.3843 148.924 mo( )sh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSG+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/uni3009 <1C60D8A8C9B82356E2B8C33BA3875A3753B2F1BD8D6463BBCDE0FCB5CFF1E78D735CA7E7> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSG+Symbol /Encoding getdup 241 /uni3009 putpop%ADOEndSubsetFont
/IDULSG+Symbol*1 [225{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [0 -34.584 -34.5275 0 0 0 ]msf30.3843 139.448 mo(\361)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 99 /c putdup 109 /m putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 3{/.notdef}rp /five 22{/.notdef}rp /L 22{/.notdef}rp /c 9{/.notdef}rp /m /n 145{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -34.584 -34.5275 0 0 0 ]msf30.3843 126.088 mo(\(cm\))[-11.5166 -17.292 -28.8091 0 ]ysh738.877 15.9131 mo
744.194 15.9131 li
733.563 30.3247 mo
744.194 30.3247 li
738.877 44.7358 mo
744.194 44.7358 li
738.877 59.1475 mo
744.194 59.1475 li
738.877 73.5586 mo
744.194 73.5586 li
738.877 87.9717 mo
744.194 87.9717 li
733.563 102.383 mo
744.194 102.383 li
738.877 116.795 mo
744.194 116.795 li
738.877 131.206 mo
744.194 131.206 li
738.877 145.618 mo
744.194 145.618 li
738.877 160.031 mo
744.194 160.031 li
733.563 174.442 mo
744.194 174.442 li
738.877 188.854 mo
744.194 188.854 li
738.877 203.265 mo
744.194 203.265 li
738.877 217.678 mo
744.194 217.678 li
738.877 232.089 mo
744.194 232.089 li
733.563 246.501 mo
744.194 246.501 li
744.194 246.501 mo
744.194 1.5 li
744.194 12.1313 mo
744.194 1.5 li
731.623 6.81641 mo
731.623 1.5 li
719.051 6.81641 mo
719.051 1.5 li
706.481 6.81641 mo
706.481 1.5 li
693.91 6.81641 mo
693.91 1.5 li
681.337 6.81641 mo
681.337 1.5 li
668.766 6.81641 mo
668.766 1.5 li
656.196 6.81641 mo
656.196 1.5 li
643.625 6.81641 mo
643.625 1.5 li
631.052 6.81641 mo
631.052 1.5 li
618.483 12.1313 mo
618.483 1.5 li
605.911 6.81641 mo
605.911 1.5 li
593.339 6.81641 mo
593.339 1.5 li
580.767 6.81641 mo
580.767 1.5 li
568.198 6.81641 mo
568.198 1.5 li
555.625 6.81641 mo
555.625 1.5 li
543.054 6.81641 mo
543.054 1.5 li
530.483 6.81641 mo
530.483 1.5 li
517.913 6.81641 mo
517.913 1.5 li
505.341 6.81641 mo
505.341 1.5 li
492.769 12.1313 mo
492.769 1.5 li
480.198 6.81641 mo
480.198 1.5 li
467.627 6.81641 mo
467.627 1.5 li
455.056 6.81641 mo
455.056 1.5 li
442.484 6.81641 mo
442.484 1.5 li
429.915 6.81641 mo
429.915 1.5 li
417.342 6.81641 mo
417.342 1.5 li
404.771 6.81641 mo
404.771 1.5 li
392.199 6.81641 mo
392.199 1.5 li
379.629 6.81641 mo
379.629 1.5 li
367.058 12.1313 mo
367.058 1.5 li
354.486 6.81641 mo
354.486 1.5 li
341.914 6.81641 mo
341.914 1.5 li
329.344 6.81641 mo
329.344 1.5 li
316.772 6.81641 mo
316.772 1.5 li
304.201 6.81641 mo
304.201 1.5 li
291.629 6.81641 mo
291.629 1.5 li
279.059 6.81641 mo
279.059 1.5 li
266.487 6.81641 mo
266.487 1.5 li
253.916 6.81641 mo
253.916 1.5 li
241.344 12.1313 mo
241.344 1.5 li
228.774 6.81641 mo
228.774 1.5 li
216.203 6.81641 mo
216.203 1.5 li
203.631 6.81641 mo
203.631 1.5 li
191.061 6.81641 mo
191.061 1.5 li
178.489 6.81641 mo
178.489 1.5 li
165.917 6.81641 mo
165.917 1.5 li
153.346 6.81641 mo
153.346 1.5 li
140.775 6.81641 mo
140.775 1.5 li
128.204 6.81641 mo
128.204 1.5 li
115.633 12.1313 mo
115.633 1.5 li
115.633 1.5 mo
744.194 1.5 li
@
2 lw
662.664 526.147 mo
663.784 526.262 li
664.856 526.59 li
665.849 527.118 li
666.721 527.831 li
667.434 528.702 li
667.962 529.696 li
668.29 530.768 li
668.405 531.889 li
668.29 533.008 li
667.962 534.081 li
667.434 535.075 li
666.721 535.948 li
665.849 536.659 li
664.856 537.186 li
663.784 537.514 li
662.664 537.629 li
661.544 537.514 li
660.47 537.186 li
659.478 536.659 li
658.605 535.948 li
657.893 535.075 li
657.365 534.081 li
657.039 533.008 li
656.923 531.889 li
657.039 530.768 li
657.365 529.696 li
657.893 528.702 li
658.605 527.831 li
659.478 527.118 li
660.47 526.59 li
661.544 526.262 li
662.664 526.147 li
621.538 537.266 mo
622.656 537.381 li
623.73 537.708 li
624.723 538.237 li
625.595 538.948 li
626.307 539.821 li
626.835 540.815 li
627.162 541.887 li
627.277 543.006 li
627.162 544.125 li
626.835 545.2 li
626.307 546.194 li
625.595 547.065 li
624.723 547.778 li
623.73 548.305 li
622.656 548.633 li
621.538 548.749 li
620.418 548.633 li
619.344 548.305 li
618.351 547.778 li
617.479 547.065 li
616.766 546.194 li
616.238 545.2 li
615.911 544.125 li
615.795 543.006 li
615.911 541.887 li
616.238 540.815 li
616.766 539.821 li
617.479 538.948 li
618.351 538.237 li
619.344 537.708 li
620.418 537.381 li
621.538 537.266 li
455.686 520.247 mo
456.804 520.362 li
457.878 520.688 li
458.872 521.217 li
459.744 521.928 li
460.456 522.801 li
460.983 523.793 li
461.31 524.868 li
461.425 525.987 li
461.31 527.106 li
460.983 528.18 li
460.456 529.172 li
459.744 530.045 li
458.872 530.756 li
457.878 531.286 li
456.804 531.612 li
455.686 531.727 li
454.565 531.612 li
453.493 531.286 li
452.499 530.756 li
451.627 530.045 li
450.915 529.172 li
450.387 528.18 li
450.059 527.106 li
449.944 525.987 li
450.059 524.868 li
450.387 523.793 li
450.915 522.801 li
451.627 521.928 li
452.499 521.217 li
453.493 520.688 li
454.565 520.362 li
455.686 520.247 li
395.057 528.792 mo
396.176 528.905 li
397.25 529.233 li
398.243 529.76 li
399.116 530.473 li
399.827 531.346 li
400.356 532.338 li
400.682 533.413 li
400.797 534.532 li
400.682 535.651 li
400.356 536.725 li
399.827 537.717 li
399.116 538.59 li
398.243 539.301 li
397.25 539.831 li
396.176 540.157 li
395.057 540.272 li
393.938 540.157 li
392.864 539.831 li
391.872 539.301 li
390.999 538.59 li
390.286 537.717 li
389.758 536.725 li
389.431 535.651 li
389.317 534.532 li
389.431 533.413 li
389.758 532.338 li
390.286 531.346 li
390.999 530.473 li
391.872 529.76 li
392.864 529.233 li
393.938 528.905 li
395.057 528.792 li
359.662 514.954 mo
360.78 515.069 li
361.853 515.397 li
362.847 515.924 li
363.72 516.637 li
364.431 517.508 li
364.958 518.502 li
365.287 519.577 li
365.401 520.696 li
365.287 521.815 li
364.958 522.887 li
364.431 523.881 li
363.72 524.754 li
362.847 525.465 li
361.853 525.993 li
360.78 526.321 li
359.662 526.436 li
358.541 526.321 li
357.468 525.993 li
356.474 525.465 li
355.602 524.754 li
354.89 523.881 li
354.363 522.887 li
354.035 521.815 li
353.92 520.696 li
354.035 519.577 li
354.363 518.502 li
354.89 517.508 li
355.602 516.637 li
356.474 515.924 li
357.468 515.397 li
358.541 515.069 li
359.662 514.954 li
313.595 493.5 mo
314.714 493.616 li
315.786 493.942 li
316.78 494.469 li
317.653 495.182 li
318.364 496.055 li
318.892 497.047 li
319.22 498.122 li
319.335 499.241 li
319.22 500.36 li
318.892 501.432 li
318.364 502.426 li
317.653 503.299 li
316.78 504.01 li
315.786 504.54 li
314.714 504.866 li
313.595 504.981 li
312.474 504.866 li
311.402 504.54 li
310.408 504.01 li
309.535 503.299 li
308.824 502.426 li
308.296 501.432 li
307.968 500.36 li
307.853 499.241 li
307.968 498.122 li
308.296 497.047 li
308.824 496.055 li
309.535 495.182 li
310.408 494.469 li
311.402 493.942 li
312.474 493.616 li
313.595 493.5 li
302.184 487.219 mo
303.304 487.334 li
304.376 487.663 li
305.369 488.19 li
306.242 488.903 li
306.955 489.774 li
307.482 490.768 li
307.81 491.84 li
307.925 492.961 li
307.81 494.081 li
307.482 495.155 li
306.955 496.147 li
306.242 497.02 li
305.369 497.731 li
304.376 498.258 li
303.304 498.586 li
302.184 498.702 li
301.065 498.586 li
299.991 498.258 li
298.998 497.731 li
298.125 497.02 li
297.414 496.147 li
296.885 495.155 li
296.559 494.081 li
296.444 492.961 li
296.559 491.84 li
296.885 490.768 li
297.414 489.774 li
298.125 488.903 li
298.998 488.19 li
299.991 487.663 li
301.065 487.334 li
302.184 487.219 li
306.258 485.069 mo
307.377 485.184 li
308.449 485.51 li
309.444 486.038 li
310.316 486.75 li
311.028 487.622 li
311.555 488.616 li
311.883 489.69 li
311.998 490.809 li
311.883 491.928 li
311.555 493 li
311.028 493.995 li
310.316 494.866 li
309.444 495.579 li
308.449 496.108 li
307.377 496.434 li
306.258 496.549 li
305.138 496.434 li
304.065 496.108 li
303.071 495.579 li
302.198 494.866 li
301.487 493.995 li
300.959 493 li
300.631 491.928 li
300.517 490.809 li
300.631 489.69 li
300.959 488.616 li
301.487 487.622 li
302.198 486.75 li
303.071 486.038 li
304.065 485.51 li
305.138 485.184 li
306.258 485.069 li
281.928 441.403 mo
283.047 441.518 li
284.122 441.844 li
285.114 442.372 li
285.987 443.086 li
286.698 443.958 li
287.227 444.952 li
287.553 446.024 li
287.668 447.143 li
287.553 448.262 li
287.227 449.336 li
286.698 450.329 li
285.987 451.202 li
285.114 451.915 li
284.122 452.442 li
283.047 452.768 li
281.928 452.883 li
280.808 452.768 li
279.735 452.442 li
278.743 451.915 li
277.87 451.202 li
277.157 450.329 li
276.629 449.336 li
276.302 448.262 li
276.187 447.143 li
276.302 446.024 li
276.629 444.952 li
277.157 443.958 li
277.87 443.086 li
278.743 442.372 li
279.735 441.844 li
280.808 441.518 li
281.928 441.403 li
261.446 438.424 mo
262.565 438.54 li
263.639 438.866 li
264.632 439.395 li
265.504 440.106 li
266.217 440.979 li
266.745 441.971 li
267.073 443.045 li
267.188 444.165 li
267.073 445.284 li
266.745 446.358 li
266.217 447.35 li
265.504 448.223 li
264.632 448.936 li
263.639 449.463 li
262.565 449.792 li
261.446 449.907 li
260.327 449.792 li
259.253 449.463 li
258.26 448.936 li
257.388 448.223 li
256.676 447.35 li
256.147 446.358 li
255.821 445.284 li
255.706 444.165 li
255.821 443.045 li
256.147 441.971 li
256.676 440.979 li
257.388 440.106 li
258.26 439.395 li
259.253 438.866 li
260.327 438.54 li
261.446 438.424 li
277.883 472.192 mo
279.003 472.307 li
280.076 472.633 li
281.07 473.161 li
281.941 473.874 li
282.654 474.745 li
283.182 475.739 li
283.509 476.813 li
283.624 477.932 li
283.509 479.049 li
283.182 480.124 li
282.654 481.118 li
281.941 481.989 li
281.07 482.702 li
280.076 483.231 li
279.003 483.557 li
277.883 483.67 li
276.764 483.557 li
275.689 483.231 li
274.697 482.702 li
273.824 481.989 li
273.113 481.118 li
272.584 480.124 li
272.258 479.049 li
272.143 477.932 li
272.258 476.813 li
272.584 475.739 li
273.113 474.745 li
273.824 473.874 li
274.697 473.161 li
275.689 472.633 li
276.764 472.307 li
277.883 472.192 li
244.811 462.084 mo
245.932 462.2 li
247.004 462.528 li
247.999 463.055 li
248.871 463.768 li
249.583 464.641 li
250.11 465.633 li
250.438 466.706 li
250.553 467.827 li
250.438 468.946 li
250.11 470.018 li
249.583 471.012 li
248.871 471.885 li
247.999 472.596 li
247.004 473.125 li
245.932 473.452 li
244.811 473.567 li
243.692 473.452 li
242.62 473.125 li
241.625 472.596 li
240.753 471.885 li
240.042 471.012 li
239.514 470.018 li
239.186 468.946 li
239.071 467.827 li
239.186 466.706 li
239.514 465.633 li
240.042 464.641 li
240.753 463.768 li
241.625 463.055 li
242.62 462.528 li
243.692 462.2 li
244.811 462.084 li
221.71 448.493 mo
222.831 448.608 li
223.904 448.936 li
224.898 449.463 li
225.769 450.176 li
226.482 451.049 li
227.009 452.042 li
227.337 453.114 li
227.452 454.235 li
227.337 455.354 li
227.009 456.428 li
226.482 457.42 li
225.769 458.293 li
224.898 459.004 li
223.904 459.534 li
222.831 459.86 li
221.71 459.975 li
220.592 459.86 li
219.518 459.534 li
218.525 459.004 li
217.652 458.293 li
216.941 457.42 li
216.414 456.428 li
216.086 455.354 li
215.971 454.235 li
216.086 453.114 li
216.414 452.042 li
216.941 451.049 li
217.652 450.176 li
218.525 449.463 li
219.518 448.936 li
220.592 448.608 li
221.71 448.493 li
217.411 418.653 mo
218.531 418.766 li
219.604 419.092 li
220.598 419.62 li
221.469 420.333 li
222.182 421.206 li
222.709 422.2 li
223.037 423.272 li
223.152 424.391 li
223.037 425.51 li
222.709 426.584 li
222.182 427.577 li
221.469 428.45 li
220.598 429.161 li
219.604 429.69 li
218.531 430.016 li
217.411 430.131 li
216.292 430.016 li
215.218 429.69 li
214.225 429.161 li
213.353 428.45 li
212.641 427.577 li
212.114 426.584 li
211.786 425.51 li
211.671 424.391 li
211.786 423.272 li
212.114 422.2 li
212.641 421.206 li
213.353 420.333 li
214.225 419.62 li
215.218 419.092 li
216.292 418.766 li
217.411 418.653 li
210.282 394.698 mo
211.402 394.813 li
212.475 395.139 li
213.469 395.668 li
214.34 396.379 li
215.053 397.252 li
215.581 398.245 li
215.908 399.319 li
216.023 400.438 li
215.908 401.557 li
215.581 402.631 li
215.053 403.624 li
214.34 404.497 li
213.469 405.209 li
212.475 405.737 li
211.402 406.065 li
210.282 406.18 li
209.163 406.065 li
208.089 405.737 li
207.096 405.209 li
206.224 404.497 li
205.512 403.624 li
204.983 402.631 li
204.657 401.557 li
204.542 400.438 li
204.657 399.319 li
204.983 398.245 li
205.512 397.252 li
206.224 396.379 li
207.096 395.668 li
208.089 395.139 li
209.163 394.813 li
210.282 394.698 li
186.273 377.583 mo
187.393 377.698 li
188.466 378.024 li
189.459 378.551 li
190.332 379.264 li
191.043 380.135 li
191.572 381.129 li
191.9 382.204 li
192.013 383.323 li
191.9 384.442 li
191.572 385.514 li
191.043 386.508 li
190.332 387.381 li
189.459 388.092 li
188.466 388.62 li
187.393 388.948 li
186.273 389.063 li
185.155 388.948 li
184.081 388.62 li
183.088 388.092 li
182.215 387.381 li
181.504 386.508 li
180.975 385.514 li
180.647 384.442 li
180.534 383.323 li
180.647 382.204 li
180.975 381.129 li
181.504 380.135 li
182.215 379.264 li
183.088 378.551 li
184.081 378.024 li
185.155 377.698 li
186.273 377.583 li
186.085 393.18 mo
187.204 393.295 li
188.278 393.622 li
189.271 394.151 li
190.143 394.862 li
190.854 395.735 li
191.382 396.727 li
191.709 397.801 li
191.825 398.92 li
191.709 400.04 li
191.382 401.114 li
190.854 402.106 li
190.143 402.979 li
189.271 403.692 li
188.278 404.219 li
187.204 404.547 li
186.085 404.661 li
184.964 404.547 li
183.892 404.219 li
182.897 403.692 li
182.026 402.979 li
181.313 402.106 li
180.786 401.114 li
180.458 400.04 li
180.343 398.92 li
180.458 397.801 li
180.786 396.727 li
181.313 395.735 li
182.026 394.862 li
182.897 394.151 li
183.892 393.622 li
184.964 393.295 li
186.085 393.18 li
179.984 390.514 mo
181.103 390.629 li
182.177 390.958 li
183.169 391.485 li
184.042 392.198 li
184.753 393.071 li
185.281 394.063 li
185.608 395.137 li
185.724 396.256 li
185.608 397.375 li
185.281 398.45 li
184.753 399.442 li
184.042 400.315 li
183.169 401.026 li
182.177 401.555 li
181.103 401.881 li
179.984 401.997 li
178.863 401.881 li
177.791 401.555 li
176.796 401.026 li
175.925 400.315 li
175.212 399.442 li
174.685 398.45 li
174.357 397.375 li
174.242 396.256 li
174.357 395.137 li
174.685 394.063 li
175.212 393.071 li
175.925 392.198 li
176.796 391.485 li
177.791 390.958 li
178.863 390.629 li
179.984 390.514 li
167.078 375.059 mo
168.198 375.174 li
169.271 375.502 li
170.265 376.03 li
171.136 376.743 li
171.849 377.614 li
172.376 378.608 li
172.705 379.68 li
172.819 380.801 li
172.705 381.92 li
172.376 382.995 li
171.849 383.987 li
171.136 384.86 li
170.265 385.571 li
169.271 386.1 li
168.198 386.426 li
167.078 386.542 li
165.959 386.426 li
164.885 386.1 li
163.892 385.571 li
163.02 384.86 li
162.308 383.987 li
161.781 382.995 li
161.453 381.92 li
161.338 380.801 li
161.453 379.68 li
161.781 378.608 li
162.308 377.614 li
163.02 376.743 li
163.892 376.03 li
164.885 375.502 li
165.959 375.174 li
167.078 375.059 li
168.695 352.811 mo
169.814 352.926 li
170.889 353.252 li
171.881 353.782 li
172.754 354.493 li
173.465 355.366 li
173.994 356.358 li
174.32 357.432 li
174.436 358.551 li
174.32 359.67 li
173.994 360.745 li
173.465 361.737 li
172.754 362.61 li
171.881 363.323 li
170.889 363.85 li
169.814 364.178 li
168.695 364.292 li
167.575 364.178 li
166.502 363.85 li
165.51 363.323 li
164.637 362.61 li
163.924 361.737 li
163.396 360.745 li
163.069 359.67 li
162.954 358.551 li
163.069 357.432 li
163.396 356.358 li
163.924 355.366 li
164.637 354.493 li
165.51 353.782 li
166.502 353.252 li
167.575 352.926 li
168.695 352.811 li
159.357 342.307 mo
160.477 342.42 li
161.55 342.749 li
162.543 343.276 li
163.416 343.989 li
164.129 344.862 li
164.656 345.854 li
164.984 346.928 li
165.099 348.047 li
164.984 349.167 li
164.656 350.241 li
164.129 351.233 li
163.416 352.106 li
162.543 352.817 li
161.55 353.346 li
160.477 353.672 li
159.357 353.788 li
158.239 353.672 li
157.165 353.346 li
156.172 352.817 li
155.299 352.106 li
154.588 351.233 li
154.059 350.241 li
153.732 349.167 li
153.618 348.047 li
153.732 346.928 li
154.059 345.854 li
154.588 344.862 li
155.299 343.989 li
156.172 343.276 li
157.165 342.749 li
158.239 342.42 li
159.357 342.307 li
142.405 349.637 mo
143.524 349.752 li
144.598 350.081 li
145.59 350.608 li
146.463 351.321 li
147.176 352.194 li
147.703 353.186 li
148.031 354.258 li
148.146 355.379 li
148.031 356.499 li
147.703 357.573 li
147.176 358.565 li
146.463 359.438 li
145.59 360.149 li
144.598 360.678 li
143.524 361.004 li
142.405 361.12 li
141.286 361.004 li
140.212 360.678 li
139.219 360.149 li
138.347 359.438 li
137.634 358.565 li
137.106 357.573 li
136.779 356.499 li
136.665 355.379 li
136.779 354.258 li
137.106 353.186 li
137.634 352.194 li
138.347 351.321 li
139.219 350.608 li
140.212 350.081 li
141.286 349.752 li
142.405 349.637 li
116.288 303.261 mo
117.407 303.375 li
118.481 303.702 li
119.474 304.231 li
120.347 304.943 li
121.058 305.815 li
121.586 306.808 li
121.914 307.882 li
122.029 309.001 li
121.914 310.12 li
121.586 311.194 li
121.058 312.187 li
120.347 313.059 li
119.474 313.77 li
118.481 314.299 li
117.407 314.627 li
116.288 314.741 li
115.168 314.627 li
114.095 314.299 li
113.102 313.77 li
112.229 313.059 li
111.518 312.187 li
110.989 311.194 li
110.662 310.12 li
110.547 309.001 li
110.662 307.882 li
110.989 306.808 li
111.518 305.815 li
112.229 304.943 li
113.102 304.231 li
114.095 303.702 li
115.168 303.375 li
116.288 303.261 li
133.727 279.91 mo
134.847 280.025 li
135.92 280.351 li
136.913 280.88 li
137.786 281.591 li
138.498 282.464 li
139.025 283.457 li
139.353 284.531 li
139.468 285.65 li
139.353 286.769 li
139.025 287.843 li
138.498 288.835 li
137.786 289.708 li
136.913 290.421 li
135.92 290.948 li
134.847 291.276 li
133.727 291.391 li
132.608 291.276 li
131.534 290.948 li
130.541 290.421 li
129.668 289.708 li
128.957 288.835 li
128.429 287.843 li
128.101 286.769 li
127.986 285.65 li
128.101 284.531 li
128.429 283.457 li
128.957 282.464 li
129.668 281.591 li
130.541 280.88 li
131.534 280.351 li
132.608 280.025 li
133.727 279.91 li
118.066 319.186 mo
119.185 319.299 li
120.259 319.627 li
121.252 320.157 li
122.125 320.868 li
122.836 321.741 li
123.364 322.733 li
123.691 323.807 li
123.806 324.926 li
123.691 326.045 li
123.364 327.12 li
122.836 328.112 li
122.125 328.985 li
121.252 329.696 li
120.259 330.225 li
119.185 330.553 li
118.066 330.667 li
116.946 330.553 li
115.873 330.225 li
114.879 329.696 li
114.007 328.985 li
113.295 328.112 li
112.767 327.12 li
112.44 326.045 li
112.325 324.926 li
112.44 323.807 li
112.767 322.733 li
113.295 321.741 li
114.007 320.868 li
114.879 320.157 li
115.873 319.627 li
116.946 319.299 li
118.066 319.186 li
130.153 357.012 mo
131.273 357.127 li
132.346 357.454 li
133.339 357.981 li
134.212 358.694 li
134.924 359.565 li
135.452 360.559 li
135.779 361.633 li
135.894 362.752 li
135.779 363.872 li
135.452 364.944 li
134.924 365.938 li
134.212 366.809 li
133.339 367.522 li
132.346 368.051 li
131.273 368.377 li
130.153 368.493 li
129.034 368.377 li
127.96 368.051 li
126.967 367.522 li
126.095 366.809 li
125.383 365.938 li
124.855 364.944 li
124.528 363.872 li
124.413 362.752 li
124.528 361.633 li
124.855 360.559 li
125.383 359.565 li
126.095 358.694 li
126.967 357.981 li
127.96 357.454 li
129.034 357.127 li
130.153 357.012 li
157.515 379.043 mo
158.635 379.159 li
159.708 379.485 li
160.702 380.014 li
161.575 380.725 li
162.286 381.598 li
162.813 382.59 li
163.141 383.665 li
163.256 384.784 li
163.141 385.903 li
162.813 386.977 li
162.286 387.969 li
161.575 388.842 li
160.702 389.553 li
159.708 390.083 li
158.635 390.411 li
157.515 390.524 li
156.396 390.411 li
155.323 390.083 li
154.329 389.553 li
153.456 388.842 li
152.745 387.969 li
152.217 386.977 li
151.89 385.903 li
151.774 384.784 li
151.89 383.665 li
152.217 382.59 li
152.745 381.598 li
153.456 380.725 li
154.329 380.014 li
155.323 379.485 li
156.396 379.159 li
157.515 379.043 li
141.767 364.463 mo
142.886 364.579 li
143.96 364.907 li
144.953 365.434 li
145.825 366.147 li
146.538 367.018 li
147.065 368.012 li
147.393 369.084 li
147.507 370.206 li
147.393 371.325 li
147.065 372.399 li
146.538 373.391 li
145.825 374.264 li
144.953 374.975 li
143.96 375.504 li
142.886 375.831 li
141.767 375.946 li
140.647 375.831 li
139.574 375.504 li
138.581 374.975 li
137.708 374.264 li
136.997 373.391 li
136.468 372.399 li
136.141 371.325 li
136.026 370.206 li
136.141 369.084 li
136.468 368.012 li
136.997 367.018 li
137.708 366.147 li
138.581 365.434 li
139.574 364.907 li
140.647 364.579 li
141.767 364.463 li
156.104 341.424 mo
157.224 341.54 li
158.298 341.866 li
159.291 342.393 li
160.163 343.106 li
160.875 343.979 li
161.402 344.973 li
161.729 346.045 li
161.845 347.165 li
161.729 348.284 li
161.402 349.358 li
160.875 350.35 li
160.163 351.223 li
159.291 351.934 li
158.298 352.463 li
157.224 352.79 li
156.104 352.905 li
154.984 352.79 li
153.912 352.463 li
152.917 351.934 li
152.046 351.223 li
151.333 350.35 li
150.806 349.358 li
150.478 348.284 li
150.363 347.165 li
150.478 346.045 li
150.806 344.973 li
151.333 343.979 li
152.046 343.106 li
152.917 342.393 li
153.912 341.866 li
154.984 341.54 li
156.104 341.424 li
159.807 388.448 mo
160.927 388.563 li
162 388.891 li
162.994 389.418 li
163.865 390.129 li
164.578 391.002 li
165.105 391.997 li
165.433 393.069 li
165.548 394.188 li
165.433 395.309 li
165.105 396.381 li
164.578 397.375 li
163.865 398.249 li
162.994 398.959 li
162 399.487 li
160.927 399.815 li
159.807 399.93 li
158.688 399.815 li
157.614 399.487 li
156.621 398.959 li
155.748 398.249 li
155.037 397.375 li
154.509 396.381 li
154.182 395.309 li
154.067 394.188 li
154.182 393.069 li
154.509 391.997 li
155.037 391.002 li
155.748 390.129 li
156.621 389.418 li
157.614 388.891 li
158.688 388.563 li
159.807 388.448 li
@
160.927 388.563 mo
162 388.891 li
159.807 388.448 li
160.927 388.563 li
cp
f
162 388.891 mo
162.994 389.418 li
159.807 388.448 li
162 388.891 li
cp
f
162.994 389.418 mo
163.865 390.129 li
159.807 388.448 li
162.994 389.418 li
cp
f
163.865 390.129 mo
164.578 391.002 li
159.807 388.448 li
163.865 390.129 li
cp
f
164.578 391.002 mo
165.105 391.997 li
159.807 388.448 li
164.578 391.002 li
cp
f
165.105 391.997 mo
165.433 393.069 li
159.807 388.448 li
165.105 391.997 li
cp
f
165.433 393.069 mo
165.548 394.188 li
159.807 388.448 li
165.433 393.069 li
cp
f
165.548 394.188 mo
165.433 395.309 li
159.807 388.448 li
165.548 394.188 li
cp
f
165.433 395.309 mo
165.105 396.381 li
159.807 388.448 li
165.433 395.309 li
cp
f
165.105 396.381 mo
164.578 397.375 li
159.807 388.448 li
165.105 396.381 li
cp
f
164.578 397.375 mo
163.865 398.249 li
159.807 388.448 li
164.578 397.375 li
cp
f
163.865 398.249 mo
162.994 398.959 li
159.807 388.448 li
163.865 398.249 li
cp
f
162.994 398.959 mo
162 399.487 li
159.807 388.448 li
162.994 398.959 li
cp
f
162 399.487 mo
160.927 399.815 li
159.807 388.448 li
162 399.487 li
cp
f
160.927 399.815 mo
159.807 399.93 li
159.807 388.448 li
160.927 399.815 li
cp
f
159.807 399.93 mo
158.688 399.815 li
159.807 388.448 li
159.807 399.93 li
cp
f
158.688 399.815 mo
157.614 399.487 li
159.807 388.448 li
158.688 399.815 li
cp
f
157.614 399.487 mo
156.621 398.959 li
159.807 388.448 li
157.614 399.487 li
cp
f
156.621 398.959 mo
155.748 398.249 li
159.807 388.448 li
156.621 398.959 li
cp
f
155.748 398.249 mo
155.037 397.375 li
159.807 388.448 li
155.748 398.249 li
cp
f
155.037 397.375 mo
154.509 396.381 li
159.807 388.448 li
155.037 397.375 li
cp
f
154.509 396.381 mo
154.182 395.309 li
159.807 388.448 li
154.509 396.381 li
cp
f
154.182 395.309 mo
154.067 394.188 li
159.807 388.448 li
154.182 395.309 li
cp
f
154.067 394.188 mo
154.182 393.069 li
159.807 388.448 li
154.067 394.188 li
cp
f
154.182 393.069 mo
154.509 391.997 li
159.807 388.448 li
154.182 393.069 li
cp
f
154.509 391.997 mo
155.037 391.002 li
159.807 388.448 li
154.509 391.997 li
cp
f
155.037 391.002 mo
155.748 390.129 li
159.807 388.448 li
155.037 391.002 li
cp
f
155.748 390.129 mo
156.621 389.418 li
159.807 388.448 li
155.748 390.129 li
cp
f
156.621 389.418 mo
157.614 388.891 li
159.807 388.448 li
156.621 389.418 li
cp
f
157.614 388.891 mo
158.688 388.563 li
159.807 388.448 li
157.614 388.891 li
cp
f
158.688 388.563 mo
159.807 388.448 li
159.807 388.448 li
158.688 388.563 li
cp
f
1 lw
159.807 388.448 mo
160.927 388.563 li
162 388.891 li
162.994 389.418 li
163.865 390.129 li
164.578 391.002 li
165.105 391.997 li
165.433 393.069 li
165.548 394.188 li
165.433 395.309 li
165.105 396.381 li
164.578 397.375 li
163.865 398.249 li
162.994 398.959 li
162 399.487 li
160.927 399.815 li
159.807 399.93 li
158.688 399.815 li
157.614 399.487 li
156.621 398.959 li
155.748 398.249 li
155.037 397.375 li
154.509 396.381 li
154.182 395.309 li
154.067 394.188 li
154.182 393.069 li
154.509 391.997 li
155.037 391.002 li
155.748 390.129 li
156.621 389.418 li
157.614 388.891 li
158.688 388.563 li
159.807 388.448 li
@
157.224 341.54 mo
158.298 341.866 li
156.104 341.424 li
157.224 341.54 li
cp
f
158.298 341.866 mo
159.291 342.393 li
156.104 341.424 li
158.298 341.866 li
cp
f
159.291 342.393 mo
160.163 343.106 li
156.104 341.424 li
159.291 342.393 li
cp
f
160.163 343.106 mo
160.875 343.979 li
156.104 341.424 li
160.163 343.106 li
cp
f
160.875 343.979 mo
161.402 344.973 li
156.104 341.424 li
160.875 343.979 li
cp
f
161.402 344.973 mo
161.729 346.045 li
156.104 341.424 li
161.402 344.973 li
cp
f
161.729 346.045 mo
161.845 347.165 li
156.104 341.424 li
161.729 346.045 li
cp
f
161.845 347.165 mo
161.729 348.284 li
156.104 341.424 li
161.845 347.165 li
cp
f
161.729 348.284 mo
161.402 349.358 li
156.104 341.424 li
161.729 348.284 li
cp
f
161.402 349.358 mo
160.875 350.35 li
156.104 341.424 li
161.402 349.358 li
cp
f
160.875 350.35 mo
160.163 351.223 li
156.104 341.424 li
160.875 350.35 li
cp
f
160.163 351.223 mo
159.291 351.934 li
156.104 341.424 li
160.163 351.223 li
cp
f
159.291 351.934 mo
158.298 352.463 li
156.104 341.424 li
159.291 351.934 li
cp
f
158.298 352.463 mo
157.224 352.79 li
156.104 341.424 li
158.298 352.463 li
cp
f
157.224 352.79 mo
156.104 352.905 li
156.104 341.424 li
157.224 352.79 li
cp
f
156.104 352.905 mo
154.984 352.79 li
156.104 341.424 li
156.104 352.905 li
cp
f
154.984 352.79 mo
153.912 352.463 li
156.104 341.424 li
154.984 352.79 li
cp
f
153.912 352.463 mo
152.917 351.934 li
156.104 341.424 li
153.912 352.463 li
cp
f
152.917 351.934 mo
152.046 351.223 li
156.104 341.424 li
152.917 351.934 li
cp
f
152.046 351.223 mo
151.333 350.35 li
156.104 341.424 li
152.046 351.223 li
cp
f
151.333 350.35 mo
150.806 349.358 li
156.104 341.424 li
151.333 350.35 li
cp
f
150.806 349.358 mo
150.478 348.284 li
156.104 341.424 li
150.806 349.358 li
cp
f
150.478 348.284 mo
150.363 347.165 li
156.104 341.424 li
150.478 348.284 li
cp
f
150.363 347.165 mo
150.478 346.045 li
156.104 341.424 li
150.363 347.165 li
cp
f
150.478 346.045 mo
150.806 344.973 li
156.104 341.424 li
150.478 346.045 li
cp
f
150.806 344.973 mo
151.333 343.979 li
156.104 341.424 li
150.806 344.973 li
cp
f
151.333 343.979 mo
152.046 343.106 li
156.104 341.424 li
151.333 343.979 li
cp
f
152.046 343.106 mo
152.917 342.393 li
156.104 341.424 li
152.046 343.106 li
cp
f
152.917 342.393 mo
153.912 341.866 li
156.104 341.424 li
152.917 342.393 li
cp
f
153.912 341.866 mo
154.984 341.54 li
156.104 341.424 li
153.912 341.866 li
cp
f
154.984 341.54 mo
156.104 341.424 li
156.104 341.424 li
154.984 341.54 li
cp
f
156.104 341.424 mo
157.224 341.54 li
158.298 341.866 li
159.291 342.393 li
160.163 343.106 li
160.875 343.979 li
161.402 344.973 li
161.729 346.045 li
161.845 347.165 li
161.729 348.284 li
161.402 349.358 li
160.875 350.35 li
160.163 351.223 li
159.291 351.934 li
158.298 352.463 li
157.224 352.79 li
156.104 352.905 li
154.984 352.79 li
153.912 352.463 li
152.917 351.934 li
152.046 351.223 li
151.333 350.35 li
150.806 349.358 li
150.478 348.284 li
150.363 347.165 li
150.478 346.045 li
150.806 344.973 li
151.333 343.979 li
152.046 343.106 li
152.917 342.393 li
153.912 341.866 li
154.984 341.54 li
156.104 341.424 li
@
142.886 364.579 mo
143.96 364.907 li
141.767 364.463 li
142.886 364.579 li
cp
f
143.96 364.907 mo
144.953 365.434 li
141.767 364.463 li
143.96 364.907 li
cp
f
144.953 365.434 mo
145.825 366.147 li
141.767 364.463 li
144.953 365.434 li
cp
f
145.825 366.147 mo
146.538 367.018 li
141.767 364.463 li
145.825 366.147 li
cp
f
146.538 367.018 mo
147.065 368.012 li
141.767 364.463 li
146.538 367.018 li
cp
f
147.065 368.012 mo
147.393 369.084 li
141.767 364.463 li
147.065 368.012 li
cp
f
147.393 369.084 mo
147.507 370.206 li
141.767 364.463 li
147.393 369.084 li
cp
f
147.507 370.206 mo
147.393 371.325 li
141.767 364.463 li
147.507 370.206 li
cp
f
147.393 371.325 mo
147.065 372.399 li
141.767 364.463 li
147.393 371.325 li
cp
f
147.065 372.399 mo
146.538 373.391 li
141.767 364.463 li
147.065 372.399 li
cp
f
146.538 373.391 mo
145.825 374.264 li
141.767 364.463 li
146.538 373.391 li
cp
f
145.825 374.264 mo
144.953 374.975 li
141.767 364.463 li
145.825 374.264 li
cp
f
144.953 374.975 mo
143.96 375.504 li
141.767 364.463 li
144.953 374.975 li
cp
f
143.96 375.504 mo
142.886 375.831 li
141.767 364.463 li
143.96 375.504 li
cp
f
142.886 375.831 mo
141.767 375.946 li
141.767 364.463 li
142.886 375.831 li
cp
f
141.767 375.946 mo
140.647 375.831 li
141.767 364.463 li
141.767 375.946 li
cp
f
140.647 375.831 mo
139.574 375.504 li
141.767 364.463 li
140.647 375.831 li
cp
f
139.574 375.504 mo
138.581 374.975 li
141.767 364.463 li
139.574 375.504 li
cp
f
138.581 374.975 mo
137.708 374.264 li
141.767 364.463 li
138.581 374.975 li
cp
f
137.708 374.264 mo
136.997 373.391 li
141.767 364.463 li
137.708 374.264 li
cp
f
136.997 373.391 mo
136.468 372.399 li
141.767 364.463 li
136.997 373.391 li
cp
f
136.468 372.399 mo
136.141 371.325 li
141.767 364.463 li
136.468 372.399 li
cp
f
136.141 371.325 mo
136.026 370.206 li
141.767 364.463 li
136.141 371.325 li
cp
f
136.026 370.206 mo
136.141 369.084 li
141.767 364.463 li
136.026 370.206 li
cp
f
136.141 369.084 mo
136.468 368.012 li
141.767 364.463 li
136.141 369.084 li
cp
f
136.468 368.012 mo
136.997 367.018 li
141.767 364.463 li
136.468 368.012 li
cp
f
136.997 367.018 mo
137.708 366.147 li
141.767 364.463 li
136.997 367.018 li
cp
f
137.708 366.147 mo
138.581 365.434 li
141.767 364.463 li
137.708 366.147 li
cp
f
138.581 365.434 mo
139.574 364.907 li
141.767 364.463 li
138.581 365.434 li
cp
f
139.574 364.907 mo
140.647 364.579 li
141.767 364.463 li
139.574 364.907 li
cp
f
140.647 364.579 mo
141.767 364.463 li
141.767 364.463 li
140.647 364.579 li
cp
f
141.767 364.463 mo
142.886 364.579 li
143.96 364.907 li
144.953 365.434 li
145.825 366.147 li
146.538 367.018 li
147.065 368.012 li
147.393 369.084 li
147.507 370.206 li
147.393 371.325 li
147.065 372.399 li
146.538 373.391 li
145.825 374.264 li
144.953 374.975 li
143.96 375.504 li
142.886 375.831 li
141.767 375.946 li
140.647 375.831 li
139.574 375.504 li
138.581 374.975 li
137.708 374.264 li
136.997 373.391 li
136.468 372.399 li
136.141 371.325 li
136.026 370.206 li
136.141 369.084 li
136.468 368.012 li
136.997 367.018 li
137.708 366.147 li
138.581 365.434 li
139.574 364.907 li
140.647 364.579 li
141.767 364.463 li
@
158.635 379.159 mo
159.708 379.485 li
157.515 379.043 li
158.635 379.159 li
cp
f
159.708 379.485 mo
160.702 380.014 li
157.515 379.043 li
159.708 379.485 li
cp
f
160.702 380.014 mo
161.575 380.725 li
157.515 379.043 li
160.702 380.014 li
cp
f
161.575 380.725 mo
162.286 381.598 li
157.515 379.043 li
161.575 380.725 li
cp
f
162.286 381.598 mo
162.813 382.59 li
157.515 379.043 li
162.286 381.598 li
cp
f
162.813 382.59 mo
163.141 383.665 li
157.515 379.043 li
162.813 382.59 li
cp
f
163.141 383.665 mo
163.256 384.784 li
157.515 379.043 li
163.141 383.665 li
cp
f
163.256 384.784 mo
163.141 385.903 li
157.515 379.043 li
163.256 384.784 li
cp
f
163.141 385.903 mo
162.813 386.977 li
157.515 379.043 li
163.141 385.903 li
cp
f
162.813 386.977 mo
162.286 387.969 li
157.515 379.043 li
162.813 386.977 li
cp
f
162.286 387.969 mo
161.575 388.842 li
157.515 379.043 li
162.286 387.969 li
cp
f
161.575 388.842 mo
160.702 389.553 li
157.515 379.043 li
161.575 388.842 li
cp
f
160.702 389.553 mo
159.708 390.083 li
157.515 379.043 li
160.702 389.553 li
cp
f
159.708 390.083 mo
158.635 390.411 li
157.515 379.043 li
159.708 390.083 li
cp
f
158.635 390.411 mo
157.515 390.524 li
157.515 379.043 li
158.635 390.411 li
cp
f
157.515 390.524 mo
156.396 390.411 li
157.515 379.043 li
157.515 390.524 li
cp
f
156.396 390.411 mo
155.323 390.083 li
157.515 379.043 li
156.396 390.411 li
cp
f
155.323 390.083 mo
154.329 389.553 li
157.515 379.043 li
155.323 390.083 li
cp
f
154.329 389.553 mo
153.456 388.842 li
157.515 379.043 li
154.329 389.553 li
cp
f
153.456 388.842 mo
152.745 387.969 li
157.515 379.043 li
153.456 388.842 li
cp
f
152.745 387.969 mo
152.217 386.977 li
157.515 379.043 li
152.745 387.969 li
cp
f
152.217 386.977 mo
151.89 385.903 li
157.515 379.043 li
152.217 386.977 li
cp
f
151.89 385.903 mo
151.774 384.784 li
157.515 379.043 li
151.89 385.903 li
cp
f
151.774 384.784 mo
151.89 383.665 li
157.515 379.043 li
151.774 384.784 li
cp
f
151.89 383.665 mo
152.217 382.59 li
157.515 379.043 li
151.89 383.665 li
cp
f
152.217 382.59 mo
152.745 381.598 li
157.515 379.043 li
152.217 382.59 li
cp
f
152.745 381.598 mo
153.456 380.725 li
157.515 379.043 li
152.745 381.598 li
cp
f
153.456 380.725 mo
154.329 380.014 li
157.515 379.043 li
153.456 380.725 li
cp
f
154.329 380.014 mo
155.323 379.485 li
157.515 379.043 li
154.329 380.014 li
cp
f
155.323 379.485 mo
156.396 379.159 li
157.515 379.043 li
155.323 379.485 li
cp
f
156.396 379.159 mo
157.515 379.043 li
157.515 379.043 li
156.396 379.159 li
cp
f
157.515 379.043 mo
158.635 379.159 li
159.708 379.485 li
160.702 380.014 li
161.575 380.725 li
162.286 381.598 li
162.813 382.59 li
163.141 383.665 li
163.256 384.784 li
163.141 385.903 li
162.813 386.977 li
162.286 387.969 li
161.575 388.842 li
160.702 389.553 li
159.708 390.083 li
158.635 390.411 li
157.515 390.524 li
156.396 390.411 li
155.323 390.083 li
154.329 389.553 li
153.456 388.842 li
152.745 387.969 li
152.217 386.977 li
151.89 385.903 li
151.774 384.784 li
151.89 383.665 li
152.217 382.59 li
152.745 381.598 li
153.456 380.725 li
154.329 380.014 li
155.323 379.485 li
156.396 379.159 li
157.515 379.043 li
@
131.273 357.127 mo
132.346 357.454 li
130.153 357.012 li
131.273 357.127 li
cp
f
132.346 357.454 mo
133.339 357.981 li
130.153 357.012 li
132.346 357.454 li
cp
f
133.339 357.981 mo
134.212 358.694 li
130.153 357.012 li
133.339 357.981 li
cp
f
134.212 358.694 mo
134.924 359.565 li
130.153 357.012 li
134.212 358.694 li
cp
f
134.924 359.565 mo
135.452 360.559 li
130.153 357.012 li
134.924 359.565 li
cp
f
135.452 360.559 mo
135.779 361.633 li
130.153 357.012 li
135.452 360.559 li
cp
f
135.779 361.633 mo
135.894 362.752 li
130.153 357.012 li
135.779 361.633 li
cp
f
135.894 362.752 mo
135.779 363.872 li
130.153 357.012 li
135.894 362.752 li
cp
f
135.779 363.872 mo
135.452 364.944 li
130.153 357.012 li
135.779 363.872 li
cp
f
135.452 364.944 mo
134.924 365.938 li
130.153 357.012 li
135.452 364.944 li
cp
f
134.924 365.938 mo
134.212 366.809 li
130.153 357.012 li
134.924 365.938 li
cp
f
134.212 366.809 mo
133.339 367.522 li
130.153 357.012 li
134.212 366.809 li
cp
f
133.339 367.522 mo
132.346 368.051 li
130.153 357.012 li
133.339 367.522 li
cp
f
132.346 368.051 mo
131.273 368.377 li
130.153 357.012 li
132.346 368.051 li
cp
f
131.273 368.377 mo
130.153 368.493 li
130.153 357.012 li
131.273 368.377 li
cp
f
130.153 368.493 mo
129.034 368.377 li
130.153 357.012 li
130.153 368.493 li
cp
f
129.034 368.377 mo
127.96 368.051 li
130.153 357.012 li
129.034 368.377 li
cp
f
127.96 368.051 mo
126.967 367.522 li
130.153 357.012 li
127.96 368.051 li
cp
f
126.967 367.522 mo
126.095 366.809 li
130.153 357.012 li
126.967 367.522 li
cp
f
126.095 366.809 mo
125.383 365.938 li
130.153 357.012 li
126.095 366.809 li
cp
f
125.383 365.938 mo
124.855 364.944 li
130.153 357.012 li
125.383 365.938 li
cp
f
124.855 364.944 mo
124.528 363.872 li
130.153 357.012 li
124.855 364.944 li
cp
f
124.528 363.872 mo
124.413 362.752 li
130.153 357.012 li
124.528 363.872 li
cp
f
124.413 362.752 mo
124.528 361.633 li
130.153 357.012 li
124.413 362.752 li
cp
f
124.528 361.633 mo
124.855 360.559 li
130.153 357.012 li
124.528 361.633 li
cp
f
124.855 360.559 mo
125.383 359.565 li
130.153 357.012 li
124.855 360.559 li
cp
f
125.383 359.565 mo
126.095 358.694 li
130.153 357.012 li
125.383 359.565 li
cp
f
126.095 358.694 mo
126.967 357.981 li
130.153 357.012 li
126.095 358.694 li
cp
f
126.967 357.981 mo
127.96 357.454 li
130.153 357.012 li
126.967 357.981 li
cp
f
127.96 357.454 mo
129.034 357.127 li
130.153 357.012 li
127.96 357.454 li
cp
f
129.034 357.127 mo
130.153 357.012 li
130.153 357.012 li
129.034 357.127 li
cp
f
130.153 357.012 mo
131.273 357.127 li
132.346 357.454 li
133.339 357.981 li
134.212 358.694 li
134.924 359.565 li
135.452 360.559 li
135.779 361.633 li
135.894 362.752 li
135.779 363.872 li
135.452 364.944 li
134.924 365.938 li
134.212 366.809 li
133.339 367.522 li
132.346 368.051 li
131.273 368.377 li
130.153 368.493 li
129.034 368.377 li
127.96 368.051 li
126.967 367.522 li
126.095 366.809 li
125.383 365.938 li
124.855 364.944 li
124.528 363.872 li
124.413 362.752 li
124.528 361.633 li
124.855 360.559 li
125.383 359.565 li
126.095 358.694 li
126.967 357.981 li
127.96 357.454 li
129.034 357.127 li
130.153 357.012 li
@
119.185 319.299 mo
120.259 319.627 li
118.066 319.186 li
119.185 319.299 li
cp
f
120.259 319.627 mo
121.252 320.157 li
118.066 319.186 li
120.259 319.627 li
cp
f
121.252 320.157 mo
122.125 320.868 li
118.066 319.186 li
121.252 320.157 li
cp
f
122.125 320.868 mo
122.836 321.741 li
118.066 319.186 li
122.125 320.868 li
cp
f
122.836 321.741 mo
123.364 322.733 li
118.066 319.186 li
122.836 321.741 li
cp
f
123.364 322.733 mo
123.691 323.807 li
118.066 319.186 li
123.364 322.733 li
cp
f
123.691 323.807 mo
123.806 324.926 li
118.066 319.186 li
123.691 323.807 li
cp
f
123.806 324.926 mo
123.691 326.045 li
118.066 319.186 li
123.806 324.926 li
cp
f
123.691 326.045 mo
123.364 327.12 li
118.066 319.186 li
123.691 326.045 li
cp
f
123.364 327.12 mo
122.836 328.112 li
118.066 319.186 li
123.364 327.12 li
cp
f
122.836 328.112 mo
122.125 328.985 li
118.066 319.186 li
122.836 328.112 li
cp
f
122.125 328.985 mo
121.252 329.696 li
118.066 319.186 li
122.125 328.985 li
cp
f
121.252 329.696 mo
120.259 330.225 li
118.066 319.186 li
121.252 329.696 li
cp
f
120.259 330.225 mo
119.185 330.553 li
118.066 319.186 li
120.259 330.225 li
cp
f
119.185 330.553 mo
118.066 330.667 li
118.066 319.186 li
119.185 330.553 li
cp
f
118.066 330.667 mo
116.946 330.553 li
118.066 319.186 li
118.066 330.667 li
cp
f
116.946 330.553 mo
115.873 330.225 li
118.066 319.186 li
116.946 330.553 li
cp
f
115.873 330.225 mo
114.879 329.696 li
118.066 319.186 li
115.873 330.225 li
cp
f
114.879 329.696 mo
114.007 328.985 li
118.066 319.186 li
114.879 329.696 li
cp
f
114.007 328.985 mo
113.295 328.112 li
118.066 319.186 li
114.007 328.985 li
cp
f
113.295 328.112 mo
112.767 327.12 li
118.066 319.186 li
113.295 328.112 li
cp
f
112.767 327.12 mo
112.44 326.045 li
118.066 319.186 li
112.767 327.12 li
cp
f
112.44 326.045 mo
112.325 324.926 li
118.066 319.186 li
112.44 326.045 li
cp
f
112.325 324.926 mo
112.44 323.807 li
118.066 319.186 li
112.325 324.926 li
cp
f
112.44 323.807 mo
112.767 322.733 li
118.066 319.186 li
112.44 323.807 li
cp
f
112.767 322.733 mo
113.295 321.741 li
118.066 319.186 li
112.767 322.733 li
cp
f
113.295 321.741 mo
114.007 320.868 li
118.066 319.186 li
113.295 321.741 li
cp
f
114.007 320.868 mo
114.879 320.157 li
118.066 319.186 li
114.007 320.868 li
cp
f
114.879 320.157 mo
115.873 319.627 li
118.066 319.186 li
114.879 320.157 li
cp
f
115.873 319.627 mo
116.946 319.299 li
118.066 319.186 li
115.873 319.627 li
cp
f
116.946 319.299 mo
118.066 319.186 li
118.066 319.186 li
116.946 319.299 li
cp
f
118.066 319.186 mo
119.185 319.299 li
120.259 319.627 li
121.252 320.157 li
122.125 320.868 li
122.836 321.741 li
123.364 322.733 li
123.691 323.807 li
123.806 324.926 li
123.691 326.045 li
123.364 327.12 li
122.836 328.112 li
122.125 328.985 li
121.252 329.696 li
120.259 330.225 li
119.185 330.553 li
118.066 330.667 li
116.946 330.553 li
115.873 330.225 li
114.879 329.696 li
114.007 328.985 li
113.295 328.112 li
112.767 327.12 li
112.44 326.045 li
112.325 324.926 li
112.44 323.807 li
112.767 322.733 li
113.295 321.741 li
114.007 320.868 li
114.879 320.157 li
115.873 319.627 li
116.946 319.299 li
118.066 319.186 li
@
134.847 280.025 mo
135.92 280.351 li
133.727 279.91 li
134.847 280.025 li
cp
f
135.92 280.351 mo
136.913 280.88 li
133.727 279.91 li
135.92 280.351 li
cp
f
136.913 280.88 mo
137.786 281.591 li
133.727 279.91 li
136.913 280.88 li
cp
f
137.786 281.591 mo
138.498 282.464 li
133.727 279.91 li
137.786 281.591 li
cp
f
138.498 282.464 mo
139.025 283.457 li
133.727 279.91 li
138.498 282.464 li
cp
f
139.025 283.457 mo
139.353 284.531 li
133.727 279.91 li
139.025 283.457 li
cp
f
139.353 284.531 mo
139.468 285.65 li
133.727 279.91 li
139.353 284.531 li
cp
f
139.468 285.65 mo
139.353 286.769 li
133.727 279.91 li
139.468 285.65 li
cp
f
139.353 286.769 mo
139.025 287.843 li
133.727 279.91 li
139.353 286.769 li
cp
f
139.025 287.843 mo
138.498 288.835 li
133.727 279.91 li
139.025 287.843 li
cp
f
138.498 288.835 mo
137.786 289.708 li
133.727 279.91 li
138.498 288.835 li
cp
f
137.786 289.708 mo
136.913 290.421 li
133.727 279.91 li
137.786 289.708 li
cp
f
136.913 290.421 mo
135.92 290.948 li
133.727 279.91 li
136.913 290.421 li
cp
f
135.92 290.948 mo
134.847 291.276 li
133.727 279.91 li
135.92 290.948 li
cp
f
134.847 291.276 mo
133.727 291.391 li
133.727 279.91 li
134.847 291.276 li
cp
f
133.727 291.391 mo
132.608 291.276 li
133.727 279.91 li
133.727 291.391 li
cp
f
132.608 291.276 mo
131.534 290.948 li
133.727 279.91 li
132.608 291.276 li
cp
f
131.534 290.948 mo
130.541 290.421 li
133.727 279.91 li
131.534 290.948 li
cp
f
130.541 290.421 mo
129.668 289.708 li
133.727 279.91 li
130.541 290.421 li
cp
f
129.668 289.708 mo
128.957 288.835 li
133.727 279.91 li
129.668 289.708 li
cp
f
128.957 288.835 mo
128.429 287.843 li
133.727 279.91 li
128.957 288.835 li
cp
f
128.429 287.843 mo
128.101 286.769 li
133.727 279.91 li
128.429 287.843 li
cp
f
128.101 286.769 mo
127.986 285.65 li
133.727 279.91 li
128.101 286.769 li
cp
f
127.986 285.65 mo
128.101 284.531 li
133.727 279.91 li
127.986 285.65 li
cp
f
128.101 284.531 mo
128.429 283.457 li
133.727 279.91 li
128.101 284.531 li
cp
f
128.429 283.457 mo
128.957 282.464 li
133.727 279.91 li
128.429 283.457 li
cp
f
128.957 282.464 mo
129.668 281.591 li
133.727 279.91 li
128.957 282.464 li
cp
f
129.668 281.591 mo
130.541 280.88 li
133.727 279.91 li
129.668 281.591 li
cp
f
130.541 280.88 mo
131.534 280.351 li
133.727 279.91 li
130.541 280.88 li
cp
f
131.534 280.351 mo
132.608 280.025 li
133.727 279.91 li
131.534 280.351 li
cp
f
132.608 280.025 mo
133.727 279.91 li
133.727 279.91 li
132.608 280.025 li
cp
f
133.727 279.91 mo
134.847 280.025 li
135.92 280.351 li
136.913 280.88 li
137.786 281.591 li
138.498 282.464 li
139.025 283.457 li
139.353 284.531 li
139.468 285.65 li
139.353 286.769 li
139.025 287.843 li
138.498 288.835 li
137.786 289.708 li
136.913 290.421 li
135.92 290.948 li
134.847 291.276 li
133.727 291.391 li
132.608 291.276 li
131.534 290.948 li
130.541 290.421 li
129.668 289.708 li
128.957 288.835 li
128.429 287.843 li
128.101 286.769 li
127.986 285.65 li
128.101 284.531 li
128.429 283.457 li
128.957 282.464 li
129.668 281.591 li
130.541 280.88 li
131.534 280.351 li
132.608 280.025 li
133.727 279.91 li
@
117.407 303.375 mo
118.481 303.702 li
116.288 303.261 li
117.407 303.375 li
cp
f
118.481 303.702 mo
119.474 304.231 li
116.288 303.261 li
118.481 303.702 li
cp
f
119.474 304.231 mo
120.347 304.943 li
116.288 303.261 li
119.474 304.231 li
cp
f
120.347 304.943 mo
121.058 305.815 li
116.288 303.261 li
120.347 304.943 li
cp
f
121.058 305.815 mo
121.586 306.808 li
116.288 303.261 li
121.058 305.815 li
cp
f
121.586 306.808 mo
121.914 307.882 li
116.288 303.261 li
121.586 306.808 li
cp
f
121.914 307.882 mo
122.029 309.001 li
116.288 303.261 li
121.914 307.882 li
cp
f
122.029 309.001 mo
121.914 310.12 li
116.288 303.261 li
122.029 309.001 li
cp
f
121.914 310.12 mo
121.586 311.194 li
116.288 303.261 li
121.914 310.12 li
cp
f
121.586 311.194 mo
121.058 312.187 li
116.288 303.261 li
121.586 311.194 li
cp
f
121.058 312.187 mo
120.347 313.059 li
116.288 303.261 li
121.058 312.187 li
cp
f
120.347 313.059 mo
119.474 313.77 li
116.288 303.261 li
120.347 313.059 li
cp
f
119.474 313.77 mo
118.481 314.299 li
116.288 303.261 li
119.474 313.77 li
cp
f
118.481 314.299 mo
117.407 314.627 li
116.288 303.261 li
118.481 314.299 li
cp
f
117.407 314.627 mo
116.288 314.741 li
116.288 303.261 li
117.407 314.627 li
cp
f
116.288 314.741 mo
115.168 314.627 li
116.288 303.261 li
116.288 314.741 li
cp
f
115.168 314.627 mo
114.095 314.299 li
116.288 303.261 li
115.168 314.627 li
cp
f
114.095 314.299 mo
113.102 313.77 li
116.288 303.261 li
114.095 314.299 li
cp
f
113.102 313.77 mo
112.229 313.059 li
116.288 303.261 li
113.102 313.77 li
cp
f
112.229 313.059 mo
111.518 312.187 li
116.288 303.261 li
112.229 313.059 li
cp
f
111.518 312.187 mo
110.989 311.194 li
116.288 303.261 li
111.518 312.187 li
cp
f
110.989 311.194 mo
110.662 310.12 li
116.288 303.261 li
110.989 311.194 li
cp
f
110.662 310.12 mo
110.547 309.001 li
116.288 303.261 li
110.662 310.12 li
cp
f
110.547 309.001 mo
110.662 307.882 li
116.288 303.261 li
110.547 309.001 li
cp
f
110.662 307.882 mo
110.989 306.808 li
116.288 303.261 li
110.662 307.882 li
cp
f
110.989 306.808 mo
111.518 305.815 li
116.288 303.261 li
110.989 306.808 li
cp
f
111.518 305.815 mo
112.229 304.943 li
116.288 303.261 li
111.518 305.815 li
cp
f
112.229 304.943 mo
113.102 304.231 li
116.288 303.261 li
112.229 304.943 li
cp
f
113.102 304.231 mo
114.095 303.702 li
116.288 303.261 li
113.102 304.231 li
cp
f
114.095 303.702 mo
115.168 303.375 li
116.288 303.261 li
114.095 303.702 li
cp
f
115.168 303.375 mo
116.288 303.261 li
116.288 303.261 li
115.168 303.375 li
cp
f
116.288 303.261 mo
117.407 303.375 li
118.481 303.702 li
119.474 304.231 li
120.347 304.943 li
121.058 305.815 li
121.586 306.808 li
121.914 307.882 li
122.029 309.001 li
121.914 310.12 li
121.586 311.194 li
121.058 312.187 li
120.347 313.059 li
119.474 313.77 li
118.481 314.299 li
117.407 314.627 li
116.288 314.741 li
115.168 314.627 li
114.095 314.299 li
113.102 313.77 li
112.229 313.059 li
111.518 312.187 li
110.989 311.194 li
110.662 310.12 li
110.547 309.001 li
110.662 307.882 li
110.989 306.808 li
111.518 305.815 li
112.229 304.943 li
113.102 304.231 li
114.095 303.702 li
115.168 303.375 li
116.288 303.261 li
@
143.524 349.752 mo
144.598 350.081 li
142.405 349.637 li
143.524 349.752 li
cp
f
144.598 350.081 mo
145.59 350.608 li
142.405 349.637 li
144.598 350.081 li
cp
f
145.59 350.608 mo
146.463 351.321 li
142.405 349.637 li
145.59 350.608 li
cp
f
146.463 351.321 mo
147.176 352.194 li
142.405 349.637 li
146.463 351.321 li
cp
f
147.176 352.194 mo
147.703 353.186 li
142.405 349.637 li
147.176 352.194 li
cp
f
147.703 353.186 mo
148.031 354.258 li
142.405 349.637 li
147.703 353.186 li
cp
f
148.031 354.258 mo
148.146 355.379 li
142.405 349.637 li
148.031 354.258 li
cp
f
148.146 355.379 mo
148.031 356.499 li
142.405 349.637 li
148.146 355.379 li
cp
f
148.031 356.499 mo
147.703 357.573 li
142.405 349.637 li
148.031 356.499 li
cp
f
147.703 357.573 mo
147.176 358.565 li
142.405 349.637 li
147.703 357.573 li
cp
f
147.176 358.565 mo
146.463 359.438 li
142.405 349.637 li
147.176 358.565 li
cp
f
146.463 359.438 mo
145.59 360.149 li
142.405 349.637 li
146.463 359.438 li
cp
f
145.59 360.149 mo
144.598 360.678 li
142.405 349.637 li
145.59 360.149 li
cp
f
144.598 360.678 mo
143.524 361.004 li
142.405 349.637 li
144.598 360.678 li
cp
f
143.524 361.004 mo
142.405 361.12 li
142.405 349.637 li
143.524 361.004 li
cp
f
142.405 361.12 mo
141.286 361.004 li
142.405 349.637 li
142.405 361.12 li
cp
f
141.286 361.004 mo
140.212 360.678 li
142.405 349.637 li
141.286 361.004 li
cp
f
140.212 360.678 mo
139.219 360.149 li
142.405 349.637 li
140.212 360.678 li
cp
f
139.219 360.149 mo
138.347 359.438 li
142.405 349.637 li
139.219 360.149 li
cp
f
138.347 359.438 mo
137.634 358.565 li
142.405 349.637 li
138.347 359.438 li
cp
f
137.634 358.565 mo
137.106 357.573 li
142.405 349.637 li
137.634 358.565 li
cp
f
137.106 357.573 mo
136.779 356.499 li
142.405 349.637 li
137.106 357.573 li
cp
f
136.779 356.499 mo
136.665 355.379 li
142.405 349.637 li
136.779 356.499 li
cp
f
136.665 355.379 mo
136.779 354.258 li
142.405 349.637 li
136.665 355.379 li
cp
f
136.779 354.258 mo
137.106 353.186 li
142.405 349.637 li
136.779 354.258 li
cp
f
137.106 353.186 mo
137.634 352.194 li
142.405 349.637 li
137.106 353.186 li
cp
f
137.634 352.194 mo
138.347 351.321 li
142.405 349.637 li
137.634 352.194 li
cp
f
138.347 351.321 mo
139.219 350.608 li
142.405 349.637 li
138.347 351.321 li
cp
f
139.219 350.608 mo
140.212 350.081 li
142.405 349.637 li
139.219 350.608 li
cp
f
140.212 350.081 mo
141.286 349.752 li
142.405 349.637 li
140.212 350.081 li
cp
f
141.286 349.752 mo
142.405 349.637 li
142.405 349.637 li
141.286 349.752 li
cp
f
142.405 349.637 mo
143.524 349.752 li
144.598 350.081 li
145.59 350.608 li
146.463 351.321 li
147.176 352.194 li
147.703 353.186 li
148.031 354.258 li
148.146 355.379 li
148.031 356.499 li
147.703 357.573 li
147.176 358.565 li
146.463 359.438 li
145.59 360.149 li
144.598 360.678 li
143.524 361.004 li
142.405 361.12 li
141.286 361.004 li
140.212 360.678 li
139.219 360.149 li
138.347 359.438 li
137.634 358.565 li
137.106 357.573 li
136.779 356.499 li
136.665 355.379 li
136.779 354.258 li
137.106 353.186 li
137.634 352.194 li
138.347 351.321 li
139.219 350.608 li
140.212 350.081 li
141.286 349.752 li
142.405 349.637 li
@
160.477 342.42 mo
161.55 342.749 li
159.357 342.307 li
160.477 342.42 li
cp
f
161.55 342.749 mo
162.543 343.276 li
159.357 342.307 li
161.55 342.749 li
cp
f
162.543 343.276 mo
163.416 343.989 li
159.357 342.307 li
162.543 343.276 li
cp
f
163.416 343.989 mo
164.129 344.862 li
159.357 342.307 li
163.416 343.989 li
cp
f
164.129 344.862 mo
164.656 345.854 li
159.357 342.307 li
164.129 344.862 li
cp
f
164.656 345.854 mo
164.984 346.928 li
159.357 342.307 li
164.656 345.854 li
cp
f
164.984 346.928 mo
165.099 348.047 li
159.357 342.307 li
164.984 346.928 li
cp
f
165.099 348.047 mo
164.984 349.167 li
159.357 342.307 li
165.099 348.047 li
cp
f
164.984 349.167 mo
164.656 350.241 li
159.357 342.307 li
164.984 349.167 li
cp
f
164.656 350.241 mo
164.129 351.233 li
159.357 342.307 li
164.656 350.241 li
cp
f
164.129 351.233 mo
163.416 352.106 li
159.357 342.307 li
164.129 351.233 li
cp
f
163.416 352.106 mo
162.543 352.817 li
159.357 342.307 li
163.416 352.106 li
cp
f
162.543 352.817 mo
161.55 353.346 li
159.357 342.307 li
162.543 352.817 li
cp
f
161.55 353.346 mo
160.477 353.672 li
159.357 342.307 li
161.55 353.346 li
cp
f
160.477 353.672 mo
159.357 353.788 li
159.357 342.307 li
160.477 353.672 li
cp
f
159.357 353.788 mo
158.239 353.672 li
159.357 342.307 li
159.357 353.788 li
cp
f
158.239 353.672 mo
157.165 353.346 li
159.357 342.307 li
158.239 353.672 li
cp
f
157.165 353.346 mo
156.172 352.817 li
159.357 342.307 li
157.165 353.346 li
cp
f
156.172 352.817 mo
155.299 352.106 li
159.357 342.307 li
156.172 352.817 li
cp
f
155.299 352.106 mo
154.588 351.233 li
159.357 342.307 li
155.299 352.106 li
cp
f
154.588 351.233 mo
154.059 350.241 li
159.357 342.307 li
154.588 351.233 li
cp
f
154.059 350.241 mo
153.732 349.167 li
159.357 342.307 li
154.059 350.241 li
cp
f
153.732 349.167 mo
153.618 348.047 li
159.357 342.307 li
153.732 349.167 li
cp
f
153.618 348.047 mo
153.732 346.928 li
159.357 342.307 li
153.618 348.047 li
cp
f
153.732 346.928 mo
154.059 345.854 li
159.357 342.307 li
153.732 346.928 li
cp
f
154.059 345.854 mo
154.588 344.862 li
159.357 342.307 li
154.059 345.854 li
cp
f
154.588 344.862 mo
155.299 343.989 li
159.357 342.307 li
154.588 344.862 li
cp
f
155.299 343.989 mo
156.172 343.276 li
159.357 342.307 li
155.299 343.989 li
cp
f
156.172 343.276 mo
157.165 342.749 li
159.357 342.307 li
156.172 343.276 li
cp
f
157.165 342.749 mo
158.239 342.42 li
159.357 342.307 li
157.165 342.749 li
cp
f
158.239 342.42 mo
159.357 342.307 li
159.357 342.307 li
158.239 342.42 li
cp
f
159.357 342.307 mo
160.477 342.42 li
161.55 342.749 li
162.543 343.276 li
163.416 343.989 li
164.129 344.862 li
164.656 345.854 li
164.984 346.928 li
165.099 348.047 li
164.984 349.167 li
164.656 350.241 li
164.129 351.233 li
163.416 352.106 li
162.543 352.817 li
161.55 353.346 li
160.477 353.672 li
159.357 353.788 li
158.239 353.672 li
157.165 353.346 li
156.172 352.817 li
155.299 352.106 li
154.588 351.233 li
154.059 350.241 li
153.732 349.167 li
153.618 348.047 li
153.732 346.928 li
154.059 345.854 li
154.588 344.862 li
155.299 343.989 li
156.172 343.276 li
157.165 342.749 li
158.239 342.42 li
159.357 342.307 li
@
169.814 352.926 mo
170.889 353.252 li
168.695 352.811 li
169.814 352.926 li
cp
f
170.889 353.252 mo
171.881 353.782 li
168.695 352.811 li
170.889 353.252 li
cp
f
171.881 353.782 mo
172.754 354.493 li
168.695 352.811 li
171.881 353.782 li
cp
f
172.754 354.493 mo
173.465 355.366 li
168.695 352.811 li
172.754 354.493 li
cp
f
173.465 355.366 mo
173.994 356.358 li
168.695 352.811 li
173.465 355.366 li
cp
f
173.994 356.358 mo
174.32 357.432 li
168.695 352.811 li
173.994 356.358 li
cp
f
174.32 357.432 mo
174.436 358.551 li
168.695 352.811 li
174.32 357.432 li
cp
f
174.436 358.551 mo
174.32 359.67 li
168.695 352.811 li
174.436 358.551 li
cp
f
174.32 359.67 mo
173.994 360.745 li
168.695 352.811 li
174.32 359.67 li
cp
f
173.994 360.745 mo
173.465 361.737 li
168.695 352.811 li
173.994 360.745 li
cp
f
173.465 361.737 mo
172.754 362.61 li
168.695 352.811 li
173.465 361.737 li
cp
f
172.754 362.61 mo
171.881 363.323 li
168.695 352.811 li
172.754 362.61 li
cp
f
171.881 363.323 mo
170.889 363.85 li
168.695 352.811 li
171.881 363.323 li
cp
f
170.889 363.85 mo
169.814 364.178 li
168.695 352.811 li
170.889 363.85 li
cp
f
169.814 364.178 mo
168.695 364.292 li
168.695 352.811 li
169.814 364.178 li
cp
f
168.695 364.292 mo
167.575 364.178 li
168.695 352.811 li
168.695 364.292 li
cp
f
167.575 364.178 mo
166.502 363.85 li
168.695 352.811 li
167.575 364.178 li
cp
f
166.502 363.85 mo
165.51 363.323 li
168.695 352.811 li
166.502 363.85 li
cp
f
165.51 363.323 mo
164.637 362.61 li
168.695 352.811 li
165.51 363.323 li
cp
f
164.637 362.61 mo
163.924 361.737 li
168.695 352.811 li
164.637 362.61 li
cp
f
163.924 361.737 mo
163.396 360.745 li
168.695 352.811 li
163.924 361.737 li
cp
f
163.396 360.745 mo
163.069 359.67 li
168.695 352.811 li
163.396 360.745 li
cp
f
163.069 359.67 mo
162.954 358.551 li
168.695 352.811 li
163.069 359.67 li
cp
f
162.954 358.551 mo
163.069 357.432 li
168.695 352.811 li
162.954 358.551 li
cp
f
163.069 357.432 mo
163.396 356.358 li
168.695 352.811 li
163.069 357.432 li
cp
f
163.396 356.358 mo
163.924 355.366 li
168.695 352.811 li
163.396 356.358 li
cp
f
163.924 355.366 mo
164.637 354.493 li
168.695 352.811 li
163.924 355.366 li
cp
f
164.637 354.493 mo
165.51 353.782 li
168.695 352.811 li
164.637 354.493 li
cp
f
165.51 353.782 mo
166.502 353.252 li
168.695 352.811 li
165.51 353.782 li
cp
f
166.502 353.252 mo
167.575 352.926 li
168.695 352.811 li
166.502 353.252 li
cp
f
167.575 352.926 mo
168.695 352.811 li
168.695 352.811 li
167.575 352.926 li
cp
f
168.695 352.811 mo
169.814 352.926 li
170.889 353.252 li
171.881 353.782 li
172.754 354.493 li
173.465 355.366 li
173.994 356.358 li
174.32 357.432 li
174.436 358.551 li
174.32 359.67 li
173.994 360.745 li
173.465 361.737 li
172.754 362.61 li
171.881 363.323 li
170.889 363.85 li
169.814 364.178 li
168.695 364.292 li
167.575 364.178 li
166.502 363.85 li
165.51 363.323 li
164.637 362.61 li
163.924 361.737 li
163.396 360.745 li
163.069 359.67 li
162.954 358.551 li
163.069 357.432 li
163.396 356.358 li
163.924 355.366 li
164.637 354.493 li
165.51 353.782 li
166.502 353.252 li
167.575 352.926 li
168.695 352.811 li
@
3.00001 lw
744.194 571.502 mo
744.194 560.872 li
731.623 571.502 mo
731.623 566.186 li
719.051 571.502 mo
719.051 566.186 li
706.481 571.502 mo
706.481 566.186 li
693.91 571.502 mo
693.91 566.186 li
681.337 571.502 mo
681.337 566.186 li
668.766 571.502 mo
668.766 566.186 li
656.196 571.502 mo
656.196 566.186 li
643.625 571.502 mo
643.625 566.186 li
631.052 571.502 mo
631.052 566.186 li
618.483 571.502 mo
618.483 560.872 li
605.911 571.502 mo
605.911 566.186 li
593.339 571.502 mo
593.339 566.186 li
580.767 571.502 mo
580.767 566.186 li
568.198 571.502 mo
568.198 566.186 li
555.625 571.502 mo
555.625 566.186 li
543.054 571.502 mo
543.054 566.186 li
530.483 571.502 mo
530.483 566.186 li
517.913 571.502 mo
517.913 566.186 li
505.341 571.502 mo
505.341 566.186 li
492.769 571.502 mo
492.769 560.872 li
480.198 571.502 mo
480.198 566.186 li
467.627 571.502 mo
467.627 566.186 li
455.056 571.502 mo
455.056 566.186 li
442.484 571.502 mo
442.484 566.186 li
429.915 571.502 mo
429.915 566.186 li
417.342 571.502 mo
417.342 566.186 li
404.771 571.502 mo
404.771 566.186 li
392.199 571.502 mo
392.199 566.186 li
379.629 571.502 mo
379.629 566.186 li
367.058 571.502 mo
367.058 560.872 li
354.486 571.502 mo
354.486 566.186 li
341.914 571.502 mo
341.914 566.186 li
329.344 571.502 mo
329.344 566.186 li
316.772 571.502 mo
316.772 566.186 li
304.201 571.502 mo
304.201 566.186 li
291.629 571.502 mo
291.629 566.186 li
279.059 571.502 mo
279.059 566.186 li
266.487 571.502 mo
266.487 566.186 li
253.916 571.502 mo
253.916 566.186 li
241.344 571.502 mo
241.344 560.872 li
228.774 571.502 mo
228.774 566.186 li
216.203 571.502 mo
216.203 566.186 li
203.631 571.502 mo
203.631 566.186 li
191.061 571.502 mo
191.061 566.186 li
178.489 571.502 mo
178.489 566.186 li
165.917 571.502 mo
165.917 566.186 li
153.346 571.502 mo
153.346 566.186 li
140.775 571.502 mo
140.775 566.186 li
128.204 571.502 mo
128.204 566.186 li
115.633 571.502 mo
115.633 560.872 li
115.633 571.502 mo
744.194 571.502 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 50 /two putdup 51 /three putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /.notdef /five 22{/.notdef}rp /L 22{/.notdef}rp /c 9{/.notdef}rp /m /n 145{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf106.15 605.62 mo(0123)[125.718 125.718 125.719 0 ]xsh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five 22{/.notdef}rp /L 22{/.notdef}rp /c 9{/.notdef}rp /m /n 145{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [34.584 0 0 -34.5275 0 0 ]msf608.994 604.924 mo(45)[125.719 0 ]xsh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSG+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/gamma <1C60D8A8C9B7008A5DF677478A06F0F44C8CC4394737FD963F4C6DD75686507A2E460DE9255EC34689EFE34189E2789611FF27E7C8E07E4FD3C32A3EFC84F55D1E4F1BA8A36C8016D86B082EDD8D38D6A1376772E5C5224B03567F48A31FF22B9E2F3E12F4CA7A9D4EEAF9E23E38D22E8FE67B4B3E2067FF48DD4799BF3D67E197E026FAF8035B60277CC6C81F8AC84DAB478C43C1B968887552093D4A6C669D2E700E5F411513014826F7B9A524B905714CC6D39A47A6> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSG+Symbol /Encoding getdup 103 /gamma putpop%ADOEndSubsetFont
/IDULSG+Symbol*1 [103{/.notdef}rp /gamma 121{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [34.584 0 0 -34.5275 0 0 ]msf382.15 632.206 mo(\341g)[13.3525 0 ]xsh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 115 /s putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five 22{/.notdef}rp /L 22{/.notdef}rp /c 9{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [21.4075 0 0 -21.3725 0 0 ]msf413.876 640.456 mo(s)sh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSG+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/tau <1C60D8A8C9B76427D01852E70A802F53B3332ED85B4602CB20E1C6FED338814DB7751C7927CD18A1BD79AB419809A2D6B3E35B03FEB9D8110F08F384A782DA2CFCFAA8B8132D5D0B0F4FA555B564AF418641C2B838C1661FDE86D0AB01CCFD77FA3E63E826A62A552A5BBE227D526A7CE93FFE3164ADD0309D3A10C154A1CEEF8B2F995D9ECAEAF4D9C7ADE502E507822BD4A89FC14DDD4D3D9E37D7B772D3D452BFC048BD19A84F8518CBD221DF582063AA924C5662446E2CE0EBE78DB43B122D2322F9BBC5B5879F79> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSG+Symbol /Encoding getdup 116 /tau putpop%ADOEndSubsetFont
/IDULSG+Symbol*1 [103{/.notdef}rp /gamma 12{/.notdef}rp /tau 108{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [34.584 0 0 -34.5275 0 0 ]msf424.501 632.206 mo(\361t)[13.3525 0 ]xsh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 97 /a putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five 22{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [21.4075 0 0 -21.3725 0 0 ]msf454.822 640.456 mo(ac)[11.9063 0 ]xsh115.633 256.501 mo
126.263 256.501 li
115.633 269.625 mo
120.948 269.625 li
115.633 282.752 mo
120.948 282.752 li
115.633 295.876 mo
120.948 295.876 li
115.633 309.001 mo
126.263 309.001 li
115.633 322.125 mo
120.948 322.125 li
115.633 335.25 mo
120.948 335.25 li
115.633 348.377 mo
120.948 348.377 li
115.633 361.502 mo
126.263 361.502 li
115.633 374.625 mo
120.948 374.625 li
115.633 387.75 mo
120.948 387.75 li
115.633 400.875 mo
120.948 400.875 li
115.633 414.002 mo
126.263 414.002 li
115.633 427.127 mo
120.948 427.127 li
115.633 440.25 mo
120.948 440.25 li
115.633 453.375 mo
120.948 453.375 li
115.633 466.5 mo
126.263 466.5 li
115.633 479.627 mo
120.948 479.627 li
115.633 492.752 mo
120.948 492.752 li
115.633 505.877 mo
120.948 505.877 li
115.633 519.002 mo
126.263 519.002 li
115.633 532.127 mo
120.948 532.127 li
115.633 545.252 mo
120.948 545.252 li
115.633 558.377 mo
120.948 558.377 li
115.633 571.502 mo
126.263 571.502 li
115.633 571.502 mo
115.633 256.501 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 22{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 582.135 mo(0.0)shIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 529.635 mo(0.2)shIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 477.135 mo(0.4)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 21{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 424.627 mo(0.6)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 19{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 372.143 mo(0.8)shIDULSF+Helvetica*1 [30.434 0 0 -30.3842 0 0 ]msf59.2358 319.627 mo(1.0)sh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSG+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Gamma <1C60D8A8C9B7C05416526DC8B21904CBAD839BF9ABF66C7908667C829472620BE6B1BA8296ACC449DCAA79655D4E0644688B0A9CE2C62FC848D982C4E53820F8FF1821F7746F7E01F94C6894253D7BFC9AFD233BB689917361916486E486E2AAE1DED24EC9D5B882637EE03C3B> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSG+Symbol /Encoding getdup 71 /Gamma putpop%ADOEndSubsetFont
/IDULSG+Symbol*1 [71{/.notdef}rp /Gamma 31{/.notdef}rp /gamma 12{/.notdef}rp /tau 108{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 506.456 mo(\341G)[-11.7598 0 ]ysh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B7EF322BA467487181334E955BE246DF5D0EF3A11E2BDC8B674F6546E88A741A6A22FD8101960B985F64CBBE95E02BBF21B77F9A8334BFBA9533492E7CA0F0DECFBF12D8467325B4174F987BBF353C73C5D70057F40D42361649961064C7B7F613D284310CB0B59908DA85F34298558C6B0DF453AED21873A379BC9BBE582E1040BDEC2230FBB52642> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 19{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n /.notdef /p 2{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -21.8528 -21.817 0 0 0 ]msf39.5483 473.784 mo(p)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 47 /slash putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /.notdef /eight 19{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n /.notdef /p 2{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 462.581 mo(/)shIDULSG+Symbol*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 453.432 mo(G)shIDULSF+Helvetica*1 [0 -21.8528 -21.817 0 0 0 ]msf39.5483 432.51 mo(p)shIDULSF+Helvetica*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 421.315 mo(\()shIDULSG+Symbol*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 411.088 mo(g)shIDULSF+Helvetica*1 [0 -21.8528 -21.817 0 0 0 ]msf39.5483 394.924 mo(s)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSF+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/equal <1C60D8A8C9B7F374C62B140C32819FDD54E0FF4342461D2A31EB8866A6299E899689> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSF+Helvetica /Encoding getdup 61 /equal putpop%ADOEndSubsetFont
/IDULSF+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /.notdef /eight 4{/.notdef}rp /equal 14{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c 9{/.notdef}rp /m /n /.notdef /p 2{/.notdef}rp /s 140{/.notdef}rp]IDULSF+Helvetica nfIDULSF+Helvetica*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 385.573 mo(=0\))[-20.6162 -19.6348 0 ]yshIDULSG+Symbol*1 [0 -35.3034 -35.2456 0 0 0 ]msf32.2749 333.284 mo(\361)sh733.563 256.501 mo
744.194 256.501 li
738.877 269.625 mo
744.194 269.625 li
738.877 282.752 mo
744.194 282.752 li
738.877 295.876 mo
744.194 295.876 li
733.563 309.001 mo
744.194 309.001 li
738.877 322.125 mo
744.194 322.125 li
738.877 335.25 mo
744.194 335.25 li
738.877 348.377 mo
744.194 348.377 li
733.563 361.502 mo
744.194 361.502 li
738.877 374.625 mo
744.194 374.625 li
738.877 387.75 mo
744.194 387.75 li
738.877 400.875 mo
744.194 400.875 li
733.563 414.002 mo
744.194 414.002 li
738.877 427.127 mo
744.194 427.127 li
738.877 440.25 mo
744.194 440.25 li
738.877 453.375 mo
744.194 453.375 li
733.563 466.5 mo
744.194 466.5 li
738.877 479.627 mo
744.194 479.627 li
738.877 492.752 mo
744.194 492.752 li
738.877 505.877 mo
744.194 505.877 li
733.563 519.002 mo
744.194 519.002 li
738.877 532.127 mo
744.194 532.127 li
738.877 545.252 mo
744.194 545.252 li
738.877 558.377 mo
744.194 558.377 li
733.563 571.502 mo
744.194 571.502 li
744.194 571.502 mo
744.194 256.501 li
744.194 267.132 mo
744.194 256.501 li
731.623 261.817 mo
731.623 256.501 li
719.051 261.817 mo
719.051 256.501 li
706.481 261.817 mo
706.481 256.501 li
693.91 261.817 mo
693.91 256.501 li
681.337 261.817 mo
681.337 256.501 li
668.766 261.817 mo
668.766 256.501 li
656.196 261.817 mo
656.196 256.501 li
643.625 261.817 mo
643.625 256.501 li
631.052 261.817 mo
631.052 256.501 li
618.483 267.132 mo
618.483 256.501 li
605.911 261.817 mo
605.911 256.501 li
593.339 261.817 mo
593.339 256.501 li
580.767 261.817 mo
580.767 256.501 li
568.198 261.817 mo
568.198 256.501 li
555.625 261.817 mo
555.625 256.501 li
543.054 261.817 mo
543.054 256.501 li
530.483 261.817 mo
530.483 256.501 li
517.913 261.817 mo
517.913 256.501 li
505.341 261.817 mo
505.341 256.501 li
492.769 267.132 mo
492.769 256.501 li
480.198 261.817 mo
480.198 256.501 li
467.627 261.817 mo
467.627 256.501 li
455.056 261.817 mo
455.056 256.501 li
442.484 261.817 mo
442.484 256.501 li
429.915 261.817 mo
429.915 256.501 li
417.342 261.817 mo
417.342 256.501 li
404.771 261.817 mo
404.771 256.501 li
392.199 261.817 mo
392.199 256.501 li
379.629 261.817 mo
379.629 256.501 li
367.058 267.132 mo
367.058 256.501 li
354.486 261.817 mo
354.486 256.501 li
341.914 261.817 mo
341.914 256.501 li
329.344 261.817 mo
329.344 256.501 li
316.772 261.817 mo
316.772 256.501 li
304.201 261.817 mo
304.201 256.501 li
291.629 261.817 mo
291.629 256.501 li
279.059 261.817 mo
279.059 256.501 li
266.487 261.817 mo
266.487 256.501 li
253.916 261.817 mo
253.916 256.501 li
241.344 267.132 mo
241.344 256.501 li
228.774 261.817 mo
228.774 256.501 li
216.203 261.817 mo
216.203 256.501 li
203.631 261.817 mo
203.631 256.501 li
191.061 261.817 mo
191.061 256.501 li
178.489 261.817 mo
178.489 256.501 li
165.917 261.817 mo
165.917 256.501 li
153.346 261.817 mo
153.346 256.501 li
140.775 261.817 mo
140.775 256.501 li
128.204 261.817 mo
128.204 256.501 li
115.633 267.132 mo
115.633 256.501 li
115.633 256.501 mo
744.194 256.501 li
@
1 lw
645.492 416.553 mo
646.239 416.629 li
646.955 416.848 li
647.617 417.2 li
648.199 417.674 li
648.673 418.256 li
649.025 418.918 li
649.242 419.635 li
649.319 420.381 li
649.242 421.125 li
649.025 421.842 li
648.673 422.504 li
648.199 423.086 li
647.617 423.561 li
646.955 423.913 li
646.239 424.131 li
645.492 424.208 li
644.746 424.131 li
644.03 423.913 li
643.368 423.561 li
642.786 423.086 li
642.311 422.504 li
641.959 421.842 li
641.743 421.125 li
641.666 420.381 li
641.743 419.635 li
641.959 418.918 li
642.311 418.256 li
642.786 417.674 li
643.368 417.2 li
644.03 416.848 li
644.746 416.629 li
645.492 416.553 li
660.183 422.2 mo
660.93 422.276 li
661.646 422.497 li
662.308 422.848 li
662.889 423.323 li
663.364 423.905 li
663.716 424.565 li
663.935 425.282 li
664.011 426.028 li
663.935 426.774 li
663.716 427.489 li
663.364 428.153 li
662.889 428.733 li
662.308 429.208 li
661.646 429.561 li
660.93 429.778 li
660.183 429.856 li
659.439 429.778 li
658.722 429.561 li
658.061 429.208 li
657.479 428.733 li
657.004 428.153 li
656.653 427.489 li
656.433 426.774 li
656.357 426.028 li
656.433 425.282 li
656.653 424.565 li
657.004 423.905 li
657.479 423.323 li
658.061 422.848 li
658.722 422.497 li
659.439 422.276 li
660.183 422.2 li
661.109 413.555 mo
661.854 413.633 li
662.57 413.85 li
663.232 414.204 li
663.813 414.676 li
664.289 415.258 li
664.641 415.922 li
664.859 416.635 li
664.935 417.383 li
664.859 418.129 li
664.641 418.844 li
664.289 419.506 li
663.813 420.088 li
663.232 420.563 li
662.57 420.915 li
661.854 421.133 li
661.109 421.209 li
660.363 421.133 li
659.646 420.915 li
658.985 420.563 li
658.403 420.088 li
657.928 419.506 li
657.577 418.844 li
657.357 418.129 li
657.281 417.383 li
657.357 416.635 li
657.577 415.922 li
657.928 415.258 li
658.403 414.676 li
658.985 414.204 li
659.646 413.85 li
660.363 413.633 li
661.109 413.555 li
660.989 417.895 mo
661.736 417.973 li
662.452 418.192 li
663.113 418.543 li
663.695 419.018 li
664.169 419.6 li
664.522 420.26 li
664.739 420.977 li
664.816 421.723 li
664.739 422.469 li
664.522 423.184 li
664.169 423.846 li
663.695 424.428 li
663.113 424.903 li
662.452 425.254 li
661.736 425.473 li
660.989 425.551 li
660.243 425.473 li
659.527 425.254 li
658.865 424.903 li
658.283 424.428 li
657.808 423.846 li
657.457 423.184 li
657.239 422.469 li
657.163 421.723 li
657.239 420.977 li
657.457 420.26 li
657.808 419.6 li
658.283 419.018 li
658.865 418.543 li
659.527 418.192 li
660.243 417.973 li
660.989 417.895 li
658.823 410.868 mo
659.57 410.944 li
660.284 411.163 li
660.946 411.514 li
661.528 411.989 li
662.002 412.571 li
662.354 413.233 li
662.573 413.95 li
662.65 414.696 li
662.573 415.442 li
662.354 416.157 li
662.002 416.819 li
661.528 417.401 li
660.946 417.875 li
660.284 418.227 li
659.57 418.446 li
658.823 418.522 li
658.077 418.446 li
657.361 418.227 li
656.699 417.875 li
656.117 417.401 li
655.642 416.819 li
655.291 416.157 li
655.072 415.442 li
654.995 414.696 li
655.072 413.95 li
655.291 413.233 li
655.642 412.571 li
656.117 411.989 li
656.699 411.514 li
657.361 411.163 li
658.077 410.944 li
658.823 410.868 li
648.867 399.971 mo
649.613 400.047 li
650.33 400.264 li
650.991 400.616 li
651.573 401.09 li
652.047 401.672 li
652.399 402.334 li
652.618 403.051 li
652.695 403.797 li
652.618 404.543 li
652.399 405.258 li
652.047 405.922 li
651.573 406.504 li
650.991 406.979 li
650.33 407.331 li
649.613 407.547 li
648.867 407.624 li
648.12 407.547 li
647.406 407.331 li
646.742 406.979 li
646.162 406.504 li
645.687 405.922 li
645.333 405.258 li
645.117 404.543 li
645.04 403.797 li
645.117 403.051 li
645.333 402.334 li
645.687 401.672 li
646.162 401.09 li
646.742 400.616 li
647.406 400.264 li
648.12 400.047 li
648.867 399.971 li
646.085 396.78 mo
646.832 396.858 li
647.548 397.077 li
648.209 397.428 li
648.792 397.903 li
649.266 398.485 li
649.618 399.145 li
649.835 399.862 li
649.912 400.608 li
649.835 401.354 li
649.618 402.069 li
649.266 402.731 li
648.792 403.313 li
648.209 403.788 li
647.548 404.139 li
646.832 404.358 li
646.085 404.436 li
645.338 404.358 li
644.623 404.139 li
643.96 403.788 li
643.379 403.313 li
642.904 402.731 li
642.552 402.069 li
642.335 401.354 li
642.258 400.608 li
642.335 399.862 li
642.552 399.145 li
642.904 398.485 li
643.379 397.903 li
643.96 397.428 li
644.623 397.077 li
645.338 396.858 li
646.085 396.78 li
641.465 395.686 mo
642.21 395.764 li
642.926 395.983 li
643.588 396.334 li
644.17 396.809 li
644.645 397.391 li
644.999 398.053 li
645.215 398.768 li
645.292 399.516 li
645.215 400.26 li
644.999 400.977 li
644.645 401.637 li
644.17 402.219 li
643.588 402.694 li
642.926 403.045 li
642.21 403.266 li
641.465 403.342 li
640.719 403.266 li
640.003 403.045 li
639.341 402.694 li
638.759 402.219 li
638.285 401.637 li
637.933 400.977 li
637.714 400.26 li
637.637 399.516 li
637.714 398.768 li
637.933 398.053 li
638.285 397.391 li
638.759 396.809 li
639.341 396.334 li
640.003 395.983 li
640.719 395.764 li
641.465 395.686 li
637.324 373.508 mo
638.069 373.586 li
638.785 373.803 li
639.447 374.155 li
640.029 374.629 li
640.503 375.211 li
640.855 375.874 li
641.074 376.588 li
641.151 377.334 li
641.074 378.083 li
640.855 378.797 li
640.503 379.459 li
640.029 380.042 li
639.447 380.516 li
638.785 380.868 li
638.069 381.084 li
637.324 381.163 li
636.578 381.084 li
635.862 380.868 li
635.2 380.516 li
634.618 380.042 li
634.143 379.459 li
633.792 378.797 li
633.573 378.083 li
633.496 377.334 li
633.573 376.588 li
633.792 375.874 li
634.143 375.211 li
634.618 374.629 li
635.2 374.155 li
635.862 373.803 li
636.578 373.586 li
637.324 373.508 li
634.926 371.995 mo
635.673 372.071 li
636.389 372.292 li
637.051 372.643 li
637.632 373.118 li
638.108 373.7 li
638.459 374.36 li
638.676 375.077 li
638.753 375.821 li
638.676 376.569 li
638.459 377.284 li
638.108 377.946 li
637.632 378.528 li
637.051 379.002 li
636.389 379.354 li
635.673 379.573 li
634.926 379.651 li
634.18 379.573 li
633.465 379.354 li
632.802 379.002 li
632.22 378.528 li
631.748 377.946 li
631.394 377.284 li
631.177 376.569 li
631.1 375.821 li
631.177 375.077 li
631.394 374.36 li
631.748 373.7 li
632.22 373.118 li
632.802 372.643 li
633.465 372.292 li
634.18 372.071 li
634.926 371.995 li
632.38 389.147 mo
633.126 389.223 li
633.843 389.442 li
634.504 389.793 li
635.086 390.268 li
635.561 390.85 li
635.913 391.512 li
636.132 392.227 li
636.208 392.975 li
636.132 393.719 li
635.913 394.436 li
635.561 395.096 li
635.086 395.678 li
634.504 396.153 li
633.843 396.504 li
633.126 396.725 li
632.38 396.801 li
631.634 396.725 li
630.919 396.504 li
630.257 396.153 li
629.675 395.678 li
629.201 395.096 li
628.848 394.436 li
628.63 393.719 li
628.553 392.975 li
628.63 392.227 li
628.848 391.512 li
629.201 390.85 li
629.675 390.268 li
630.257 389.793 li
630.919 389.442 li
631.634 389.223 li
632.38 389.147 li
630.876 384.014 mo
631.623 384.09 li
632.337 384.307 li
633 384.661 li
633.581 385.133 li
634.055 385.715 li
634.409 386.379 li
634.626 387.094 li
634.703 387.84 li
634.626 388.586 li
634.409 389.303 li
634.055 389.965 li
633.581 390.547 li
633 391.022 li
632.337 391.374 li
631.623 391.592 li
630.876 391.667 li
630.129 391.592 li
629.414 391.374 li
628.751 391.022 li
628.17 390.547 li
627.695 389.965 li
627.343 389.303 li
627.125 388.586 li
627.049 387.84 li
627.125 387.094 li
627.343 386.379 li
627.695 385.715 li
628.17 385.133 li
628.751 384.661 li
629.414 384.307 li
630.129 384.09 li
630.876 384.014 li
630.958 377.11 mo
631.705 377.186 li
632.42 377.405 li
633.082 377.758 li
633.664 378.231 li
634.138 378.813 li
634.49 379.475 li
634.708 380.19 li
634.785 380.936 li
634.708 381.684 li
634.49 382.399 li
634.138 383.061 li
633.664 383.643 li
633.082 384.118 li
632.42 384.469 li
631.705 384.688 li
630.958 384.764 li
630.211 384.688 li
629.496 384.469 li
628.833 384.118 li
628.251 383.643 li
627.777 383.061 li
627.425 382.399 li
627.208 381.684 li
627.131 380.936 li
627.208 380.19 li
627.425 379.475 li
627.777 378.813 li
628.251 378.231 li
628.833 377.758 li
629.496 377.405 li
630.211 377.186 li
630.958 377.11 li
624.31 361.952 mo
625.056 362.03 li
625.772 362.247 li
626.434 362.598 li
627.016 363.073 li
627.491 363.655 li
627.842 364.317 li
628.06 365.032 li
628.136 365.778 li
628.06 366.526 li
627.842 367.241 li
627.491 367.903 li
627.016 368.485 li
626.434 368.959 li
625.772 369.311 li
625.056 369.528 li
624.31 369.606 li
623.563 369.528 li
622.847 369.311 li
622.185 368.959 li
621.604 368.485 li
621.128 367.903 li
620.777 367.241 li
620.56 366.526 li
620.483 365.778 li
620.56 365.032 li
620.777 364.317 li
621.128 363.655 li
621.604 363.073 li
622.185 362.598 li
622.847 362.247 li
623.563 362.03 li
624.31 361.952 li
610.042 349.786 mo
610.789 349.862 li
611.504 350.079 li
612.167 350.432 li
612.749 350.907 li
613.223 351.487 li
613.575 352.151 li
613.793 352.866 li
613.871 353.612 li
613.793 354.358 li
613.575 355.075 li
613.223 355.735 li
612.749 356.317 li
612.167 356.792 li
611.504 357.145 li
610.789 357.364 li
610.042 357.44 li
609.295 357.364 li
608.582 357.145 li
607.917 356.792 li
607.337 356.317 li
606.863 355.735 li
606.509 355.075 li
606.292 354.358 li
606.215 353.612 li
606.292 352.866 li
606.509 352.151 li
606.863 351.487 li
607.337 350.907 li
607.917 350.432 li
608.582 350.079 li
609.295 349.862 li
610.042 349.786 li
594.57 341.09 mo
595.316 341.168 li
596.032 341.387 li
596.694 341.739 li
597.276 342.213 li
597.75 342.795 li
598.102 343.458 li
598.32 344.172 li
598.396 344.918 li
598.32 345.665 li
598.102 346.379 li
597.75 347.042 li
597.276 347.624 li
596.694 348.098 li
596.032 348.45 li
595.316 348.668 li
594.57 348.747 li
593.823 348.668 li
593.107 348.45 li
592.445 348.098 li
591.863 347.624 li
591.388 347.042 li
591.037 346.379 li
590.82 345.665 li
590.743 344.918 li
590.82 344.172 li
591.037 343.458 li
591.388 342.795 li
591.863 342.213 li
592.445 341.739 li
593.107 341.387 li
593.823 341.168 li
594.57 341.09 li
579.421 349.014 mo
580.167 349.09 li
580.883 349.309 li
581.545 349.663 li
582.127 350.135 li
582.602 350.717 li
582.954 351.379 li
583.172 352.094 li
583.248 352.84 li
583.172 353.588 li
582.954 354.303 li
582.602 354.965 li
582.127 355.547 li
581.545 356.022 li
580.883 356.374 li
580.167 356.592 li
579.421 356.668 li
578.674 356.592 li
577.96 356.374 li
577.296 356.022 li
576.715 355.547 li
576.242 354.965 li
575.888 354.303 li
575.671 353.588 li
575.594 352.84 li
575.671 352.094 li
575.888 351.379 li
576.242 350.717 li
576.715 350.135 li
577.296 349.663 li
577.96 349.309 li
578.674 349.09 li
579.421 349.014 li
557.139 347.661 mo
557.885 347.737 li
558.601 347.956 li
559.263 348.307 li
559.845 348.782 li
560.32 349.364 li
560.671 350.026 li
560.889 350.743 li
560.965 351.487 li
560.889 352.233 li
560.671 352.95 li
560.32 353.612 li
559.845 354.194 li
559.263 354.668 li
558.601 355.02 li
557.885 355.239 li
557.139 355.315 li
556.392 355.239 li
555.676 355.02 li
555.015 354.668 li
554.433 354.194 li
553.958 353.612 li
553.607 352.95 li
553.389 352.233 li
553.312 351.487 li
553.389 350.743 li
553.607 350.026 li
553.958 349.364 li
554.433 348.782 li
555.015 348.307 li
555.676 347.956 li
556.392 347.737 li
557.139 347.661 li
537.496 339.811 mo
538.243 339.887 li
538.957 340.104 li
539.621 340.456 li
540.202 340.932 li
540.675 341.512 li
541.029 342.174 li
541.246 342.891 li
541.323 343.637 li
541.246 344.383 li
541.029 345.1 li
540.675 345.762 li
540.202 346.344 li
539.621 346.819 li
538.957 347.17 li
538.243 347.387 li
537.496 347.463 li
536.75 347.387 li
536.034 347.17 li
535.372 346.819 li
534.79 346.344 li
534.315 345.762 li
533.963 345.1 li
533.745 344.383 li
533.669 343.637 li
533.745 342.891 li
533.963 342.174 li
534.315 341.512 li
534.79 340.932 li
535.372 340.456 li
536.034 340.104 li
536.75 339.887 li
537.496 339.811 li
526.799 328.51 mo
527.545 328.584 li
528.262 328.803 li
528.923 329.155 li
529.505 329.629 li
529.98 330.211 li
530.332 330.874 li
530.549 331.59 li
530.625 332.336 li
530.549 333.083 li
530.332 333.797 li
529.98 334.461 li
529.505 335.043 li
528.923 335.516 li
528.262 335.87 li
527.545 336.086 li
526.799 336.163 li
526.052 336.086 li
525.338 335.87 li
524.675 335.516 li
524.093 335.043 li
523.619 334.461 li
523.267 333.797 li
523.049 333.083 li
522.972 332.336 li
523.049 331.59 li
523.267 330.874 li
523.619 330.211 li
524.093 329.629 li
524.675 329.155 li
525.338 328.803 li
526.052 328.584 li
526.799 328.51 li
517.906 323.174 mo
518.652 323.25 li
519.368 323.469 li
520.03 323.821 li
520.612 324.295 li
521.086 324.877 li
521.438 325.538 li
521.657 326.254 li
521.734 327 li
521.657 327.747 li
521.438 328.463 li
521.086 329.125 li
520.612 329.708 li
520.03 330.182 li
519.368 330.534 li
518.652 330.75 li
517.906 330.827 li
517.159 330.75 li
516.445 330.534 li
515.783 330.182 li
515.201 329.708 li
514.726 329.125 li
514.373 328.463 li
514.156 327.747 li
514.079 327 li
514.156 326.254 li
514.373 325.538 li
514.726 324.877 li
515.201 324.295 li
515.783 323.821 li
516.445 323.469 li
517.159 323.25 li
517.906 323.174 li
501.817 326.899 mo
502.564 326.973 li
503.28 327.192 li
503.942 327.543 li
504.524 328.018 li
504.999 328.6 li
505.35 329.262 li
505.569 329.979 li
505.646 330.725 li
505.569 331.471 li
505.35 332.186 li
504.999 332.85 li
504.524 333.432 li
503.942 333.905 li
503.28 334.258 li
502.564 334.475 li
501.817 334.551 li
501.071 334.475 li
500.356 334.258 li
499.695 333.905 li
499.113 333.432 li
498.638 332.85 li
498.285 332.186 li
498.068 331.471 li
497.991 330.725 li
498.068 329.979 li
498.285 329.262 li
498.638 328.6 li
499.113 328.018 li
499.695 327.543 li
500.356 327.192 li
501.071 326.973 li
501.817 326.899 li
503.548 303.341 mo
504.294 303.417 li
505.011 303.635 li
505.672 303.988 li
506.254 304.461 li
506.729 305.043 li
507.081 305.707 li
507.3 306.421 li
507.375 307.167 li
507.3 307.914 li
507.081 308.63 li
506.729 309.292 li
506.254 309.874 li
505.672 310.349 li
505.011 310.7 li
504.294 310.919 li
503.548 310.996 li
502.802 310.919 li
502.087 310.7 li
501.424 310.349 li
500.842 309.874 li
500.369 309.292 li
500.016 308.63 li
499.798 307.914 li
499.722 307.167 li
499.798 306.421 li
500.016 305.707 li
500.369 305.043 li
500.842 304.461 li
501.424 303.988 li
502.087 303.635 li
502.802 303.417 li
503.548 303.341 li
516.019 291.48 mo
516.766 291.556 li
517.482 291.774 li
518.144 292.126 li
518.725 292.601 li
519.201 293.183 li
519.552 293.845 li
519.771 294.561 li
519.847 295.307 li
519.771 296.054 li
519.552 296.768 li
519.201 297.432 li
518.725 298.013 li
518.144 298.486 li
517.482 298.84 li
516.766 299.057 li
516.019 299.134 li
515.273 299.057 li
514.558 298.84 li
513.895 298.486 li
513.313 298.013 li
512.84 297.432 li
512.487 296.768 li
512.269 296.054 li
512.193 295.307 li
512.269 294.561 li
512.487 293.845 li
512.84 293.183 li
513.313 292.601 li
513.895 292.126 li
514.558 291.774 li
515.273 291.556 li
516.019 291.48 li
524.867 311.431 mo
525.612 311.506 li
526.328 311.725 li
526.99 312.076 li
527.571 312.551 li
528.046 313.133 li
528.399 313.794 li
528.617 314.511 li
528.693 315.257 li
528.617 316.004 li
528.399 316.717 li
528.046 317.381 li
527.571 317.963 li
526.99 318.436 li
526.328 318.79 li
525.612 319.006 li
524.867 319.084 li
524.121 319.006 li
523.404 318.79 li
522.743 318.436 li
522.161 317.963 li
521.686 317.381 li
521.334 316.717 li
521.115 316.004 li
521.039 315.257 li
521.115 314.511 li
521.334 313.794 li
521.686 313.133 li
522.161 312.551 li
522.743 312.076 li
523.404 311.725 li
524.121 311.506 li
524.867 311.431 li
528.634 330.641 mo
529.38 330.719 li
530.097 330.938 li
530.758 331.29 li
531.34 331.764 li
531.815 332.346 li
532.167 333.008 li
532.386 333.723 li
532.462 334.471 li
532.386 335.217 li
532.167 335.932 li
531.815 336.594 li
531.34 337.174 li
530.758 337.649 li
530.097 338.002 li
529.38 338.221 li
528.634 338.297 li
527.889 338.221 li
527.173 338.002 li
526.511 337.649 li
525.929 337.174 li
525.455 336.594 li
525.103 335.932 li
524.884 335.217 li
524.807 334.471 li
524.884 333.723 li
525.103 333.008 li
525.455 332.346 li
525.929 331.764 li
526.511 331.29 li
527.173 330.938 li
527.889 330.719 li
528.634 330.641 li
529.849 341.834 mo
530.595 341.911 li
531.312 342.127 li
531.973 342.481 li
532.555 342.956 li
533.03 343.536 li
533.381 344.198 li
533.599 344.915 li
533.675 345.661 li
533.599 346.407 li
533.381 347.124 li
533.03 347.786 li
532.555 348.368 li
531.973 348.842 li
531.312 349.194 li
530.595 349.411 li
529.849 349.487 li
529.103 349.411 li
528.386 349.194 li
527.725 348.842 li
527.143 348.368 li
526.668 347.786 li
526.317 347.124 li
526.099 346.407 li
526.022 345.661 li
526.099 344.915 li
526.317 344.198 li
526.668 343.536 li
527.143 342.956 li
527.725 342.481 li
528.386 342.127 li
529.103 341.911 li
529.849 341.834 li
535.033 334.428 mo
535.779 334.506 li
536.496 334.723 li
537.157 335.075 li
537.739 335.549 li
538.213 336.131 li
538.565 336.793 li
538.783 337.508 li
538.859 338.256 li
538.783 339.002 li
538.565 339.717 li
538.213 340.379 li
537.739 340.961 li
537.157 341.436 li
536.496 341.788 li
535.779 342.004 li
535.033 342.083 li
534.287 342.004 li
533.57 341.788 li
532.909 341.436 li
532.327 340.961 li
531.852 340.379 li
531.5 339.717 li
531.283 339.002 li
531.207 338.256 li
531.283 337.508 li
531.5 336.793 li
531.852 336.131 li
532.327 335.549 li
532.909 335.075 li
533.57 334.723 li
534.287 334.506 li
535.033 334.428 li
547.972 322.725 mo
548.718 322.801 li
549.435 323.02 li
550.096 323.372 li
550.678 323.846 li
551.153 324.428 li
551.504 325.09 li
551.723 325.807 li
551.798 326.553 li
551.723 327.297 li
551.504 328.014 li
551.153 328.676 li
550.678 329.258 li
550.096 329.733 li
549.435 330.084 li
548.718 330.303 li
547.972 330.379 li
547.225 330.303 li
546.511 330.084 li
545.847 329.733 li
545.267 329.258 li
544.792 328.676 li
544.439 328.014 li
544.222 327.297 li
544.145 326.553 li
544.222 325.807 li
544.439 325.09 li
544.792 324.428 li
545.267 323.846 li
545.847 323.372 li
546.511 323.02 li
547.225 322.801 li
547.972 322.725 li
547.775 346.61 mo
548.522 346.688 li
549.238 346.905 li
549.9 347.258 li
550.482 347.733 li
550.957 348.315 li
551.308 348.975 li
551.525 349.692 li
551.602 350.438 li
551.525 351.184 li
551.308 351.899 li
550.957 352.561 li
550.482 353.143 li
549.9 353.618 li
549.238 353.969 li
548.522 354.188 li
547.775 354.266 li
547.029 354.188 li
546.313 353.969 li
545.651 353.618 li
545.069 353.143 li
544.594 352.561 li
544.243 351.899 li
544.026 351.184 li
543.949 350.438 li
544.026 349.692 li
544.243 348.975 li
544.594 348.315 li
545.069 347.733 li
545.651 347.258 li
546.313 346.905 li
547.029 346.688 li
547.775 346.61 li
@
548.522 346.688 mo
549.238 346.905 li
547.775 346.61 li
548.522 346.688 li
cp
f
549.238 346.905 mo
549.9 347.258 li
547.775 346.61 li
549.238 346.905 li
cp
f
549.9 347.258 mo
550.482 347.733 li
547.775 346.61 li
549.9 347.258 li
cp
f
550.482 347.733 mo
550.957 348.315 li
547.775 346.61 li
550.482 347.733 li
cp
f
550.957 348.315 mo
551.308 348.975 li
547.775 346.61 li
550.957 348.315 li
cp
f
551.308 348.975 mo
551.525 349.692 li
547.775 346.61 li
551.308 348.975 li
cp
f
551.525 349.692 mo
551.602 350.438 li
547.775 346.61 li
551.525 349.692 li
cp
f
551.602 350.438 mo
551.525 351.184 li
547.775 346.61 li
551.602 350.438 li
cp
f
551.525 351.184 mo
551.308 351.899 li
547.775 346.61 li
551.525 351.184 li
cp
f
551.308 351.899 mo
550.957 352.561 li
547.775 346.61 li
551.308 351.899 li
cp
f
550.957 352.561 mo
550.482 353.143 li
547.775 346.61 li
550.957 352.561 li
cp
f
550.482 353.143 mo
549.9 353.618 li
547.775 346.61 li
550.482 353.143 li
cp
f
549.9 353.618 mo
549.238 353.969 li
547.775 346.61 li
549.9 353.618 li
cp
f
549.238 353.969 mo
548.522 354.188 li
547.775 346.61 li
549.238 353.969 li
cp
f
548.522 354.188 mo
547.775 354.266 li
547.775 346.61 li
548.522 354.188 li
cp
f
547.775 354.266 mo
547.029 354.188 li
547.775 346.61 li
547.775 354.266 li
cp
f
547.029 354.188 mo
546.313 353.969 li
547.775 346.61 li
547.029 354.188 li
cp
f
546.313 353.969 mo
545.651 353.618 li
547.775 346.61 li
546.313 353.969 li
cp
f
545.651 353.618 mo
545.069 353.143 li
547.775 346.61 li
545.651 353.618 li
cp
f
545.069 353.143 mo
544.594 352.561 li
547.775 346.61 li
545.069 353.143 li
cp
f
544.594 352.561 mo
544.243 351.899 li
547.775 346.61 li
544.594 352.561 li
cp
f
544.243 351.899 mo
544.026 351.184 li
547.775 346.61 li
544.243 351.899 li
cp
f
544.026 351.184 mo
543.949 350.438 li
547.775 346.61 li
544.026 351.184 li
cp
f
543.949 350.438 mo
544.026 349.692 li
547.775 346.61 li
543.949 350.438 li
cp
f
544.026 349.692 mo
544.243 348.975 li
547.775 346.61 li
544.026 349.692 li
cp
f
544.243 348.975 mo
544.594 348.315 li
547.775 346.61 li
544.243 348.975 li
cp
f
544.594 348.315 mo
545.069 347.733 li
547.775 346.61 li
544.594 348.315 li
cp
f
545.069 347.733 mo
545.651 347.258 li
547.775 346.61 li
545.069 347.733 li
cp
f
545.651 347.258 mo
546.313 346.905 li
547.775 346.61 li
545.651 347.258 li
cp
f
546.313 346.905 mo
547.029 346.688 li
547.775 346.61 li
546.313 346.905 li
cp
f
547.029 346.688 mo
547.775 346.61 li
547.775 346.61 li
547.029 346.688 li
cp
f
547.775 346.61 mo
548.522 346.688 li
549.238 346.905 li
549.9 347.258 li
550.482 347.733 li
550.957 348.315 li
551.308 348.975 li
551.525 349.692 li
551.602 350.438 li
551.525 351.184 li
551.308 351.899 li
550.957 352.561 li
550.482 353.143 li
549.9 353.618 li
549.238 353.969 li
548.522 354.188 li
547.775 354.266 li
547.029 354.188 li
546.313 353.969 li
545.651 353.618 li
545.069 353.143 li
544.594 352.561 li
544.243 351.899 li
544.026 351.184 li
543.949 350.438 li
544.026 349.692 li
544.243 348.975 li
544.594 348.315 li
545.069 347.733 li
545.651 347.258 li
546.313 346.905 li
547.029 346.688 li
547.775 346.61 li
@
548.718 322.801 mo
549.435 323.02 li
547.972 322.725 li
548.718 322.801 li
cp
f
549.435 323.02 mo
550.096 323.372 li
547.972 322.725 li
549.435 323.02 li
cp
f
550.096 323.372 mo
550.678 323.846 li
547.972 322.725 li
550.096 323.372 li
cp
f
550.678 323.846 mo
551.153 324.428 li
547.972 322.725 li
550.678 323.846 li
cp
f
551.153 324.428 mo
551.504 325.09 li
547.972 322.725 li
551.153 324.428 li
cp
f
551.504 325.09 mo
551.723 325.807 li
547.972 322.725 li
551.504 325.09 li
cp
f
551.723 325.807 mo
551.798 326.553 li
547.972 322.725 li
551.723 325.807 li
cp
f
551.798 326.553 mo
551.723 327.297 li
547.972 322.725 li
551.798 326.553 li
cp
f
551.723 327.297 mo
551.504 328.014 li
547.972 322.725 li
551.723 327.297 li
cp
f
551.504 328.014 mo
551.153 328.676 li
547.972 322.725 li
551.504 328.014 li
cp
f
551.153 328.676 mo
550.678 329.258 li
547.972 322.725 li
551.153 328.676 li
cp
f
550.678 329.258 mo
550.096 329.733 li
547.972 322.725 li
550.678 329.258 li
cp
f
550.096 329.733 mo
549.435 330.084 li
547.972 322.725 li
550.096 329.733 li
cp
f
549.435 330.084 mo
548.718 330.303 li
547.972 322.725 li
549.435 330.084 li
cp
f
548.718 330.303 mo
547.972 330.379 li
547.972 322.725 li
548.718 330.303 li
cp
f
547.972 330.379 mo
547.225 330.303 li
547.972 322.725 li
547.972 330.379 li
cp
f
547.225 330.303 mo
546.511 330.084 li
547.972 322.725 li
547.225 330.303 li
cp
f
546.511 330.084 mo
545.847 329.733 li
547.972 322.725 li
546.511 330.084 li
cp
f
545.847 329.733 mo
545.267 329.258 li
547.972 322.725 li
545.847 329.733 li
cp
f
545.267 329.258 mo
544.792 328.676 li
547.972 322.725 li
545.267 329.258 li
cp
f
544.792 328.676 mo
544.439 328.014 li
547.972 322.725 li
544.792 328.676 li
cp
f
544.439 328.014 mo
544.222 327.297 li
547.972 322.725 li
544.439 328.014 li
cp
f
544.222 327.297 mo
544.145 326.553 li
547.972 322.725 li
544.222 327.297 li
cp
f
544.145 326.553 mo
544.222 325.807 li
547.972 322.725 li
544.145 326.553 li
cp
f
544.222 325.807 mo
544.439 325.09 li
547.972 322.725 li
544.222 325.807 li
cp
f
544.439 325.09 mo
544.792 324.428 li
547.972 322.725 li
544.439 325.09 li
cp
f
544.792 324.428 mo
545.267 323.846 li
547.972 322.725 li
544.792 324.428 li
cp
f
545.267 323.846 mo
545.847 323.372 li
547.972 322.725 li
545.267 323.846 li
cp
f
545.847 323.372 mo
546.511 323.02 li
547.972 322.725 li
545.847 323.372 li
cp
f
546.511 323.02 mo
547.225 322.801 li
547.972 322.725 li
546.511 323.02 li
cp
f
547.225 322.801 mo
547.972 322.725 li
547.972 322.725 li
547.225 322.801 li
cp
f
547.972 322.725 mo
548.718 322.801 li
549.435 323.02 li
550.096 323.372 li
550.678 323.846 li
551.153 324.428 li
551.504 325.09 li
551.723 325.807 li
551.798 326.553 li
551.723 327.297 li
551.504 328.014 li
551.153 328.676 li
550.678 329.258 li
550.096 329.733 li
549.435 330.084 li
548.718 330.303 li
547.972 330.379 li
547.225 330.303 li
546.511 330.084 li
545.847 329.733 li
545.267 329.258 li
544.792 328.676 li
544.439 328.014 li
544.222 327.297 li
544.145 326.553 li
544.222 325.807 li
544.439 325.09 li
544.792 324.428 li
545.267 323.846 li
545.847 323.372 li
546.511 323.02 li
547.225 322.801 li
547.972 322.725 li
@
535.779 334.506 mo
536.496 334.723 li
535.033 334.428 li
535.779 334.506 li
cp
f
536.496 334.723 mo
537.157 335.075 li
535.033 334.428 li
536.496 334.723 li
cp
f
537.157 335.075 mo
537.739 335.549 li
535.033 334.428 li
537.157 335.075 li
cp
f
537.739 335.549 mo
538.213 336.131 li
535.033 334.428 li
537.739 335.549 li
cp
f
538.213 336.131 mo
538.565 336.793 li
535.033 334.428 li
538.213 336.131 li
cp
f
538.565 336.793 mo
538.783 337.508 li
535.033 334.428 li
538.565 336.793 li
cp
f
538.783 337.508 mo
538.859 338.256 li
535.033 334.428 li
538.783 337.508 li
cp
f
538.859 338.256 mo
538.783 339.002 li
535.033 334.428 li
538.859 338.256 li
cp
f
538.783 339.002 mo
538.565 339.717 li
535.033 334.428 li
538.783 339.002 li
cp
f
538.565 339.717 mo
538.213 340.379 li
535.033 334.428 li
538.565 339.717 li
cp
f
538.213 340.379 mo
537.739 340.961 li
535.033 334.428 li
538.213 340.379 li
cp
f
537.739 340.961 mo
537.157 341.436 li
535.033 334.428 li
537.739 340.961 li
cp
f
537.157 341.436 mo
536.496 341.788 li
535.033 334.428 li
537.157 341.436 li
cp
f
536.496 341.788 mo
535.779 342.004 li
535.033 334.428 li
536.496 341.788 li
cp
f
535.779 342.004 mo
535.033 342.083 li
535.033 334.428 li
535.779 342.004 li
cp
f
535.033 342.083 mo
534.287 342.004 li
535.033 334.428 li
535.033 342.083 li
cp
f
534.287 342.004 mo
533.57 341.788 li
535.033 334.428 li
534.287 342.004 li
cp
f
533.57 341.788 mo
532.909 341.436 li
535.033 334.428 li
533.57 341.788 li
cp
f
532.909 341.436 mo
532.327 340.961 li
535.033 334.428 li
532.909 341.436 li
cp
f
532.327 340.961 mo
531.852 340.379 li
535.033 334.428 li
532.327 340.961 li
cp
f
531.852 340.379 mo
531.5 339.717 li
535.033 334.428 li
531.852 340.379 li
cp
f
531.5 339.717 mo
531.283 339.002 li
535.033 334.428 li
531.5 339.717 li
cp
f
531.283 339.002 mo
531.207 338.256 li
535.033 334.428 li
531.283 339.002 li
cp
f
531.207 338.256 mo
531.283 337.508 li
535.033 334.428 li
531.207 338.256 li
cp
f
531.283 337.508 mo
531.5 336.793 li
535.033 334.428 li
531.283 337.508 li
cp
f
531.5 336.793 mo
531.852 336.131 li
535.033 334.428 li
531.5 336.793 li
cp
f
531.852 336.131 mo
532.327 335.549 li
535.033 334.428 li
531.852 336.131 li
cp
f
532.327 335.549 mo
532.909 335.075 li
535.033 334.428 li
532.327 335.549 li
cp
f
532.909 335.075 mo
533.57 334.723 li
535.033 334.428 li
532.909 335.075 li
cp
f
533.57 334.723 mo
534.287 334.506 li
535.033 334.428 li
533.57 334.723 li
cp
f
534.287 334.506 mo
535.033 334.428 li
535.033 334.428 li
534.287 334.506 li
cp
f
535.033 334.428 mo
535.779 334.506 li
536.496 334.723 li
537.157 335.075 li
537.739 335.549 li
538.213 336.131 li
538.565 336.793 li
538.783 337.508 li
538.859 338.256 li
538.783 339.002 li
538.565 339.717 li
538.213 340.379 li
537.739 340.961 li
537.157 341.436 li
536.496 341.788 li
535.779 342.004 li
535.033 342.083 li
534.287 342.004 li
533.57 341.788 li
532.909 341.436 li
532.327 340.961 li
531.852 340.379 li
531.5 339.717 li
531.283 339.002 li
531.207 338.256 li
531.283 337.508 li
531.5 336.793 li
531.852 336.131 li
532.327 335.549 li
532.909 335.075 li
533.57 334.723 li
534.287 334.506 li
535.033 334.428 li
@
530.595 341.911 mo
531.312 342.127 li
529.849 341.834 li
530.595 341.911 li
cp
f
531.312 342.127 mo
531.973 342.481 li
529.849 341.834 li
531.312 342.127 li
cp
f
531.973 342.481 mo
532.555 342.956 li
529.849 341.834 li
531.973 342.481 li
cp
f
532.555 342.956 mo
533.03 343.536 li
529.849 341.834 li
532.555 342.956 li
cp
f
533.03 343.536 mo
533.381 344.198 li
529.849 341.834 li
533.03 343.536 li
cp
f
533.381 344.198 mo
533.599 344.915 li
529.849 341.834 li
533.381 344.198 li
cp
f
533.599 344.915 mo
533.675 345.661 li
529.849 341.834 li
533.599 344.915 li
cp
f
533.675 345.661 mo
533.599 346.407 li
529.849 341.834 li
533.675 345.661 li
cp
f
533.599 346.407 mo
533.381 347.124 li
529.849 341.834 li
533.599 346.407 li
cp
f
533.381 347.124 mo
533.03 347.786 li
529.849 341.834 li
533.381 347.124 li
cp
f
533.03 347.786 mo
532.555 348.368 li
529.849 341.834 li
533.03 347.786 li
cp
f
532.555 348.368 mo
531.973 348.842 li
529.849 341.834 li
532.555 348.368 li
cp
f
531.973 348.842 mo
531.312 349.194 li
529.849 341.834 li
531.973 348.842 li
cp
f
531.312 349.194 mo
530.595 349.411 li
529.849 341.834 li
531.312 349.194 li
cp
f
530.595 349.411 mo
529.849 349.487 li
529.849 341.834 li
530.595 349.411 li
cp
f
529.849 349.487 mo
529.103 349.411 li
529.849 341.834 li
529.849 349.487 li
cp
f
529.103 349.411 mo
528.386 349.194 li
529.849 341.834 li
529.103 349.411 li
cp
f
528.386 349.194 mo
527.725 348.842 li
529.849 341.834 li
528.386 349.194 li
cp
f
527.725 348.842 mo
527.143 348.368 li
529.849 341.834 li
527.725 348.842 li
cp
f
527.143 348.368 mo
526.668 347.786 li
529.849 341.834 li
527.143 348.368 li
cp
f
526.668 347.786 mo
526.317 347.124 li
529.849 341.834 li
526.668 347.786 li
cp
f
526.317 347.124 mo
526.099 346.407 li
529.849 341.834 li
526.317 347.124 li
cp
f
526.099 346.407 mo
526.022 345.661 li
529.849 341.834 li
526.099 346.407 li
cp
f
526.022 345.661 mo
526.099 344.915 li
529.849 341.834 li
526.022 345.661 li
cp
f
526.099 344.915 mo
526.317 344.198 li
529.849 341.834 li
526.099 344.915 li
cp
f
526.317 344.198 mo
526.668 343.536 li
529.849 341.834 li
526.317 344.198 li
cp
f
526.668 343.536 mo
527.143 342.956 li
529.849 341.834 li
526.668 343.536 li
cp
f
527.143 342.956 mo
527.725 342.481 li
529.849 341.834 li
527.143 342.956 li
cp
f
527.725 342.481 mo
528.386 342.127 li
529.849 341.834 li
527.725 342.481 li
cp
f
528.386 342.127 mo
529.103 341.911 li
529.849 341.834 li
528.386 342.127 li
cp
f
529.103 341.911 mo
529.849 341.834 li
529.849 341.834 li
529.103 341.911 li
cp
f
529.849 341.834 mo
530.595 341.911 li
531.312 342.127 li
531.973 342.481 li
532.555 342.956 li
533.03 343.536 li
533.381 344.198 li
533.599 344.915 li
533.675 345.661 li
533.599 346.407 li
533.381 347.124 li
533.03 347.786 li
532.555 348.368 li
531.973 348.842 li
531.312 349.194 li
530.595 349.411 li
529.849 349.487 li
529.103 349.411 li
528.386 349.194 li
527.725 348.842 li
527.143 348.368 li
526.668 347.786 li
526.317 347.124 li
526.099 346.407 li
526.022 345.661 li
526.099 344.915 li
526.317 344.198 li
526.668 343.536 li
527.143 342.956 li
527.725 342.481 li
528.386 342.127 li
529.103 341.911 li
529.849 341.834 li
@
529.38 330.719 mo
530.097 330.938 li
528.634 330.641 li
529.38 330.719 li
cp
f
530.097 330.938 mo
530.758 331.29 li
528.634 330.641 li
530.097 330.938 li
cp
f
530.758 331.29 mo
531.34 331.764 li
528.634 330.641 li
530.758 331.29 li
cp
f
531.34 331.764 mo
531.815 332.346 li
528.634 330.641 li
531.34 331.764 li
cp
f
531.815 332.346 mo
532.167 333.008 li
528.634 330.641 li
531.815 332.346 li
cp
f
532.167 333.008 mo
532.386 333.723 li
528.634 330.641 li
532.167 333.008 li
cp
f
532.386 333.723 mo
532.462 334.471 li
528.634 330.641 li
532.386 333.723 li
cp
f
532.462 334.471 mo
532.386 335.217 li
528.634 330.641 li
532.462 334.471 li
cp
f
532.386 335.217 mo
532.167 335.932 li
528.634 330.641 li
532.386 335.217 li
cp
f
532.167 335.932 mo
531.815 336.594 li
528.634 330.641 li
532.167 335.932 li
cp
f
531.815 336.594 mo
531.34 337.174 li
528.634 330.641 li
531.815 336.594 li
cp
f
531.34 337.174 mo
530.758 337.649 li
528.634 330.641 li
531.34 337.174 li
cp
f
530.758 337.649 mo
530.097 338.002 li
528.634 330.641 li
530.758 337.649 li
cp
f
530.097 338.002 mo
529.38 338.221 li
528.634 330.641 li
530.097 338.002 li
cp
f
529.38 338.221 mo
528.634 338.297 li
528.634 330.641 li
529.38 338.221 li
cp
f
528.634 338.297 mo
527.889 338.221 li
528.634 330.641 li
528.634 338.297 li
cp
f
527.889 338.221 mo
527.173 338.002 li
528.634 330.641 li
527.889 338.221 li
cp
f
527.173 338.002 mo
526.511 337.649 li
528.634 330.641 li
527.173 338.002 li
cp
f
526.511 337.649 mo
525.929 337.174 li
528.634 330.641 li
526.511 337.649 li
cp
f
525.929 337.174 mo
525.455 336.594 li
528.634 330.641 li
525.929 337.174 li
cp
f
525.455 336.594 mo
525.103 335.932 li
528.634 330.641 li
525.455 336.594 li
cp
f
525.103 335.932 mo
524.884 335.217 li
528.634 330.641 li
525.103 335.932 li
cp
f
524.884 335.217 mo
524.807 334.471 li
528.634 330.641 li
524.884 335.217 li
cp
f
524.807 334.471 mo
524.884 333.723 li
528.634 330.641 li
524.807 334.471 li
cp
f
524.884 333.723 mo
525.103 333.008 li
528.634 330.641 li
524.884 333.723 li
cp
f
525.103 333.008 mo
525.455 332.346 li
528.634 330.641 li
525.103 333.008 li
cp
f
525.455 332.346 mo
525.929 331.764 li
528.634 330.641 li
525.455 332.346 li
cp
f
525.929 331.764 mo
526.511 331.29 li
528.634 330.641 li
525.929 331.764 li
cp
f
526.511 331.29 mo
527.173 330.938 li
528.634 330.641 li
526.511 331.29 li
cp
f
527.173 330.938 mo
527.889 330.719 li
528.634 330.641 li
527.173 330.938 li
cp
f
527.889 330.719 mo
528.634 330.641 li
528.634 330.641 li
527.889 330.719 li
cp
f
528.634 330.641 mo
529.38 330.719 li
530.097 330.938 li
530.758 331.29 li
531.34 331.764 li
531.815 332.346 li
532.167 333.008 li
532.386 333.723 li
532.462 334.471 li
532.386 335.217 li
532.167 335.932 li
531.815 336.594 li
531.34 337.174 li
530.758 337.649 li
530.097 338.002 li
529.38 338.221 li
528.634 338.297 li
527.889 338.221 li
527.173 338.002 li
526.511 337.649 li
525.929 337.174 li
525.455 336.594 li
525.103 335.932 li
524.884 335.217 li
524.807 334.471 li
524.884 333.723 li
525.103 333.008 li
525.455 332.346 li
525.929 331.764 li
526.511 331.29 li
527.173 330.938 li
527.889 330.719 li
528.634 330.641 li
@
525.612 311.506 mo
526.328 311.725 li
524.867 311.431 li
525.612 311.506 li
cp
f
526.328 311.725 mo
526.99 312.076 li
524.867 311.431 li
526.328 311.725 li
cp
f
526.99 312.076 mo
527.571 312.551 li
524.867 311.431 li
526.99 312.076 li
cp
f
527.571 312.551 mo
528.046 313.133 li
524.867 311.431 li
527.571 312.551 li
cp
f
528.046 313.133 mo
528.399 313.794 li
524.867 311.431 li
528.046 313.133 li
cp
f
528.399 313.794 mo
528.617 314.511 li
524.867 311.431 li
528.399 313.794 li
cp
f
528.617 314.511 mo
528.693 315.257 li
524.867 311.431 li
528.617 314.511 li
cp
f
528.693 315.257 mo
528.617 316.004 li
524.867 311.431 li
528.693 315.257 li
cp
f
528.617 316.004 mo
528.399 316.717 li
524.867 311.431 li
528.617 316.004 li
cp
f
528.399 316.717 mo
528.046 317.381 li
524.867 311.431 li
528.399 316.717 li
cp
f
528.046 317.381 mo
527.571 317.963 li
524.867 311.431 li
528.046 317.381 li
cp
f
527.571 317.963 mo
526.99 318.436 li
524.867 311.431 li
527.571 317.963 li
cp
f
526.99 318.436 mo
526.328 318.79 li
524.867 311.431 li
526.99 318.436 li
cp
f
526.328 318.79 mo
525.612 319.006 li
524.867 311.431 li
526.328 318.79 li
cp
f
525.612 319.006 mo
524.867 319.084 li
524.867 311.431 li
525.612 319.006 li
cp
f
524.867 319.084 mo
524.121 319.006 li
524.867 311.431 li
524.867 319.084 li
cp
f
524.121 319.006 mo
523.404 318.79 li
524.867 311.431 li
524.121 319.006 li
cp
f
523.404 318.79 mo
522.743 318.436 li
524.867 311.431 li
523.404 318.79 li
cp
f
522.743 318.436 mo
522.161 317.963 li
524.867 311.431 li
522.743 318.436 li
cp
f
522.161 317.963 mo
521.686 317.381 li
524.867 311.431 li
522.161 317.963 li
cp
f
521.686 317.381 mo
521.334 316.717 li
524.867 311.431 li
521.686 317.381 li
cp
f
521.334 316.717 mo
521.115 316.004 li
524.867 311.431 li
521.334 316.717 li
cp
f
521.115 316.004 mo
521.039 315.257 li
524.867 311.431 li
521.115 316.004 li
cp
f
521.039 315.257 mo
521.115 314.511 li
524.867 311.431 li
521.039 315.257 li
cp
f
521.115 314.511 mo
521.334 313.794 li
524.867 311.431 li
521.115 314.511 li
cp
f
521.334 313.794 mo
521.686 313.133 li
524.867 311.431 li
521.334 313.794 li
cp
f
521.686 313.133 mo
522.161 312.551 li
524.867 311.431 li
521.686 313.133 li
cp
f
522.161 312.551 mo
522.743 312.076 li
524.867 311.431 li
522.161 312.551 li
cp
f
522.743 312.076 mo
523.404 311.725 li
524.867 311.431 li
522.743 312.076 li
cp
f
523.404 311.725 mo
524.121 311.506 li
524.867 311.431 li
523.404 311.725 li
cp
f
524.121 311.506 mo
524.867 311.431 li
524.867 311.431 li
524.121 311.506 li
cp
f
524.867 311.431 mo
525.612 311.506 li
526.328 311.725 li
526.99 312.076 li
527.571 312.551 li
528.046 313.133 li
528.399 313.794 li
528.617 314.511 li
528.693 315.257 li
528.617 316.004 li
528.399 316.717 li
528.046 317.381 li
527.571 317.963 li
526.99 318.436 li
526.328 318.79 li
525.612 319.006 li
524.867 319.084 li
524.121 319.006 li
523.404 318.79 li
522.743 318.436 li
522.161 317.963 li
521.686 317.381 li
521.334 316.717 li
521.115 316.004 li
521.039 315.257 li
521.115 314.511 li
521.334 313.794 li
521.686 313.133 li
522.161 312.551 li
522.743 312.076 li
523.404 311.725 li
524.121 311.506 li
524.867 311.431 li
@
516.766 291.556 mo
517.482 291.774 li
516.019 291.48 li
516.766 291.556 li
cp
f
517.482 291.774 mo
518.144 292.126 li
516.019 291.48 li
517.482 291.774 li
cp
f
518.144 292.126 mo
518.725 292.601 li
516.019 291.48 li
518.144 292.126 li
cp
f
518.725 292.601 mo
519.201 293.183 li
516.019 291.48 li
518.725 292.601 li
cp
f
519.201 293.183 mo
519.552 293.845 li
516.019 291.48 li
519.201 293.183 li
cp
f
519.552 293.845 mo
519.771 294.561 li
516.019 291.48 li
519.552 293.845 li
cp
f
519.771 294.561 mo
519.847 295.307 li
516.019 291.48 li
519.771 294.561 li
cp
f
519.847 295.307 mo
519.771 296.054 li
516.019 291.48 li
519.847 295.307 li
cp
f
519.771 296.054 mo
519.552 296.768 li
516.019 291.48 li
519.771 296.054 li
cp
f
519.552 296.768 mo
519.201 297.432 li
516.019 291.48 li
519.552 296.768 li
cp
f
519.201 297.432 mo
518.725 298.013 li
516.019 291.48 li
519.201 297.432 li
cp
f
518.725 298.013 mo
518.144 298.486 li
516.019 291.48 li
518.725 298.013 li
cp
f
518.144 298.486 mo
517.482 298.84 li
516.019 291.48 li
518.144 298.486 li
cp
f
517.482 298.84 mo
516.766 299.057 li
516.019 291.48 li
517.482 298.84 li
cp
f
516.766 299.057 mo
516.019 299.134 li
516.019 291.48 li
516.766 299.057 li
cp
f
516.019 299.134 mo
515.273 299.057 li
516.019 291.48 li
516.019 299.134 li
cp
f
515.273 299.057 mo
514.558 298.84 li
516.019 291.48 li
515.273 299.057 li
cp
f
514.558 298.84 mo
513.895 298.486 li
516.019 291.48 li
514.558 298.84 li
cp
f
513.895 298.486 mo
513.313 298.013 li
516.019 291.48 li
513.895 298.486 li
cp
f
513.313 298.013 mo
512.84 297.432 li
516.019 291.48 li
513.313 298.013 li
cp
f
512.84 297.432 mo
512.487 296.768 li
516.019 291.48 li
512.84 297.432 li
cp
f
512.487 296.768 mo
512.269 296.054 li
516.019 291.48 li
512.487 296.768 li
cp
f
512.269 296.054 mo
512.193 295.307 li
516.019 291.48 li
512.269 296.054 li
cp
f
512.193 295.307 mo
512.269 294.561 li
516.019 291.48 li
512.193 295.307 li
cp
f
512.269 294.561 mo
512.487 293.845 li
516.019 291.48 li
512.269 294.561 li
cp
f
512.487 293.845 mo
512.84 293.183 li
516.019 291.48 li
512.487 293.845 li
cp
f
512.84 293.183 mo
513.313 292.601 li
516.019 291.48 li
512.84 293.183 li
cp
f
513.313 292.601 mo
513.895 292.126 li
516.019 291.48 li
513.313 292.601 li
cp
f
513.895 292.126 mo
514.558 291.774 li
516.019 291.48 li
513.895 292.126 li
cp
f
514.558 291.774 mo
515.273 291.556 li
516.019 291.48 li
514.558 291.774 li
cp
f
515.273 291.556 mo
516.019 291.48 li
516.019 291.48 li
515.273 291.556 li
cp
f
516.019 291.48 mo
516.766 291.556 li
517.482 291.774 li
518.144 292.126 li
518.725 292.601 li
519.201 293.183 li
519.552 293.845 li
519.771 294.561 li
519.847 295.307 li
519.771 296.054 li
519.552 296.768 li
519.201 297.432 li
518.725 298.013 li
518.144 298.486 li
517.482 298.84 li
516.766 299.057 li
516.019 299.134 li
515.273 299.057 li
514.558 298.84 li
513.895 298.486 li
513.313 298.013 li
512.84 297.432 li
512.487 296.768 li
512.269 296.054 li
512.193 295.307 li
512.269 294.561 li
512.487 293.845 li
512.84 293.183 li
513.313 292.601 li
513.895 292.126 li
514.558 291.774 li
515.273 291.556 li
516.019 291.48 li
@
504.294 303.417 mo
505.011 303.635 li
503.548 303.341 li
504.294 303.417 li
cp
f
505.011 303.635 mo
505.672 303.988 li
503.548 303.341 li
505.011 303.635 li
cp
f
505.672 303.988 mo
506.254 304.461 li
503.548 303.341 li
505.672 303.988 li
cp
f
506.254 304.461 mo
506.729 305.043 li
503.548 303.341 li
506.254 304.461 li
cp
f
506.729 305.043 mo
507.081 305.707 li
503.548 303.341 li
506.729 305.043 li
cp
f
507.081 305.707 mo
507.3 306.421 li
503.548 303.341 li
507.081 305.707 li
cp
f
507.3 306.421 mo
507.375 307.167 li
503.548 303.341 li
507.3 306.421 li
cp
f
507.375 307.167 mo
507.3 307.914 li
503.548 303.341 li
507.375 307.167 li
cp
f
507.3 307.914 mo
507.081 308.63 li
503.548 303.341 li
507.3 307.914 li
cp
f
507.081 308.63 mo
506.729 309.292 li
503.548 303.341 li
507.081 308.63 li
cp
f
506.729 309.292 mo
506.254 309.874 li
503.548 303.341 li
506.729 309.292 li
cp
f
506.254 309.874 mo
505.672 310.349 li
503.548 303.341 li
506.254 309.874 li
cp
f
505.672 310.349 mo
505.011 310.7 li
503.548 303.341 li
505.672 310.349 li
cp
f
505.011 310.7 mo
504.294 310.919 li
503.548 303.341 li
505.011 310.7 li
cp
f
504.294 310.919 mo
503.548 310.996 li
503.548 303.341 li
504.294 310.919 li
cp
f
503.548 310.996 mo
502.802 310.919 li
503.548 303.341 li
503.548 310.996 li
cp
f
502.802 310.919 mo
502.087 310.7 li
503.548 303.341 li
502.802 310.919 li
cp
f
502.087 310.7 mo
501.424 310.349 li
503.548 303.341 li
502.087 310.7 li
cp
f
501.424 310.349 mo
500.842 309.874 li
503.548 303.341 li
501.424 310.349 li
cp
f
500.842 309.874 mo
500.369 309.292 li
503.548 303.341 li
500.842 309.874 li
cp
f
500.369 309.292 mo
500.016 308.63 li
503.548 303.341 li
500.369 309.292 li
cp
f
500.016 308.63 mo
499.798 307.914 li
503.548 303.341 li
500.016 308.63 li
cp
f
499.798 307.914 mo
499.722 307.167 li
503.548 303.341 li
499.798 307.914 li
cp
f
499.722 307.167 mo
499.798 306.421 li
503.548 303.341 li
499.722 307.167 li
cp
f
499.798 306.421 mo
500.016 305.707 li
503.548 303.341 li
499.798 306.421 li
cp
f
500.016 305.707 mo
500.369 305.043 li
503.548 303.341 li
500.016 305.707 li
cp
f
500.369 305.043 mo
500.842 304.461 li
503.548 303.341 li
500.369 305.043 li
cp
f
500.842 304.461 mo
501.424 303.988 li
503.548 303.341 li
500.842 304.461 li
cp
f
501.424 303.988 mo
502.087 303.635 li
503.548 303.341 li
501.424 303.988 li
cp
f
502.087 303.635 mo
502.802 303.417 li
503.548 303.341 li
502.087 303.635 li
cp
f
502.802 303.417 mo
503.548 303.341 li
503.548 303.341 li
502.802 303.417 li
cp
f
503.548 303.341 mo
504.294 303.417 li
505.011 303.635 li
505.672 303.988 li
506.254 304.461 li
506.729 305.043 li
507.081 305.707 li
507.3 306.421 li
507.375 307.167 li
507.3 307.914 li
507.081 308.63 li
506.729 309.292 li
506.254 309.874 li
505.672 310.349 li
505.011 310.7 li
504.294 310.919 li
503.548 310.996 li
502.802 310.919 li
502.087 310.7 li
501.424 310.349 li
500.842 309.874 li
500.369 309.292 li
500.016 308.63 li
499.798 307.914 li
499.722 307.167 li
499.798 306.421 li
500.016 305.707 li
500.369 305.043 li
500.842 304.461 li
501.424 303.988 li
502.087 303.635 li
502.802 303.417 li
503.548 303.341 li
@
502.564 326.973 mo
503.28 327.192 li
501.817 326.899 li
502.564 326.973 li
cp
f
503.28 327.192 mo
503.942 327.543 li
501.817 326.899 li
503.28 327.192 li
cp
f
503.942 327.543 mo
504.524 328.018 li
501.817 326.899 li
503.942 327.543 li
cp
f
504.524 328.018 mo
504.999 328.6 li
501.817 326.899 li
504.524 328.018 li
cp
f
504.999 328.6 mo
505.35 329.262 li
501.817 326.899 li
504.999 328.6 li
cp
f
505.35 329.262 mo
505.569 329.979 li
501.817 326.899 li
505.35 329.262 li
cp
f
505.569 329.979 mo
505.646 330.725 li
501.817 326.899 li
505.569 329.979 li
cp
f
505.646 330.725 mo
505.569 331.471 li
501.817 326.899 li
505.646 330.725 li
cp
f
505.569 331.471 mo
505.35 332.186 li
501.817 326.899 li
505.569 331.471 li
cp
f
505.35 332.186 mo
504.999 332.85 li
501.817 326.899 li
505.35 332.186 li
cp
f
504.999 332.85 mo
504.524 333.432 li
501.817 326.899 li
504.999 332.85 li
cp
f
504.524 333.432 mo
503.942 333.905 li
501.817 326.899 li
504.524 333.432 li
cp
f
503.942 333.905 mo
503.28 334.258 li
501.817 326.899 li
503.942 333.905 li
cp
f
503.28 334.258 mo
502.564 334.475 li
501.817 326.899 li
503.28 334.258 li
cp
f
502.564 334.475 mo
501.817 334.551 li
501.817 326.899 li
502.564 334.475 li
cp
f
501.817 334.551 mo
501.071 334.475 li
501.817 326.899 li
501.817 334.551 li
cp
f
501.071 334.475 mo
500.356 334.258 li
501.817 326.899 li
501.071 334.475 li
cp
f
500.356 334.258 mo
499.695 333.905 li
501.817 326.899 li
500.356 334.258 li
cp
f
499.695 333.905 mo
499.113 333.432 li
501.817 326.899 li
499.695 333.905 li
cp
f
499.113 333.432 mo
498.638 332.85 li
501.817 326.899 li
499.113 333.432 li
cp
f
498.638 332.85 mo
498.285 332.186 li
501.817 326.899 li
498.638 332.85 li
cp
f
498.285 332.186 mo
498.068 331.471 li
501.817 326.899 li
498.285 332.186 li
cp
f
498.068 331.471 mo
497.991 330.725 li
501.817 326.899 li
498.068 331.471 li
cp
f
497.991 330.725 mo
498.068 329.979 li
501.817 326.899 li
497.991 330.725 li
cp
f
498.068 329.979 mo
498.285 329.262 li
501.817 326.899 li
498.068 329.979 li
cp
f
498.285 329.262 mo
498.638 328.6 li
501.817 326.899 li
498.285 329.262 li
cp
f
498.638 328.6 mo
499.113 328.018 li
501.817 326.899 li
498.638 328.6 li
cp
f
499.113 328.018 mo
499.695 327.543 li
501.817 326.899 li
499.113 328.018 li
cp
f
499.695 327.543 mo
500.356 327.192 li
501.817 326.899 li
499.695 327.543 li
cp
f
500.356 327.192 mo
501.071 326.973 li
501.817 326.899 li
500.356 327.192 li
cp
f
501.071 326.973 mo
501.817 326.899 li
501.817 326.899 li
501.071 326.973 li
cp
f
501.817 326.899 mo
502.564 326.973 li
503.28 327.192 li
503.942 327.543 li
504.524 328.018 li
504.999 328.6 li
505.35 329.262 li
505.569 329.979 li
505.646 330.725 li
505.569 331.471 li
505.35 332.186 li
504.999 332.85 li
504.524 333.432 li
503.942 333.905 li
503.28 334.258 li
502.564 334.475 li
501.817 334.551 li
501.071 334.475 li
500.356 334.258 li
499.695 333.905 li
499.113 333.432 li
498.638 332.85 li
498.285 332.186 li
498.068 331.471 li
497.991 330.725 li
498.068 329.979 li
498.285 329.262 li
498.638 328.6 li
499.113 328.018 li
499.695 327.543 li
500.356 327.192 li
501.071 326.973 li
501.817 326.899 li
@
518.652 323.25 mo
519.368 323.469 li
517.906 323.174 li
518.652 323.25 li
cp
f
519.368 323.469 mo
520.03 323.821 li
517.906 323.174 li
519.368 323.469 li
cp
f
520.03 323.821 mo
520.612 324.295 li
517.906 323.174 li
520.03 323.821 li
cp
f
520.612 324.295 mo
521.086 324.877 li
517.906 323.174 li
520.612 324.295 li
cp
f
521.086 324.877 mo
521.438 325.538 li
517.906 323.174 li
521.086 324.877 li
cp
f
521.438 325.538 mo
521.657 326.254 li
517.906 323.174 li
521.438 325.538 li
cp
f
521.657 326.254 mo
521.734 327 li
517.906 323.174 li
521.657 326.254 li
cp
f
521.734 327 mo
521.657 327.747 li
517.906 323.174 li
521.734 327 li
cp
f
521.657 327.747 mo
521.438 328.463 li
517.906 323.174 li
521.657 327.747 li
cp
f
521.438 328.463 mo
521.086 329.125 li
517.906 323.174 li
521.438 328.463 li
cp
f
521.086 329.125 mo
520.612 329.708 li
517.906 323.174 li
521.086 329.125 li
cp
f
520.612 329.708 mo
520.03 330.182 li
517.906 323.174 li
520.612 329.708 li
cp
f
520.03 330.182 mo
519.368 330.534 li
517.906 323.174 li
520.03 330.182 li
cp
f
519.368 330.534 mo
518.652 330.75 li
517.906 323.174 li
519.368 330.534 li
cp
f
518.652 330.75 mo
517.906 330.827 li
517.906 323.174 li
518.652 330.75 li
cp
f
517.906 330.827 mo
517.159 330.75 li
517.906 323.174 li
517.906 330.827 li
cp
f
517.159 330.75 mo
516.445 330.534 li
517.906 323.174 li
517.159 330.75 li
cp
f
516.445 330.534 mo
515.783 330.182 li
517.906 323.174 li
516.445 330.534 li
cp
f
515.783 330.182 mo
515.201 329.708 li
517.906 323.174 li
515.783 330.182 li
cp
f
515.201 329.708 mo
514.726 329.125 li
517.906 323.174 li
515.201 329.708 li
cp
f
514.726 329.125 mo
514.373 328.463 li
517.906 323.174 li
514.726 329.125 li
cp
f
514.373 328.463 mo
514.156 327.747 li
517.906 323.174 li
514.373 328.463 li
cp
f
514.156 327.747 mo
514.079 327 li
517.906 323.174 li
514.156 327.747 li
cp
f
514.079 327 mo
514.156 326.254 li
517.906 323.174 li
514.079 327 li
cp
f
514.156 326.254 mo
514.373 325.538 li
517.906 323.174 li
514.156 326.254 li
cp
f
514.373 325.538 mo
514.726 324.877 li
517.906 323.174 li
514.373 325.538 li
cp
f
514.726 324.877 mo
515.201 324.295 li
517.906 323.174 li
514.726 324.877 li
cp
f
515.201 324.295 mo
515.783 323.821 li
517.906 323.174 li
515.201 324.295 li
cp
f
515.783 323.821 mo
516.445 323.469 li
517.906 323.174 li
515.783 323.821 li
cp
f
516.445 323.469 mo
517.159 323.25 li
517.906 323.174 li
516.445 323.469 li
cp
f
517.159 323.25 mo
517.906 323.174 li
517.906 323.174 li
517.159 323.25 li
cp
f
517.906 323.174 mo
518.652 323.25 li
519.368 323.469 li
520.03 323.821 li
520.612 324.295 li
521.086 324.877 li
521.438 325.538 li
521.657 326.254 li
521.734 327 li
521.657 327.747 li
521.438 328.463 li
521.086 329.125 li
520.612 329.708 li
520.03 330.182 li
519.368 330.534 li
518.652 330.75 li
517.906 330.827 li
517.159 330.75 li
516.445 330.534 li
515.783 330.182 li
515.201 329.708 li
514.726 329.125 li
514.373 328.463 li
514.156 327.747 li
514.079 327 li
514.156 326.254 li
514.373 325.538 li
514.726 324.877 li
515.201 324.295 li
515.783 323.821 li
516.445 323.469 li
517.159 323.25 li
517.906 323.174 li
@
527.545 328.584 mo
528.262 328.803 li
526.799 328.51 li
527.545 328.584 li
cp
f
528.262 328.803 mo
528.923 329.155 li
526.799 328.51 li
528.262 328.803 li
cp
f
528.923 329.155 mo
529.505 329.629 li
526.799 328.51 li
528.923 329.155 li
cp
f
529.505 329.629 mo
529.98 330.211 li
526.799 328.51 li
529.505 329.629 li
cp
f
529.98 330.211 mo
530.332 330.874 li
526.799 328.51 li
529.98 330.211 li
cp
f
530.332 330.874 mo
530.549 331.59 li
526.799 328.51 li
530.332 330.874 li
cp
f
530.549 331.59 mo
530.625 332.336 li
526.799 328.51 li
530.549 331.59 li
cp
f
530.625 332.336 mo
530.549 333.083 li
526.799 328.51 li
530.625 332.336 li
cp
f
530.549 333.083 mo
530.332 333.797 li
526.799 328.51 li
530.549 333.083 li
cp
f
530.332 333.797 mo
529.98 334.461 li
526.799 328.51 li
530.332 333.797 li
cp
f
529.98 334.461 mo
529.505 335.043 li
526.799 328.51 li
529.98 334.461 li
cp
f
529.505 335.043 mo
528.923 335.516 li
526.799 328.51 li
529.505 335.043 li
cp
f
528.923 335.516 mo
528.262 335.87 li
526.799 328.51 li
528.923 335.516 li
cp
f
528.262 335.87 mo
527.545 336.086 li
526.799 328.51 li
528.262 335.87 li
cp
f
527.545 336.086 mo
526.799 336.163 li
526.799 328.51 li
527.545 336.086 li
cp
f
526.799 336.163 mo
526.052 336.086 li
526.799 328.51 li
526.799 336.163 li
cp
f
526.052 336.086 mo
525.338 335.87 li
526.799 328.51 li
526.052 336.086 li
cp
f
525.338 335.87 mo
524.675 335.516 li
526.799 328.51 li
525.338 335.87 li
cp
f
524.675 335.516 mo
524.093 335.043 li
526.799 328.51 li
524.675 335.516 li
cp
f
524.093 335.043 mo
523.619 334.461 li
526.799 328.51 li
524.093 335.043 li
cp
f
523.619 334.461 mo
523.267 333.797 li
526.799 328.51 li
523.619 334.461 li
cp
f
523.267 333.797 mo
523.049 333.083 li
526.799 328.51 li
523.267 333.797 li
cp
f
523.049 333.083 mo
522.972 332.336 li
526.799 328.51 li
523.049 333.083 li
cp
f
522.972 332.336 mo
523.049 331.59 li
526.799 328.51 li
522.972 332.336 li
cp
f
523.049 331.59 mo
523.267 330.874 li
526.799 328.51 li
523.049 331.59 li
cp
f
523.267 330.874 mo
523.619 330.211 li
526.799 328.51 li
523.267 330.874 li
cp
f
523.619 330.211 mo
524.093 329.629 li
526.799 328.51 li
523.619 330.211 li
cp
f
524.093 329.629 mo
524.675 329.155 li
526.799 328.51 li
524.093 329.629 li
cp
f
524.675 329.155 mo
525.338 328.803 li
526.799 328.51 li
524.675 329.155 li
cp
f
525.338 328.803 mo
526.052 328.584 li
526.799 328.51 li
525.338 328.803 li
cp
f
526.052 328.584 mo
526.799 328.51 li
526.799 328.51 li
526.052 328.584 li
cp
f
526.799 328.51 mo
527.545 328.584 li
528.262 328.803 li
528.923 329.155 li
529.505 329.629 li
529.98 330.211 li
530.332 330.874 li
530.549 331.59 li
530.625 332.336 li
530.549 333.083 li
530.332 333.797 li
529.98 334.461 li
529.505 335.043 li
528.923 335.516 li
528.262 335.87 li
527.545 336.086 li
526.799 336.163 li
526.052 336.086 li
525.338 335.87 li
524.675 335.516 li
524.093 335.043 li
523.619 334.461 li
523.267 333.797 li
523.049 333.083 li
522.972 332.336 li
523.049 331.59 li
523.267 330.874 li
523.619 330.211 li
524.093 329.629 li
524.675 329.155 li
525.338 328.803 li
526.052 328.584 li
526.799 328.51 li
@
2 lw
701.713 440.502 mo
701.713 429.872 li
680.25 440.502 mo
680.25 435.186 li
658.787 440.502 mo
658.787 435.186 li
637.324 440.502 mo
637.324 435.186 li
615.861 440.502 mo
615.861 435.186 li
594.397 440.502 mo
594.397 429.872 li
572.933 440.502 mo
572.933 435.186 li
551.469 440.502 mo
551.469 435.186 li
530.005 440.502 mo
530.005 435.186 li
508.543 440.502 mo
508.543 435.186 li
487.08 440.502 mo
487.08 429.872 li
481.713 440.502 mo
701.713 440.502 li
@
IDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf465.822 462.346 mo(0.05)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf573.142 462.346 mo(0.15)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf680.462 462.346 mo(0.25)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf527.791 487.073 mo(1/)[12.3096 0 ]xshIDULSG+Symbol*1 [22.1337 0 0 -22.0975 0 0 ]msf546.595 487.073 mo(\341)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf555.142 487.073 mo(L)shIDULSF+Helvetica*1 [13.7008 0 0 -13.6784 0 0 ]msf566.994 492.799 mo(n)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf574.783 487.073 mo( )shIDULSG+Symbol*1 [22.1337 0 0 -22.0975 0 0 ]msf580.845 487.073 mo(\361)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf589.408 487.073 mo(\(cm)[7.37109 11.0664 0 ]xsh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSG+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B79676FB39348885B8B82C2EA45883A9AE94> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSG+Symbol /Encoding getdup 45 /minus putpop%ADOEndSubsetFont
/IDULSG+Symbol*1 [45{/.notdef}rp /minus 25{/.notdef}rp /Gamma 31{/.notdef}rp /gamma 12{/.notdef}rp /tau 108{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSG+Symbol nfIDULSG+Symbol*1 [13.7008 0 0 -13.6784 0 0 ]msf627.439 475.37 mo(-)shIDULSF+Helvetica*1 [13.7008 0 0 -13.6784 0 0 ]msf640.681 475.37 mo(1)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf648.197 487.073 mo(\))sh481.713 280.501 mo
487.029 280.501 li
481.713 293.835 mo
487.029 293.835 li
481.713 307.167 mo
492.343 307.167 li
481.713 320.502 mo
487.029 320.502 li
481.713 333.834 mo
487.029 333.834 li
481.713 347.168 mo
487.029 347.168 li
481.713 360.5 mo
487.029 360.5 li
481.713 373.834 mo
492.343 373.834 li
481.713 387.167 mo
487.029 387.167 li
481.713 400.5 mo
487.029 400.5 li
481.713 413.836 mo
487.029 413.836 li
481.713 427.168 mo
487.029 427.168 li
481.713 440.502 mo
492.343 440.502 li
481.713 440.502 mo
481.713 280.501 li
@
IDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf440.697 448.229 mo(0.0)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf440.697 381.565 mo(0.5)shIDULSF+Helvetica*1 [22.1337 0 0 -22.0975 0 0 ]msf440.697 314.901 mo(1.0)shIDULSG+Symbol*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 427.752 mo(\341G)[-8.55273 0 ]yshIDULSF+Helvetica*1 [0 -15.893 -15.867 0 0 0 ]msf426.376 403.971 mo(p)shIDULSF+Helvetica*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 395.838 mo(/)shIDULSG+Symbol*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 389.19 mo(G)shIDULSF+Helvetica*1 [0 -15.893 -15.867 0 0 0 ]msf426.376 373.948 mo(p)shIDULSF+Helvetica*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 365.815 mo(\()shIDULSG+Symbol*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 358.385 mo(g)shIDULSF+Helvetica*1 [0 -15.893 -15.867 0 0 0 ]msf426.376 346.627 mo(s)shIDULSF+Helvetica*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 339.831 mo(=0\))[-14.9941 -14.2793 0 ]yshIDULSG+Symbol*1 [0 -25.6752 -25.6332 0 0 0 ]msf421.087 301.815 mo(\361)sh696.399 280.501 mo
701.713 280.501 li
696.399 293.835 mo
701.713 293.835 li
691.083 307.167 mo
701.713 307.167 li
696.399 320.502 mo
701.713 320.502 li
696.399 333.834 mo
701.713 333.834 li
696.399 347.168 mo
701.713 347.168 li
696.399 360.5 mo
701.713 360.5 li
691.083 373.834 mo
701.713 373.834 li
696.399 387.167 mo
701.713 387.167 li
696.399 400.5 mo
701.713 400.5 li
696.399 413.836 mo
701.713 413.836 li
696.399 427.168 mo
701.713 427.168 li
691.083 440.502 mo
701.713 440.502 li
701.713 440.502 mo
701.713 280.501 li
701.713 291.132 mo
701.713 280.501 li
680.25 285.817 mo
680.25 280.501 li
658.787 285.817 mo
658.787 280.501 li
637.324 285.817 mo
637.324 280.501 li
615.861 285.817 mo
615.861 280.501 li
594.397 291.132 mo
594.397 280.501 li
572.933 285.817 mo
572.933 280.501 li
551.469 285.817 mo
551.469 280.501 li
530.005 285.817 mo
530.005 280.501 li
508.543 285.817 mo
508.543 280.501 li
487.08 291.132 mo
487.08 280.501 li
481.713 280.501 mo
701.713 280.501 li
@
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 97 /a putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IDULSH+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/IDULSH+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a 158{/.notdef}rp]IDULSH+MyriadPro-Regular nfIDULSH+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf278.833 75.5493 mo(\(a\))sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginIDULSH+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSH+MyriadPro-Regular /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/IDULSH+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b 157{/.notdef}rp]IDULSH+MyriadPro-Regular nfIDULSH+MyriadPro-Regular*1 [48 0 0 -48 0 0 ]msf209.833 317.549 mo(\(b\))[13.6318 27.168 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IDULSG+Symbol*1 uf/IDULSG+Symbol uf/Symbol uf/IDULSF+Helvetica*1 uf/IDULSF+Helvetica uf/Helvetica uf/IDULSH+MyriadPro-Regular*1 uf/IDULSH+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.2%%For: (Troy Carter) ()%%Title: (figure3.eps)%%CreationDate: 6/11/12 3:55 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&M-B1*(GPdE!;@Tcb"Q#O<0XATU>e:n#ZX_K)>8FNHhC`Hd^3`Q#b:Y\qtGAr$;IjiPr0p>bNCAcB7is'n512)P?Ws`q8?H)%i8\Up7!^Esc['uQ>5(@PkZc$$RCJ?3VF$Nn,a50T.[nSYiMB4)RE3CqS)n(*es?Ti`d$.%-Bll^2]PV6CSeeJ_:hKH"$LA#h+PH<%n3:^-?E=%L]HRgj;q/0$p&7M2DS(TDL"9#uNk;D'l7I$"IE[#>1&gn;DuX\,A)=nhNCLUae6/H*_I9`!G'fB3*;<[d24fkLn0K_E%MmI<)F#rX%8`ST04I_&.j%VY4lNs!fRMPfq^-3ODHaAa^5a.?lLOJf>!Y<^Rr:d$ESK_%-U%&D5l/_i278Rl]Ml)].^n]edF>fD@%j$,Lh&C;M%N_^tPr/YO\h8scoRWaI=kC>[^nSlurNP?icKed=]\BJ,#O[B(\8;f!t5O,YR&me"u91P30B*SB8rg$b4,VTqKVbg.j%\!Gt5T%'U%rcG":!1$h0BhU3_(f)fss$\?p'+'[D5KT+I=\frC&%\ttpo>r3iQ8;Koe8SjpVgGH&B*Q-GkEFuE7GkV85hpB_qkeU%OB]n)#\]([XhW;/,57C?SrKP^eaNd(16N6tCFOoPIZ;[LKsb_h=;+TBqpZN+:FH3godAu?H@\7nk@q;F%CDL8j6fE]OHYHcDH=g6%Nk3"37#(WTUQ9#Ss0M?I1/'Obku8SB_aY>A3`5e5\EM$\!H@^gLiC`+!kJNa01%?r'42=``1YnS[W60:A2]"ij.Ea=h^K*XL]59Q%n2$>]T@kdn/=#G.nMpH,a5L_p%Su,)nl-=^D=U^W"g(ZOplnB:X&KF0V,F$YqoiZG9f<ArZ<:QJp^O@2=_Itg_,"`E.RC+5$/R4u%i(9mND+"u-MIJ%=Di5f%(Idm)))3!^)%V9hT#-uhGoXpJp^+'1:@Jp#_49^_aYT:rr.Hs^,PVT:VO/Lp_OTO3I"E6P:[!YnM=_34%JtF`8p^Q,tS,anP-@l]0?s`=9g5$r#8(Ru8:2in28?`4]adZi'AFsF!A8DB0N1@$_D*e.e/!qFVKV$6lP$*u]AB!Ic["A,$'dd$+%n&#"\-[^O!OnFL%AE<4hr.J*)5PRfNO\cA#.tJ3B.1O)6.K.UN,NC"NLK4Or'JF"ZAFqQr1+iWpoM!kp[%RGl%Esi1-HltV-F5$p%@=I\Z=qUUcq%9-YGMspVJ_><rPd2b,&Bk^lKXrTA;d,mE"sYL[6>1r@"^P&YG;;42FTRof%7X)oK[,R9*El>(Uj)AnGu"@$OV?"c%e4eG`i.gkHidZW1<Gj2QG^P`[<R.=`;JDb"2l1kdrnqXYL+&t#X%]e"XojW=@M7NuYsHE&a%PBSI`\'Acf'BCRn,tSr[/!4M>E_>%"2tHDeDK>Za-TJ_Dq*\*?TLnFX1uck9SRr?A16f'r3&p>:Xn:_?a3-cX1ub@O0;e8hl+<3^Ij3-<e$<_SFV`^F'(O!8_0/SVOtqJ%1d<-\8gMA2c_HP4?:YDi3aJ?W+$E9FBCr[RQS,'%'?9KsAM05^$5p*"+D?H;DTfq)n/]im]'@%?s%8XJ?Np4b]FVbG&WK4#\VQh)%d<>^#T>`B<cpC8>n8Ao3MWd,14di0a4[/'GHA$a@%J5D066E^K\h*S[+E,)GW"jVRk++%PO:,USn=5FL[4ChdGn)%s-=28\8@u2f%TefI'2Bj"J^dd_7$3Yoh&?RH#/XdEjKT%:U5F=TJc1Jg!Oi)\040Cj+&M`.h?Q$N)\1JRm;LmY81pCHCn_d`2EpGKIe3\fNKJqb,%oJRbO4C4VlV=jp?JCgpI-/b!b[u<C*mf\=M^#3l;qEA<cl)MX;n:*3qd?VL1<:o2nWrS73R1jDRM?--Jh5b$Z-F@9E0q+cKOgu,t%-$2Rp9^%/Bc]18.YM`6s\d6eP7KU8%$m]E^X!<_HX1V4l_n6;BEFc_,I?R5SeYo6p[oI;j=Mpnsh^4_a,9WAH]F&c"X<jrMRe2QL%7F9<rn;52^;@fJ:E\\+f"1:tLOB&'XESE&+S"q5W"A\?@N#_F%DLqU<8`*BkdE!&IP$g86O-=Pr8Z(F%N[1CD:#Uan=oYp('e/pL%:kK1e`2o@tqh:Y1[NlJh:*NL(Rq]YJI1MC7XR[gU-6,coP+cF/+#<7\cY<3]64IVI$LB7YHh%S#PV;7#F3;"$IY:?$)%'+""VnX)%maDMr'`4D6"*m@=7f%.?/%Gm&RjnX;KT<f9L)L^4-&@N(8u_I!V^St"p*un99YgDno<\i2ejG8:Y[rcdD[KYs8Y9[=L;6_?@D:dG%gZ_q)mo5.f[Zg5c;QqRYVrJqJKsdSRELCHAWg'Gu-()ScO/-b=6hMeF3Vu&!LN9EgR7ob9%m]=S\+O[d2;tNn+JZ_j'ABhmT4kh3%hp1(:HIMk11RK_0ba2nTXD/WIpSeias3:,Dq/?,Erd1C<Sb1h]2I7b2-7F1m@Kp5dj,.5rA$?@3<ne,N'_40:T@s60@>*oG^;.1O%6M1\^laVK^N&Zd/c#B$u92iuGZK;]4/M>M%P3Pm22sM&Khm-KYlLc"H15NsbI>)=3?rjZW<LLo,9lp]-AW5d"[ub0lC:BJY<Z#WC%QoN&gQ7X+d\YnN_Z`L!]XTX_;MN2<FcVdJ.H;`t&9`#(^K!dhjfa6Aq>1SS\(Y(N[49Yj^H+Q?/Bo6]Zb/^PQXX%Y*;m"<m3GT)P%3J-rN15XO8FFFAU3nlZi;@L3*of'9N-nJ@+P517YP%V_fiDoc-Kc6l[S4fl_XiT*&eNo(B6YEI`7bP+=dAN3MnLA/[erc^eV0\T_%%PULKSX:U3gI\(sBIV\aG[.cQ,a%8YhKb)5_"8/D(DNFaWP0,;//[\PA*I_(Ub[O"[,Oq/<-pu'&?AUWodo9&:QhK]'BQL0d4=Z_%CK'@XH(6W0+rsdd#l4Su:i&XE/nP!_W/XKI.>;3G@3W[P!ahVO]k36<%fj6i.W9"HWjPE4NER'M>1F3]MT3:QauiJ40oSOFf*$e#%-r+?b'NE;UI[OXWnoWqlG7mNEr%+YCD(T@!*uQ1,MYBkZ:mI&u'bo7l4B5]cMf.BPA>9E@V9(23GSsKs:^p*iX5%?pri5Xi:hu2R%>a=3"8e`eAH56gP*Y]KD@1c:5V/%+%$EPdT4JW+V"KKL]gPR'P`&C],:S*Jr=%Y&d/96D5p-i(SJf8p.GUa:HP=LpIn]-)k2BTp<%B(U43M:)ra,HF2*WqJ7,SB-'"n[uG2.0D"D:g\dhJb:A^#W#NDb4qN\HDj#)H;%9%T__6E8gleo+k2fc3KNrFA3R;(;dcWrPK(gG%/Z/M9XWHb[;s_kr-hsG,"i"-5j5^T$91YjT,>%"M.,JdW8=q'[+[J,DXqtl[BIsFgq<97>GJN60;dN<Eb\IC9-]paZmB#kJL%I_a%5AEjLB<p>`]kNA3H!N[O;V%G5RK:DuD-HeEWde/%OenE?B8ZGde'DQ"(qpo"WNbD_AJ`oD.B4!DC(n67\lc3XjbQm!I+J.Gb$$3>%PJr:-1C)X,p)4g<Auup):A$SWI?>i5;<abPQ>.2H\lr:7j&.n%fIJM=QoSPiRp$=JU.HI>^LVdm7"<B32/?"J5cR&gC.[!b_LIL1%.`p20V/K:Ke(IROe,"QQk"M_9'/FU.6)`(.iToM^6<n%FO<h!-=?)0b;e\sAGGuL`+T!H7-So`bC_[Q;WUQnU9Q<W]Y\M--;)0>@%jUk<"KoOh!RgE+ood*a9;.Ych=\A$CLomV):[+%D]HC$Qo",4!Q=-FEg8L=]%uT.>HS&cA^LZ3$gsAs+MD(7X<8I`E6EipK6M;Q0%MEdfWEC$i<M"X2Q74+n";:e1t'SU:%s-II%l34D1X#-`oV<HZ;^/V3KH'bKm(RN=Fg5fD],U1:gJ9Z,Rla"I]>tV1nNP2=(+C!Ku%<)P<;!]t=NR`MN!93>J7T<#5M6p]Br]QOL5$u;?2Ys&rdFChfprOcB9s/51bBIM.*Z3P":5N+=cDq`!(oomPojD@S7=]OH2p7k1V%H*Wn1&KIQ:&TAETGK)cE,AU]70![unUa)ZN%>i@Z4<RH`a)c8(Pum<h6#OSUI=H+8KoKOTW'!SX(&aW1TJdJ^SnK!JUg0Y.6)dD+%b`QRuC7!!R7ZPlJ$6@=YX$(GZk+Tq5C9nJo_eZ=J6%l,#?BquWj4;?r9S7H3WD,cbb<$a`9,,*3B=50)`EJ]uSOBKuW3jRjP*B]]%bD9h6WY85K6)@cE$`YshNm*a:N!uC<KPDH_A[+Y16+fUq`E*q!i(Op^X#01\Ogtc]Xjn7!Hc$Bb9_fVl\WittOlt+*cc1EG_l5KW%%R,3e=uI,m(q9K8E:>AYk]EXUH8:<l`oqEDe<W/O?EY*E[+_jc'K_k/HQ=PY7[n[4f?,$ad\MSDMm_9pEI68dmn*Pt>&##IILCAV%VO^BT9i"G,Y=d$>P4E@SFPeB]\kJTrdUn$ApV_f^m?"[q12Ve=gE@HWN&7)fVDGWZ-T4oWG$5t0dQ#fD"-fT`)rWk:R7cK\b[Md(%iO!"ZD:\#Ee(CTV"q6GSA*Ao$CX@@m+Y8WCa\(&e-e9?!rf4T4T@;G7h!.FL[PC=lTR_q1L=;1T*\13!B9QY;o''#c)YI^+IWmJE%)q!PmV*V1IdspbQCI`jba.7D\Fk%L'n9;W)C!V+pJMq28mq(]I1MHoSljWnMLe7WRH`]L2'2_i?h<L[MPdfLr6aXAp_t]UmV3^tq%Bhs&IWh0PDUgC5dJsfD(XgSooOMrWh`$YMa`.gN%K+8et9^:YFR#ho;EMrF2knAPE^F*B3\pq:V+:?O2SDPiH]oQB.74Y_7&<@NH%MDB)I$$YQh]m%kWAb&*J@j;+hfDu&iCT[0\>AGE3"2l9Xe*6%72F/VJM%pj?XY>5@#\?u"_,UbU%a"I#/@cfON=JOT1XbKGl&X-e%N3p)A/[!cEY0!FKXOLe/NA5@8L$6#"A"`S$7%1O;Qlu`.'9;e)5%fM/ep,d7[:W@ULVn]8*G`.2H_.8F55Ud2C0jVHI4;XKMB7rP%^K=00#43QR$I>h3Psa-HEU1Z4qK5JK5`XK'4ck\cm%`C<?&`LFe_cMM)!]mbDM.!*BG>Mp`o^VRa*s";<TjkKg^T13-DuXAd/_6p%1&6/$#^GE/]I^tOpiJWQBL2K_[<h%(.b5WQ,?Z`!b=EIPJ(t#Q#cRtA%3I][L'L"s"PpH>l?0],mkHZm5!ChF)i]WD=W<460'[E`%!ZcEUai;X&dRS)t_e5/f,kXE9XRXtcX>N<tr$.7HRu*E,hR'[;n-PL]ObEP62#*0`KEMO>H\cn-M)UE+Sg7ub+uD1h6,Gp#cfk_,%A=AM7$pCVNLU5Cei-jhZj#'*c6)k9cl0RdF8b0Zc?iECjlZ1RI9$p[`'X6pp6n9mlOb`.3r/pueJ%I8F&''+kFn0B\n42aQ7ngD7%2b7hfh6t<JqlUmOec6:,ra+j"hF/p/d6]fjqc:IQd&AjnN'R(7TnCepY\:g7EWE$qrELlHOPHHVI?T`GJWoQhqn$[^OneHMEBK_<%Y$DKl4f)BM,GfV[C]#ckruEd3pk?Q;J08MHP2&;5WA'qC3[gr73<]!D2tpWn+l``1I,24C!/'GA,kB.g@:>;MSb,p.@_QQ,88e0t%bJ2-Lls',efKf#AK*W&^2g)LFrWog8eh00k,74*)r=j7p9;TNOkSI:>7O$F#2bT`-$IA>t;Ce?knGq7'pqp8F9l;XQk_Pe<qU/R"%'>*W)OeemN\[=5SIJ+<$!d?4,c0R_<rh9onk`7CheUQ.pDXD!%nX3VITWdf:E5ObJHP%F2j&nb'k8jLZ(u(Jj:]0eR-%Gac;SRU,%l!HWgbV(&Fp32QN_>Wrpn\9I!_Cm!<r0NK5Qg9^N0@q;&?`lU+^Kc76I_#GKr,Vaur8mc"q9/G$nsA['j=f+,a^;28P.t7O,_*B(%8H*Z.Oo4>;,PfOU8*ZH,O45i7+/rVM5>o7$J#%P(r^d!.rK6s<qBP[Voge;6l]9OKf,s6aY!:@L>^rQ!\c,/"ErD."jn^5#bOnC%%Qg9_)0@q<1?`lWA^Kc8!I_#I!r,Vauq;qGto?6esk*PCpbV.QiR:!*]1;@(DA:D)gaS^)WOo;]ait6^oRe<Q(ecV.Fo(YF3N!ngD%/iXq1D_c'T$E>lFW+Vc>%oP8g4_ZsBnCS[uN^p.b`u35"m_>@(qje[C:SXisK0jX#OK4DQ@om&UQFOaT-cUCk4<hi#TUYsWrYfpT%qpM9]H*$X9Bp(7#N7#t-0]5kGTCm,^s5M?r+X(CI@Ya0P+8)kh)Gf7FX`8!U%2VX?$#=%M'0m8oCSm9:Gga5NYI9DGS^^Gj*=2i;%DffObLg2U2E+j^Fs%gBg5Req,@t7+;]P%0?:THF<)e<OLm,R?fOo.%:(lqm3<n\/XV.lu_OKn]`pr*I,V`!nNhKj-Pq;aICirAil%rg-a>;;8HB]=lKl)TZc;XM?Z/9bHm(fb=W/`fK9HqG2"W!hg!<p-2kca&CEH(uC\Arn%_1^GVB8d8E\^9U[_H(B1edT[$tp61?+3%PAAJkdp`9c:/CK'S/`?@K&3a1%?fET:WNm+INO1*kRI<l2+DD,MC2dj\$mtB_nlAeq6@:$2lXRrZi"E,i"/K6\PM)^o7'I::3tai%s"DkDT#g#42Ju0tWm.`;PBP$>''-:NN\cqgN^l3_N6Ma0eb_5r:.IO`'`[E@VOt<Gb+uO\,0gM0Cg-Df%FhrUN77o$^M?IA(es1s%rH+8R:qpd,IuU>s2Oks!W\1t\8a.;NfcfK1%Yqf3<q@""-0c7[VuOfFmHRZrM?_C[+<3g*+CSLZA/cV!g2`FrU#Dq-P/_:$DL^6T%i?ro)q.,_J$I&?q(CnDeY=F4%2pur&>,/"d$]cZ5V`X4JWF`X`mWUhX[aAW"-\XpZ?W5rHpth2l\IoYr6t7cBV!4=_<!pj&VW668%127uV[f<)DF?=0[s-;?X3KD6+BR2S+Nb6bJM\]RadJY_i(,IQ`T0qs[m9LSt]@S&HUk-SacPkRK18OOF[C>@E1p;imTZA4S4[l;u%C\:k`[\TQ7^B)=-$=g&8^q&"e[[3"J+OcT,+$YfS'gLr).^bSf,\:97(j6-_0OXggn/<f1kW$`@af*hfHdWg^ld0T1TePT$i@-8i%$$$u=$UpgVXgniBpHn.N%5.u\4GLjpdY0^?V`]58b1#<1F\^g-FBh;ULf#O\/eu^NQ%bpM<GE!BZmM+HM(hR]7tL?ai+(@7OOb>f%&Z!8/ab(t*3W:8*>tP&if.*?Z[.W#;Ff0_kBk]tB)ubu>,D^nGju?3/_JhDeRpO[C#`Q*UPNd>e9go?L(FG+`$Igr:'S.b['i*.8%WXTQD$jSZ0I#FIP/kNaJMHi>ZeZOSLDKRkWmDRk#3'M\=T1Euqo5S5>3,5i9m":Z^R5hReTPf!0PKiS4%?%778dTm^U1KUP]/ESs%#9"E,WO,7+\@"(kgQq,,'?Nr%Cok,q44oK<<\+2D(#<BIoE#;OD9J>tLWY[B6$U)!dPnmV[sEp6j+XlLT:HX27YAEh%D%a!,T(MW%fnFs#1Ppd[%c@s0j;NW8V=,V!Fj\1YE5]D-L(gEZ9m>#31?<K0RS).LiIuCR)P[KH#9E%NYreQ0N)0JrV:6OrA?&=9Of$7=q6XY%%!;j*eP"DL@XXp?SV3VnkYiON<I:sGKnK;5!W%+"aeXWh9hC+gD;UJFnJ4Q&b<^<tCC.e`?/C(CQSr'VX.1%E/2C,_),4:Bse:.%#%^o^%ge7>n1?NQ/XO+`AIL_e3G0*XS;,a)1A<b/B[>#`%J-),BX7detKno%.0H:q)^s8CM:2VHMXc$)Y5W'$F]`Pe_*l0+(ha_7V3%-<e*cCbei;JOVCqr/eeS>%'<0.MfBDmPR34LH^MT9g5P]fMA<bViAC8Bacc^.'7Vh.n#i)CC,d=/K90ML@&ni3?eE28.E6Q(e8p4%mRWoE"^$\R%]=1cqrc5sR-NnS^4pQ'MA>3uI-<Oeh\>%OVsk^FdV/4-*PEUKqmPo#/qk6?,T,h!\jL;4[LctpTG)`UFRB<C4#=4J%l^&bNCg+_rN2,>NgjcX7f[UWSC/enPY+=fnBT:Ig\#G!O$l9/b*F.5t[j%TCl3K5Xs%#;k`pZf0cRX&lrH%b+>.:7;(X4fVZpk8,%/e>;rGHCmR(au),F8n)/2AiGH`*.A8rDR[!oRg!:07apDP.fKUer)D*e28:.oO-XD1J8so+^&6e1:W2>_PECl"Xij`G!k'MU<]ml%:&%EULTV?;Bc\_1bpD[3BibNMep_Vk_;\N9Ng69\Ei>ERg6(Z)/[NO.",f%FO`NuS55OJm8!+dW3lC^dk\MFdmOH)oM7I/3pS650%*_nr%,SSY4h>dASFa/$<&Lg>0Q/KE;?:NOaV)O&W,YU:8:]APlZc5pOm>kX,XYIoUHadW2fMJ(:O9u)"&W&pS,YE7N"&>'`DVl?@%L+7<WqOD=h_Z:DY%$QFP6//8n1k5Z]*B2A.[Z>o-;)LOR"9^S!N]Jtc"r"Tig-bJ>5Rei^BAHrT5gjC>_BtSQjHaO/#"o;uQ60V-%G_gDf/][^RMBL;(e-$?m$"-/ehg4fi,K/0eG)UOo2uRQ8i1aDurd$[TT@VMt&]3?<+3Um)dg(W!Yc?BTh*CgMWBjHM_)$q^F[8pI%'/URd14X]5OPU5kk[aCapQ+uA3k`r9IAj)*UZ%;HW`2M,U)Sb3>VSAB@7`A&*&et?+Z]k1Vo+YW[W%S=/lZI9in70jB[2Rj6#1&]%%bbYeD60).$hDje>7ig$)`&j]D46(0gI4T4*TSq2'+:Wc[u%->`,k<,dQ<g"bZ;*=[K"gKp0/cT['<Ij(^>;5g7;-,kN!)Hg/KqD%3m@sN4LSt!;+$(2h]@!9?jud5UZ`eTm4>IFc)0<gi]7u-H.6HSD@`h%")0RV[HX95Z'Zi^>!7_&h6u.;h&OHWp38i>jF3%%%Q#'F%gFh&57.`G7*01%l,8"PTL1;p1D7HP#)b1XP#.^sT$PsT4;VaJS:9@2^e5@$q%NKM)]1)Bt-\SH=1hCJm,7@LcpEgtQZKeY=9tDDK%4%tZ(j!`b-[3>`eoJpG?=j3B6a&t4lXH,e_Wk@nhV0=3$3brY`f?.U!e]0QL#/.1B:HBpAb!smZgIK[oUQL_mKQUco+7U67VM[.7%CT)!BFOkQ8/Cm_3Beos1L/nh"dNMi&(,?U^EoD=<VEMKcB[eaA%F&G18im8@UUIt*4m!lDK9q*cV"%hFqHu3(d[p:i9Fd5NV`3u8%8@9#RM,krg<M5>>&/F6Y?afr)-O<H`q;MQpgh^W[HWH>jZoKf?O6";GCk+_@`8H"9)t:oVQ_hU;9X64cS=nJ155CWWmGGRq\6.r?%*8:F_`o/QoZ$W(#.hBpj^[QlHq#8gN=FSRs^M=c)H`cj#GFqs.$DG.ke>G7Pm?P?CRhsK4o7fKE/u%l^ef2b5]j$=bI.J>19'i1`%k.043d67sa'?[5))eE_gS5hm'p"T'-U%a^6/Up9#P@Q6Yn]!L\cUTqgKj*cT;1(O;/KH*[G8hSF+"ZK-8T-%s/d$&WjEPOf)i8E=%TQ,GLH3:&U=Z#b'HLUbPonI(h9:3oE?.g1U:'<2XGONT$OF[b&'0K)RX*??4c_MU[rJ04MX#Nf1`jq-+PcH[<dWh;>HRjb>Vah!4%fh"A+gV&T(_hZ0ia&a-C4`KKfnbu/9/*s[keC'!2VD]JC?o8G-O\@%\%CMrb(Gr<(Hs?,qS"1g.ZL=AD0J.HVC&rKmM=:]H<C?q7%.c>%%ZaJ%2h1R-3kO#RZSR4%N9e_Rc`QM57rJfM=qH3-)SZVcESOS#_*q)d?`_X:l0c*JfqH;O&DDP;M?2WX9mmjSO(_:9EeAfh2%i.8q(a=B'1abqbS#+?B8>Rnu.^5S\RT9glipKj%J_%ERHp%TB.0<'_]):7),mk+6@%!:+u38(gPD\rR>hqRl"o"!3/OjRE$470th%$..2A`m)D8dMQZWrdb`@WA>8;RYqMr?2Vi]%cTPZ,G:S%hQE7Jh%C@p'f2L'O,p>Ba7mSp'n<B?daaft]pKY^Xm1'o-Ne4%DsPt2%5/)l%@\AN"h^XH%1opI4IP0Mc":+'j2=[3(7^"&V5Y&4,;kP1=lBL&V:r-mt[`:$=rluAEBdL:ZPFA$Z!M+%cMP:FlXc&L0p4WPI%?jnk(\.A!!Y"oLXY)BEX.8[B(iph<AA?Mm@?S[i#2Z\6^jM^$-PqgYNk2'-EqRjg54[)"X<R3H[AdGPV7D)KC<@^l&U5!C5"-`,)%n-"7GF[/+(aa1)BVnAH>l%.Cr:S23kpCY/XVWhVJqHs^gnPJ<3rUViM$8eWLlf%[k;nm6`%"Y#CUm`aZj64f;C]r8J6XV!'gh$Fs%Ai/,]qJlG0/rKO46_IM9h*Y,6QRAc5<t#f-b.5&HQFRt&-#3pr*ne'g1kRlE5]:!&-:U7_9Eq^[I]5=_61En@G8o3gRK0ICD@\M_%Os/2-nC7mN$Mn=_Y$^KroqDc>V\Jm\H4:_o4h^94kBs19*DckBK7/$UCRQGl..-mrb^c:(YEaFe(oV](YMW(#%m<+O\W4_.OUW2l%><JQgRSYnEM%cPaok@F,Bl`6:]YjitYR2(1+^iXir')j"])r1XDlhPI\`%s=#5Xl"l@A`f+4oC):n`-[+)8d4"]m^47+)^`7cm.u%BnU5idT!u]Q-*0m!8[BN_A])hcg=IuQ:^Vk>j3(-"XpZ)PX9_bdmjBVRg5DQXmb)tC'a$c<sR5*'[JsSTXjZmDPgdY]ui:B@1_)i%lZuip@)T3TT0o^:OJ1AVYtp'fh^dalD^J7m>MaV&5>n+g[9+W'QmSGiN8IA5`eYI,\gC48F]$gTX,s5_[>ZEU_]DlDL^X"R]RYLa%kNWl\$+$N5Y2206R6<-A-f3Sd=ad(.(%//OG[^<Qa^(4HV^>1]_qa@uL0&f'_q8I`]/hqAS%YBRY.[%sj/9LqDERNfjekR'\]3H1%HhYU&4ej<b[<D-Rff+7]kAE5b"gb,)ghj&hU)9ALhV]G5da)N$^UWI=LS2c<V_n/Goc@/+l7hprj^,*6ib!*NE6V?<C\"hmk+fcQ%UsW,"Z'M$.^'Z57Dng/Y`N9s(m-,gGI(k&?o!CR@:VVUd.E4CLrr25.bP5fBAT5&`4+/f3.SLc;mD'=BW;O`#n^k,b'.*m$[!%NY%ch4S>R.e2)M5)`aVhr2fBNOsg2gU?9(3g>Vmdr0"kG:`=6M6Z9,Cel+<#eY.M=esZNI6\#<dBjcVQSTs][-I;^4Y'[]-L_MVsgm3%=am=97aZFM==QepV,B$k*'u;bNi6IUlbR8o"<IYj,JK/k*VG8qF$8eOZ?e`YOr8'\+7a<(h&RbGhffg-FX,JnHOCr+>d#8o-eH]N%lg_Qj^"8':BBSW7&_8M[,dLg1^0U2("j6sAgu"M%>o,RW;kTY*<BSmsI24@hN6f'_/Mj''(-np_/-E8c[C)\07B8YpKdI/Z\.6?3%]?g<`"^:;-d(A^YJL3!.<M8C*.j*=*I4\PpD'hN12i2p;-Y&g+qaXSX@#^(m_/uj4G;'1-^-fpLW2'J@]YDROdcpRu3DcqN9[O7A%8CIhmk0!Sm\Q.J,Kk9cK0:C+,%bpC7g*(o"CmfOJ46eO4BTRC*=pXec2EjMGQc:ZKiXC+tgQ*YKqHFb)D#Y++65NV_p]E^-c%hQ+%O0#B8a+m,fg[[3YJ1`IAk[D3122'q>/Ur&]MC&=QPk=e@%p7+]eps%eS113^KAS*"p6[1Q#\'u`h*<'kI.E?L*Fj$R@W\R=A!sM_%:TDW\R/uJ$5(J66L%=2d+i+Ynq/sMH1]p-s,n0oYbSOc];V;:>&4,`*LUnY6r]VBfd`?B(BJbu.q'"d^2[Tt&Pg<<nb>C5DUuNQf%r3/t735:4"IXVQ4nE[r'"d,'u@^gg2=ca,bpd<:'Yg"g7Q*SIXaE"qB4!>Vm.e,5lA6F!iG"V*V-!QIXomX7jA[*-k;\o,QYMV!c%Gnod;7&m>H9?_I[,_H`AQkqr"#1;D"kd_4b1]Wcn>DXC]g7qr5$;@5;FJ0+G,C0DqQn")8G9<FA\8lIL=LR631@C+09E9:%V]2h-%fJ_b^iqO?aD4a%q0/GHuLY6WsC//M3\+6<0m`66ceOJG<<b*iX`tk).Z#"ohE73hEG/4J6P`09GX!?WD&uKufV6e]0b>aK>T`oP7%42`u#[597*Y@B?L.$RCg5/Y\&-LNrOiAuEUlnJt,]a6pkq9EBL+p=PKA_o@PbN<U[fm5#S74K0mbFup-;0\ZIO0+b4l@!sI$)9XP%1-_lTe8uHYqW/m*isM4>rKbO<Q_KNf"FG<0A;+/<8`Bt.M!D[jTY<3lCK]t&oUo@C1#t^s7;u`mWp<m>93&Z/U9!VMfrf7kb-s:<%CWfgU$L`IW]lqKNHh0<9P#-PI*gu7bANW^]]'o!?l&aDk;qDO.fmEt<2_>Js%B&Ls1hLUQ3TeX_Q'5CrCSS&:%HG%+0BpL,\/8p?%hjIN=/29`'qX<0'G:UOtR8p^-`nke9LQu:A-dg^D;N>OlEL:J>8*@Ah`OhJYdag,kbsr5DH(r8o>mY!E?%^t$RKN08j"n(Xd"K-b%=2L4^DX">E]5a&;VV$`DmMsi<E233Lp=OBDp??QA>=o/_c)>,b_/(a$6:'QHX.^pDEUL5J#9nNSA10?6^sPCMUOgYBQ8U_-@=,\#%R/9`s(nHPQjsNXpcGDBU>FK;_)j??\7RX]]e:9Fqcds>'!j.?$!%'u@iH[3JRbKMcikp^@^(0PS%QYkr9r%q%C:^[W!'iAqRNJ\+%!.5e*#lmVJhfO=rd'amM*AH"sL^qXF"V[mnZ/kZXjXH]@/:NGV+KA4)L;ZkN5"!B2`$\&=:\Etm'scna?&$F@al4)W_@5j/=3`$`%bMlA],RoD#O&Q<2;/6iKgGZVWhor4+gIFfCBS=<kd/$6JI\)IZ/5S)t!X3`Z')RbARMrqX1c</I7;$%lr_\(Ck3Bm5G_;!9`](4g%gp1pl,6[+?W1+@SZZ%]D]hYtrqoii\IK!oWQ08UoI/kij]3(\3'PKUT/U#@u22iqkI,kis,)n=:9X2T:B1g5=YC-n4M+#o+hD[6f%8&n9Cbg:$2\(Yjb:+bF7]c,BuKZE7B&WVmZMJt;!ftZAO306a5F?Vb:.mIX4a)NpSRH.\VhK(Fqm7Bj:FqVt*J7G.Ye*%TLLs[Y4%6NKFe*SqHrX]Zn8BPgmV4_/$F&kcpX_;<gV:/R\!9'A@OH+;U_$[[(h,4J7n:K/9]CMi6SYltH)fuI<VU9+Wk"mTnik$r':0b*SB%-<nnJXBNF.Pi=uh=nEA4Q?.!u+cgOfrIh;"nMon`i\'r.eU*83a.5YckY)p2%g5jY;jEYm=6^jEOuj)N/$6D!'#o_:*N0noQc5h_%fcHcB&HN.O%!SEsbYO3d;^bf2]5?W?,Qg)aL=<AmO_DtM>d$Jgh$f8gRauh./C@:,DBt[kBC8AXB.K'WPOJ8RGTSj'D'Y5ghOd%2%i,UZmJ&2(COWjFn0bb\sp0M`'0iPPFp,NQK;&Wn\!C_pk/Qp.=8B,Nf.R5jLML<cD3Sa^":JcP>$[q2K+m_-q9Ba4NfZ"i=\'48X%*!f^:?Q=pU)f)M2>0-"&?D4\O:I!cY3]^VO]D(TPSRL'ULRN%4JdIE&5OM6m_d7FH,7F6UmneA$oOE)/cH7Ean368VA[1N;Uird^%<>SOnelo9WXMhif2:@1r4[/A?gde]8Ln[1JMqRho?$Uh@CVt@F4h1nOelk:@M&&JW3&+b,8$dd\7(Aim!d0q_:>-6I?5o=b=Mutd%lrG'Wq]DEYKfOW^[E"T^L1h]j;sU2WT)"!qVXr.0H.+(eTMf>loA)@d/?C1!9tCD_[[6ne\@Xc0k&#aWeeT)q/a*_j;)2=u)s<fm%M."'HKs(*2.gO,ZF@1(8&K\uM8LWHO7s%M[grTm"Gd=;X]!l_.S=Ej5q"n`8T;I0Q%4WAP=",%peS/7ObXT"EqSddT#!,tQL^c%]%^V8gL`!BMIUuq0KGmp!\B#<nQ'<B$[/4D8)$'p3i1,YaFT2fHtE*Q(Q)NqG>#39ZfZd3CTVU[59FCl7B]6Wli?KE+@lO5h8D`'Os%eerQNheI2qX>B)0SLQ/2TsN%;dq/t?SjR.]6&55H,rp(u)0BrQJd^_f=_H*th&WQ;TsN%;S')RP0Sdq7K20O:>;CuZ3eNI_`0\W?%PKDK'K?cSGi\$#33eNHP-X.W_[RbbO5O+t)")jb;oOI.k3#IhD]qRgG*S`gr3_Bq4L7$n`Mq1CA*6E[]COKENi..RnDe%PP=`X,1%6U%e&aL!puFBLMjUI?6(iu+3,+rSVPH+\E;1@SXIB6M5XG^a\i*5h[MPB9R_kC>BPc>m!/RlPAA`+D3e7BS32A<Sd(pQ=j+k+!%M%9?$NOM"]o69`ik5WP`Ro'L_E[<L*q1l_^P*[$IW>Co6p5iA@]TH4gjRh<#6#\-rd4WZ/2!Efj[!G&n;co%5>%RG7WL2]Q-RYVTa;%(hCo(Z#W2CNm7.$n@<Q9cEp*Gno)BAB1,jWMVZA72dp==]d?MCgt<`*W2>1lPR^Sb7907713mls*b(4_FdU,2Ul%V!&1lYA2G@!P%`)Lj@`.C'OSZ7BUZcrR#kOD:6bR)=8HnR:F1[pFr^l3(_/[Bu^1[sOZP"_'I*2aR8#^k1f%/ee46&MQ8qUqKlGFlk<F1$JJH$m1/%k/,&e.J^t1_8ZXih&,RIZ[3I*3jZr;EJH:?h2;FjAq&Uood&S@@8%X8,o96iNn/^09Pno1!cN##f'JTDK1>ZE9\e&S?d>GT[K@1o%_dkr?mcJAsqkN;rg#LT::$9'6\o5dJe93b9J4UA-^:D4kMu877\Jdn>B@Tb#S1<]LL$!PJ/:8Mf'K96>eKDah/'W']_2LX$VBe>a%DMAWOb695WE&o.pfXU>t^V;n^B>m&15,Ksf9N+PQWmau#_BqFk11Nj*Fj)Y9lq@i.p=RujH]C%i`t4iN<eDc*E6$l>O]+AFKm.Va%?kp5(F>%hM)7(JpNGN[&Oe+2MLLeEK-<eUp:TblsVPhn.[(+*EUlEI^i<rJiGBZ;EdOHFrr?GT9As$#,n]dSRdoAd?e!Qi`E3up,%9`Jc0-]$.!&q4VGfAe7gD:s^Rc5&O2/U`?ada7!NPf%+/g?.QM*0F)Cn;s:*,!Esj3="M4Q^hPTac9+f`9*'@dBV8)2EWqd`)o3H%Iu<&I_W9!Z:3epD1ueDal#$#ON2rVsZ%J7H*X?CmJYgi9Y^Wje3QubTS^kD^C:9dP?JQ5SOKun3H$)lBSCluS)5iS[1PP3,Ld6!O%q'B%\goI\3F[u+dN83"QUn[<oLquX0)>Pq0Q`JDe1Q1k.2BU6'rF8L__pPE72C!)o)Df]pF*U)p_0ic'F+$"mDUnQ%94\Jl5%R9'%">rp5>"LoJP)l]dLf69G7JUm^%PsF`\*A?#_cm1CSe(!=b_TIp5+LIG1Y^K[h@,arX9\D6Zca/+HmTJKAhH2&[\\U4Of1)-*?>ro%dt<?I-^T9ajsjXu4pbr\cePoDmWWnq5?d5qdEt4N`@C^=pR?;<i,)7P>MfHtSPC;;9[AHYVgM=eL6\["2$2%s<jeM&>);:nn9oZO%cBPjYVk"o(hYqN53>sniH8Kp%_I%Dbo'e6UcAslN&_bKED?IoW3+kTWmhPT'4<*,oq9n^"]#">)aUVqlHZKL71O$fsh/-*Q;/,BT%4oNTq@>+(X>\_k#2.Rh89U;#T\#[_D]j52=lKp&V;P/D=P**nj7oke8MY^IA7On&9MMtNuB,);`OMBrE)JJ0t2,-aN(rYF^<7cna%OEaTi:kd=;YD*LG;W/HQju-Ga74OgB_4&:I=-<p2@VfV4Y&gR]0&r7$N&f0-ZL]SJP7!*@`E^lp-l#L;.QGL+>p^;HM2sYYG),^f%KjeY8,J:QV^=OHgE1L(Ng1,2*$SQn$)IVpPE;N-I;03@7L<cY+'Y,G-k$EPZn:I,;Y``rle\N#]ea:!lb$u2:%oJ!h?!+'2-Eg0g%f=/ZXX@dS6<Y)4P?Gq&7(r0WsL\i__dnmp['$?s#Tn%C:)a*!9^#AP$/X-d\K_")'*hPB9<Cjs`%;8o87ZNs0/p?u[QIXC>n=(FR%NAtX9h>A&MiYjOH=,3-e4.C&)%b]j@g13/BgZHJa8[;RYaXY2G?$qKr!l\`Y9n9*!1hfh`%(d>!%(iMuBati7C+DRB\QHGE1OVF#%B8[J.o7IDTW%Qa48kkcT`V'!9DM'1?'X2qbA@E)p'IY=mf;paoI,D2u2`%*Y$_UKPB*o@<nU2BoR*7FqiI0EN?(9mfHG`c>4l"IT%i6eP+_aa+qn6\!gDq<=<^2^ck%EZ1%gh_pXTC$nEoJiF"^Y+t]b^%JFV2U>h%K!CkAb2%dS1=C\[lOo*Z.2p"Lh+1`(K"Ht[:a"a%G+.<p@"Oa-FfZ(SYA2W!amAY-A';;MMmHA;k5:V"JWrSQaVbQ0j#G+q?V/OW'X"^S^)B,ue@baj4r6ZKm%\NX(Qibm5Gde;?*P!>%o.rKKY!&ED&F$WG7eB&'N[d#e+6S#Bou*&*AP(qBXpYr:1PkZUR8)j,%^SheS^qm1\TAaKXX'C]BPJS96(Oi>cBqs>RSC85k+e\f%3hoe>UQJWB9kSQg99"q7.\"`B%3\AVe%*lIMeCN'QP4E(S4'L8A^_O9=hoAiD)Rq^/tKu7ScuIbN!r(KZTZKCe$4mH/tM+;$4CFo%)&YBS)IIJBS^EO$rN_l.3hoq@SY`]FCcWg$</pOQ.\"^srFgnaeRd2IjjG`n_eY]8B@N3!r(<=/F>at?;)XtB0&9DB1X)_;Nj30$%l&<&JoTb?$c_b26TV5ifACmiel&9ZILdk]^2P%r-p_@Gj)1/QfcDED7#\`;LB%%X`QW7\I)'K)Znqsd<N0%If_kD6?NjIu/9N#^j%53)btklBimH3]P](L'`\S]1][j5&`>n]>M5m<g`\@pQ13?6'oHV00%pH?D^L8U!TtnRPkWef7KP8P#cfB</h=Oaq-d=siRgae5_.%eX6ohXLaon&R*dR9%[A.%e4(6I9%_(/-_AC5\)ADO=Xi"S([7teg!6(HURJgO.8W#E1+>7:I@,lF%>[uYr9^j/T[hl/n\)GcILF'%b1mlaYI$ru>J]^[L5#'N:Il;N26AWDRAT&Rbai`A;-2u,'JWA+gc;'=-`7NXbM8NK^,an06@*(X_45B1\N4&*T#Ko<77WThe5h[S%F6r*A`]SZaZ^u7$?<:bM:%B<Qq@h+pI\jA=3gXK/NH?K-d$Z!8E*g$"4tFn2+Ypi.g(>VmXK^fYGEa6ac^CN6gD>Lhr:5\MfX=K+%7#.>)L;GkKW_Pq?m/Nnr%,lOfk0rE.WZ*+G?P`%L.]6>7`T+;ha)u6#UL)kZ^h#NfN5d?2?-*e(Enh'aF.6:4S/XCZXSn=[F,@;3%P0I<rBl%YS<^>lmOY,W>mH[CPlH^s4lRl+8?4O&6BisiSndP39r0As_B6f)Th@hhBA^I%h=Y)AjH?Br2Y?+lCnChS#K/N,T$l:Ho%bnAak465o`D,0#<X:lHkm8fF"QG4_roWrAAC/U;ATX:$E,rnV0?l6gV,(oh(0=&:RfarSp-BZ,,!`*RdXWXkV0qm]c#j6#;;rQ#%%h<K\Egs'Co0$f7V(%)j?PijNgaJr.p.e5U;qHM5\mDhMH4%HRGV(:?Gf6c'!\>-TZ/e;,fA3[2(+o$2\S.V*E[J[V2>ZethJTW\A%XQA'#Y*':IQ8Vg-q.P+XNe;\]E'MN7ZcF.![jt%O]eqt:V"_jpqm"=_2bIOg1/i;Vo#q4'mZX%-*hWFN%4"SP>:VC_8PIC6AU^II%)Nu$gn#V_?R.E",d[1Tm2q-bok&.g$\tI>4*?5l;Pf0rBp[*be*>IJDZhE3\q3B4pJk8Y)p_Zt+Zqb+O@2P^^.GhO2<5F!CleC3T%/,i9u$r(YWEgG`h]^*ec(7#O9npM<t)S$Pfi1-@;4n^d:=h.&PPnH9hN$pa/EIF<9\=1R6%9&-F#u<U`P]t`$IWpq]J)2-D4L;,%%q]&Zo,_m)M6q7^9K?Ct)jN51KT"G:#a`o@12rtaeU[1/)p0GLq")k+Y4nA@jZ*/heqkEV,G#MPV/`#pW^GMp(isG/nZi$do9hVPq%\L\]3d+2X[1<kRncX*C/8U-q7iPVnZSB".bYaJSE9ADa6Q+?eO9n@?Eqrsr3`cQ@UpnMHU$u!\]%U8Id!NMrm+cPA2a,NlOab\Ch%3<-><=(\JULC9Isi?@j]#o^ph:W(@rB"<DjNQmBqn7%]:B:*S8A>P-HK[F&d/B@8GN@E4kae/Ph9>ZU%lb;W4nESc*5f])S][mjr%pY\&PV--_G/,T5=Dfm3)V2%fQf@$nZbH*q4D3ruGpjQO!GA"?9PFjVda_DGdA=a,hUQ\/Xr-b.$KXloFZ+3+t4==)%8SbFHlio`j%1KOf//IH5M[RHAkP=^GGU+2brd43Tgl1aqq/rs&$B3U5:Y0p45=isc6:tT`ia$,[Y=E]"tb&lm(0337A[)sRC/SO3M/X2N4F$ar>%RS</oJBgj6Bt9gB`80ZDWt[Ln;d(67RmFSGc,L/`GLI-4b4_?k_]^aST=Ls>np'<C`bNJX_.Aue("4#+]:(16"g=]OgAL^(WO2oq%3#ejfFQ:nDR"ZR=b"?i&mNYJeeCYOsK,rh1PMPT7XDRF6``[i8"uPkA7G6'GV07Z7S1eL;[8c;VMK<s_%jN[6LIV(7]q%+@a,\H9%8XPgR.NeI<^93YR$h&C/9[Lmm=1\!hAl0:r/DXn4Y!R;^0jRc?4#><OQ-fgRh:a*4O'K)ugfu1hl0L='ROO7q!H%6bE0Xr+k2r6;%iuu8(IqR$p3H/AcCPMIqGZ:<f@r>3G[IW0<Q.+5\l;VUn)EV9?Z$q1PWQlL58orjWD&&VPY0?I!Teec;`=9h'F*X:"B"E&o#f^]H%l+"Qs77,^5]!//V(m^rJb@CW7blP2aLVu(Yd*@k64.Ydl$d`St+I2k_`fltT!5cJ&i`Ue,Er_b20f-_(di:VakM9g6D6j55jo@Hb%Z8"e'di:VOamUVcctNu_4!3-lpWY`(nEek=ZH0'ub%G"BD,j%#>\%j.j:YXQ$kcQZGj&l#U3oEFfiDIEcV0A$[O@cg2F1gf7JVbi%GPEg-jg1tQ[CW)[VY)I+.a"Y0Ou1]Y'f7:)aE[&LKB9[nlj2dTqCQqNe6H:o7F&c\YNoi`+<7NQDQ*Q^$LWXh:tO%03MdJ?os:gd%kPT3GlahP*mtP#GY+N9leosJ5=4bdpa<ElP79r,nKAH#"d/nIh$o5@1]>Zb,jOD"IlhXbVBC`.&Y+PC:!+W(.laN;i+Eho+X=$ED%fWoYuP_;-9FBQ*KQ*-$p0HT,!:?"V)8&iY@Xl_OuiE\`T5D/Pd9NAjhZI57tL$`fOE`Uf<g=92!5qc<k:VjL,.Hk@.qROdp?aQu.%5qaBCC$E@7T62gLT")DDI[1p&,U7F8FoA8<BjB2L`048d-"^K6:Uu6kagurP>ERjWY+i(kompnqQ-7ePZT<&R1P@p*<Rg]JT!QI_%hLf?=f?\c<b90l.Tt5^L6hK*4I`p7$F'^-E\fTbW[s5torDljXcd%>jP0Ms]Y+PA&0mhVtRC[i:Gn4Xi57Ni'lM>5IE3?4uU021g%M:"@2`"d>o:tO%]#--5'os;AAfi:2LKkkhslL?IPL5&_,(9GR>d[)l)]j\XXT;tk;o2Yb5,?HL9e?Q+?B:8SZU9<BGZI5$qEu5g"%Wiht:<PO6*D)/'U[n*UHI9f(d?>q`:(%q@gN?Caapm+[0-T?]H/Fmc9jZFD^olG1u\lE$#-F:i;Y%8?!G>m,>fF2/qfIH1_=ecV5%rX.reW>IF3gC<S)F-?,O=4bc0ges%ba*%@Ir6!R>os</S/l*"HfCcI.$s>U!9O0ku_f1&PEO!*(AuHtTrChE)>h8SSY3JN!jmmQm%XNq!<ACnDqlXu54a:tl996+(bc[#[`T3]'B>sE,d0UKbh?sPu1jWK\67NE1WC9d.LlNQlQ9M&plrAkbD"a315?KWllg%sX?/o=Il%*ALH%=L,(tMpj)RCp+.jKa'(@E12<?!nCHrP[o0iJ=-7<;_!dIq2=Z,Cq=uSnJ1iCmA7%X?SCG/OAAja>r>eqYO<pIjb5s]GPe61%l&G+Z'gb"XT581bkMe[IebpP0Q-*0eX*d?VS9TEfi5B'5c;i2s&[$S-g>qPtpCH\n-[d1t?(T!@gsoj-L:a%)^2l6g[)_"8m*3&p%aGlg=#[[hHkI:+?mcEQuSSMQMVqc(cDOYu9nXkl_j%=,MGoH+0BDg\"4DSR,PO7uX(^(XRaR%]BF?;A@M:YM/mftet%j0ZdQLCu]%RG$g>I>uG8dFRKiDgabf48!Oag:kHmG3eM^l`Rl>UoAn$=a6/jIDniGdbY>jeWl3MPWJ$?`__pCRRjWp/i^Uf14b,,\i3O":G=(;%jZ8"(U'\,G$&"8j&,3[4&f?[*,9]0JO3`'RM83D12nj^UM8eL!-bd'N\E_a]J$SU-H@sFAY7*)a;[Mi&:*7$6f^qL*i]1)N8N1XO%5;%++KseW3+rdY,[A>$'Ip\2E1/h,Z%uZ5-Q8c$pRd`dUgGb46>P@j)S)m>f)\*i-^pchjd/!Me,i5-0K7.[6&FXk]-[.Fdn7MjJ%[.TWFBc>U?gCcgq2`LP?M;Kb)>;712eNDK`HcLAN`/8Ms_>J=6ikli[H1]_5%sI9Lf_9\+^E)4Up88nnO2gZZ&;kr4Y:h>\hP^TK%\^'s:T+HAYaWGU'#^hThO21YcK\Q`o!n0d=q^9S+P)!;95HIWfa1&P(8.&%snj)g2JGOee6%1K*4D8Stp?7-,"EC:/816Z,n'ad^%1%bRQ]fleq_&9F=GX2`"lZ'2p?;UT\Kj63`nH/mt5@S#%&#0Efi?2$0:Ee667R23iI*L#j$QaeVmpCFha2W\aG8$I%kW:L-9nLI+%QASe1J0<(ogk9tX$)BAa[#MC/7$b_mnY2)r\D&-/S64f+*]pq1Nha(e&Ge>/2rJBU!JpH[fR5oW!.C\??8J:&l2b=p*,FqZjZWn'%fA^Zon\p;X,#YIckH*]9]iV4^lWG\mjW9EXP@NWJH_aOSpD>m4S7aWXnR,S4.N`ipdZeEGG<Da0R'R>RLOCt>:\<6K%u!9P\KR0g%I4M!b]u?/dgK=YU'LkVf&(&A_Qq[3lG9$W`57F4"*dM5d`nk$TI.gB%C\?81RuZRE3sj\r]X6Q4\AnkUi993,9Rcm9Oe[E>W7:Nq%oOg<?O64%fB-+^1j%V@sB&N2]GWklma`I:GVm'E_(GkU*Nq<s/07B_9ZXPSoO^UR6H#_EQMO."-rBWc"1g7r=VKYml?eR9?9OBcn%argE+?S.lKeIg;S83pUUq+\U:F/)<%Do?$+^QZBgXIk<P-bc\5:<':RbWJl*k4_>[7S-H*hM3Qrg35cpS_G%iM99]*k6C20?oaHG%-?`s[Hk;d+p<fY!U[kM:3(&c#p;QC\7Aod*["6]^l`.[R[G$oeXlN>d?6OuD+u3Bg7fgh$ZjDnRLr#i3WW9$@:D7so$WV*4C4M[!%oJ)=b29Gac*YA1Q2aSV85n"+nGaXZ4?dA[=`SWraB:FNmHpG-jbuigo7).0^`)8qMo$Ph%I"+/$,1-_i#<^q^gRiGPjZ%eD!](!%%c;$Yd+,?']5N@0s_\&3)0Le9i=`<3:hYKLu__5_\.Z.^gPY^2d9!@-+:43(R<2;i6(P'Ib!M3"1lst?m]BZdGo[(VrHM8-:,p<H-%=$I<pp``<oei"%JjeLWTL\a$kLl>jIF7i^u/\$'6O0S.aUU.\8Z!caIQ\Y+JDC!OuI&R>*&te.#rk5\cI,$7cN6-qF8,[_t"9Gsn%3.M:QT7Q:(NP/`d,h#EnQ2&7g@J$$,873g)?47k4`pkW6G80@DY:JD5htI[[$K`N;Ti5![eAHskA#C9&1if#'*Akdg-?o+\81IXW%GV/9(\%9$m?`i3#@17Fts3\"WJc,l[r-,9ajLtF`R<GsbY5Ca@!7#]kG3$)ATC8J%eDk/]aR<RJ0#+!dcXP^L@L!O%G.FBW4ll&V%bjQXb_Ql6Ck;UZuN<t0iW$ml@,"H=`R2sdQ)ED.`Oc2>0H+J6`6ph#Pikd^-CiH6f_<0W=XqA=$=BZ/E1`(qRk/4aII(XEFFbV'[%I@YU7?5WG1*C0<XT!]/@:3oRoOJCL7_7"ARE?T]K69_E(npEO4>ui,$D7SAcSqh]^5a8qS>!ng&qL&9,VQhN^!!e;^K3T-Yk!S$8%O[a%A1'EBqLaB"*[>(*33pG^fjDQ.,Sf<G:Qo"R2><^j7(:drSZ%)t)3@tA3SUs\PLa3b2Z)bg'6P5'M)m@b$h;mEFLn6`erA_O!%>A;/5qn;k01eob!or[P]*NehdNr.Q/JjVk_,-eO];AU9\Cg!Pq5WM"=K90CkeMA^\DB39T\I7eF,F*g\W%*[8\V&c*0jjn<lLP&s%DiTh-/N3OY\e*N,gHjOn"HAA]+lZIH`(oo:75WJO+r4TXQTUeV]')49O@>L?\(G`ON+J>;`kRKSG7`-M,9rGrV[$;:gbR#BOAYo8%/`R-7kKYhRGCX]lCB0H&"ll81(B-&R'^6*(DK6MQ22sA<nNr><+N&.D+C_NZODt1cp6]p3JctjapB8UC8Hi83Db2)`Gq&6$0-=b(%a;ui^ARWY/oNE\V6=U@Sbq)0De?).rBX-A#>3'Gs+MJRMHT&8uQ[u6.K%;MoA[d[83P)O8aRd"Mk2]N&4^)gMq#3!,p_L^a`)>2K%a>1@r1HdljOP`)CX[qF%jprS;PhpBc3Q]%d?YWthV\%qCENInSgfGZ2UG5i3'*rXW!#UOt)KRh&AKWK[-A6Zo]Ta4=KpNf'OPVNr%a%kKH@msKk].p]N00G-nSa`.2Fi0`phl7AdA)3+W^(2C+[kDnT8<%^ZH#qR@A='l*GeLdZN`P]Nh^474L""ijpKmm(EO.c#M_MA$%pD"M54,$q^Y62T;X1H6b0BR$?36\DEgr5:p6^3)Eo@</(Ks*Vp-c"c3LV7HDe/f"\mWS-72)7eud@+,i6l5P6L@!6\EG,2?10im_%KPe(P,$Ua3HG,OTd+T)YH&AfrLG![ip`QIA:P:G)f]J9X6'PI5I#-?Y1sh>*p4u5I8BU,o]OI!+>o8.c&fNmILP$>=fQKMi(AKeY%ZV^&p7AQcPGOV-]'XY2L0/I5D"jOW17+f<s1B!6>Y41fm14.K4(>g=oHXE36;Uk)o`aW<VR0sX+TUmG48cM@qp:XHO].9e8V#jd*%["9^0V%$lML7tm&5Rs^-U*u..c0%o?W$+%blkn,XO'qGLU;jZj6"CeumadJ*E)m_U%i<J*6Cs6DljLo\Jm9t&^LG<pYJVCO[4%B1%$QcfC1s*#.7eI.51d/e9hX^moK,e*/OlOF5D3[18NK,#ET$QA$S@i1f^=f;IaX`YhR^G_H4*hQ-j@la]I(t'r4,&V")ojOK0tu+m%7)!D&Za2_8)I!i[m]IK3)gTUs&>_Ek+_4)"L+JKc?C%(m2.RH`0+,d[??^#L,*mi5`OD3>R2pFM/^X@^<tuf,_q09@70n"pU3pE_%hWWI][+B""2ir6E:ufJH9JWc'9Qh*9%,ODrn"*l06i3MVEQcF0)Y$b1-u\6-1pm?>&n,DbAF?==Xj(-0kFJfQGH:YrcZVIcJ"8qZ%8MF.eZYpOGi\-XnL,KFmn0SKnKcJ>]D:*bkk;lhtpk"UX#`7B==id)-4Eo"FWaKQh*C/1G8Bb^`%2lS>'N$MFBSdt/I0Q:F0BVB]%YgQt4&#m[+ea:JQZ<N!_U"_;S4:A_LN>>j%=`$c\UiXkAPAHqY8faQH]>`dql,G1OR+iOFF6*i[Hs!p28f%a$=8Wh[.Nn%Db\e]t%lLskqlm!T)7MFf$AD[Wm<8bQCPf0Dj?:c3mK^6[RpjeFfPf2_H6*BeMP`(mNc,*KFjf)-nFHIr"n5G,Xb(or`6nJ*-U3tN?;=;jg%@$=ObdWJ%%3<cuKWJ%hnT,q@ulK39&,A"pQL!,nY1]:7aW)m0)m:bUTZi5fB<ZrlZ)?.hF)a9TrX$*>O<HS9ZU8&.`>G3$rmbWiG%kqdgnF7am3-gYZ\g%A0j[cQ%:'AfT6<aQ-][sUuafF6^P;X/7We4-TiJab76Mr0!`\N@n048H!=8sW6tfL"FThCLmVX4=oP_GrVq%@uYMicN*3]:qYs%(L$6\Bl(@$:"5'T>.3<4-]FnA?3iO@8&/2t`#n*:geN7sC3i_AMHaQnj_"DXk?qC2hi#`uD52(DZ!0^h88OUL%cR0Nr(FS)&m5!;`%EaJWF6D+)D1ld%/DPjPB!<<RR/$0=8>4g&gXf/)5+h1`l3g?,U8*OoraeE[.npjT4^JtPbKALGEld*>JD5rY%O)K5$1>OP.>1GYHUmLb,fQ@/':eQ,T89gFRM\Vq/OKE'IiQCpApTjBe+69K9S%C&tjH5(96(`CNRc>W6GjtK/cKkbRLNTGg2+VSC%8u:PAp>Dni9lEg4ak)4mN2u4&9WgD?[P26Ul$@_H'1RX5g;Jr'O'_"QS&*6&F%-e^afOIJoH9=]l,AV!M&XprU12,9W+-`eWQ!]Z%E&&5R>24ZqdGZ+dq,_LAkb`,hA#n1QR)\J>Cdi#tk):f`0"f7pI'kej/SqOt)b/"Wprn0P-Ya:b,.L9k"/cZ43%L%?<>E2U5s-G8%"2U_iNBC2niCnY?:>-e:I-=F<$tnfXa`2[W.-uq(+tqe<\!QhY#3SeO2@%M$8Z=66&F8g)Nn\K9g-B[!+Io3iN0&%!JPFe!jsK1U%nZ6a"/=)LAf>?(`QbRqCQo[R7iEnh%h%uh0RS<:IY!MF'2]+nGI9&RF"3;OU&SqUG7QS%>hE+,@E9447VTq@GR1joX)b*)45-j!t%3MG7;*pc";2TsL+f5^&'Dt)m+..dbB#8JIm0uMCip#PW\)NH=KA]RMbC,jp#Z735EKNS<4X3kD%9a><'<6aK-]t'q23F);q3W$XD%qY'^>9A"a9'DD]<H6^Bdo=HCD3A8K#k4RYlQ(#b&;QV-:[obQ+q,.L[*hS=3L`#$UAV7>j.f<bcHm+$s5e?$mO&Sb*+aV&Nc4PHb%]]#L1/]l<GSZhL4r]'KR?JdP8-h6>q!\NH.NoIgL?^;G:7dd9Ogj3#eY*qU&V`PlVqF^(]npN4eM7k,&(\^Z>/&]GU_sm\*^X*9?%UY1U'lg^B;(eL*ac15V$0clt9=bBgpfYdsKe(AsAI;?1j#4rj$6G'de$)Q/2FJ3't1RH/FMS0e$2RN>(1:@:"_biDVm'RsW+ffNa%BsJG4\WS9tbiM`_/]_0f^UR^U"dob#^'jXdKWU`9q;?e9Ko04f'r.9q\Ll[1(;_<aT[5ke'bMb\LQY/]n1_=WILrF'Kj*d7o\f[_%Zr7i,^RacYo/E*.7V>aNmft@_nS1::mlpC,.*fSL=GF49<YMD+?c;c"bpoW2r^,MAVn,bJfp*;3:YII?;;*uam$Xp)LL2KTnAJDj%\=-=.D1#$^W0a3&j<_>I7Cn4i'H^P1/+LB2_<Tf'oCs0;BRJ%=q&"fVfGT'Q?r$sjQPKBI*5=("9:tH]8S)i\+YdX"T9+HB8FePn%:#+#:ml)WON9,Z:O`c3mD>tgT<4KO=H>sXV`.*n"6#m_"ZSLf_?I+f+0W(;I+?$u]6*\dPI6"NIn6`,\O>udu9/gnjId;d<ATBf-%[V^Mnl[91$jY0;:n96.fFgr[ZlJI#9(Pks,/A-sbZ(crmbO4p!b6r5u>HVYujc_1oo"rk(jF;C4nZp?C^41([nZkN0lsF%C]E5SQ%n%ZF&me+aI$SV+c_86l7?5kkn^XPVR+`[aNN%r(:@RZ&U:L(65BEnI)k1[#L\m]><RVS;3]i#)oQJP4D789?WrcYtS=BG3bDWFV>%gI6Y[,2B<a3XD!/pFE6Q.ep@EERsEmhla0GpT)e.*<t3m_j[ceU/10.PLbpP>mGRtNIoSEf.Z_Z3IHh.&+8j.[q\m6Fs?IYSOX``%BfXC=?_ZUr3W'n$^RHYImWm66bCZ<4oEq/O<.?fXXF=hapc(d>I5cd?[%::7#jo"F:>eUCFa.l/_4>u&%qaVT_/6DFD[Y;5</qI`%pE-$T0G@HrZg3m;lE4fqlSA(3pN(TnPK,8tQ%;#AYX'oL]0=bMl4tG^(b5fN6R;C8,P*q,rcO2\$NZ7(%98C]17k(pGr2gAM"JAb%Sm3`nG[aN(HTY5'E/.<+gd;]`ORP5i^JQ9;GQnJNLX$8s!Z;H*K(R\0"_@W:O:^2XOK`*g)6sGgXt9oMOF\JGR3f+.!O@qJZemJ=%2P*,0QB<<6G_^AP;[N?H4,d/F$HC'^7hl1KTDrd"ie\jF7gB&ZK14\#pXP(a/3=+k]0$IE&Tg&<I%u^1(Elj"@F.;BmD.adC`3me%W&3MV5]k[n`,oM)fsU7F_)WVf>mEDP3P`8q6IS4[@)Ue:@nsQr**c<&W)d8M=U>`ORrkk^aJT=10bH/-_IO'k#M=b;7ie[#r8?B!%Qb-quT4u?=-S!phADXec#3Uk&$p*<04su`%i/Os+4%O4ebV`P,*g^scMZqXsRtLK26Z+@H"\k%4-Nmm8/!\+`i?]'L1F%u$cdJ0q%RDta.M!5`^`b\2aIN"_6.V0O)SAqj4-RP5/QrB$+`U1]B6`[tG;@8O=`qa.MdtP$-e.HA2FR)e+Nkq6aFCS-)Z@3M8,q2/gN#Rgr%+i,J7P<,d7`\&(uX:F`^l6:T(Z=\k<IslJ8iXOd-M^2,3H:a^fp:u,'p3gN@2=BIe`7"_SLYS\1Xfk7j\,'TkJ,<nJnb&k$^9eE@%8'I7homZ0Xe^UM-q,((;N'0Ai/^(V#W]/hpgFp%!iRm=?Y(H+r'4Xl3)f?-YjM@it-<)3bP7ZA2fMVS=@WL2TPcE%?DdW([RWmX.%i!QpNoYqXBd=1S&m@=R?mD.,K-=9Gjo;97c%\"tqY'RH#TKk.c9WBn&Z%hAp)Xk0FfnRo2N_UV_n*_uRbTSWtG]MI.DqsA<#V8nV%GluA,*7rn&ITN?JEgtVlggdUijE!)eUi_;C7hFO6C3r(`9;_f?K+SsJ4TIL..LTK4R1&!N-fW+If*geo_aOi?h<JDdICGakp`rGh%C:ig)./"+7G+Ep"pK@!KP'^V05l:mS1k%Q3q)VH-f(g,G&J@a02k$Gf]RA>i>N=Y%:l\50KKs(d_[Uk&I/#MSOD@&>X=^pp)=FfS%a(XSVVoa=h.,5`(^H3,Z_T*_T:8^K'n/+@m6tbPop8AneMXMmC_4T5b@'XQHEF3AU=K$I?GMlesL2mks>'N34<8tl!qik=sMFQ'm%(QBaC3^b1tYT-OQ%@;eRA/\tH>F2\S7V3/>ZT4*ro(q9;S<hLO$WkmRJneRFP3PPsf-1-QD95'Q_Pnmb=nJ4U5qI?/F>*0tWWCNU%iJd&.&2)0To'OMsLiqfnQj0<.E/=Nlp^UXR:\cX+5Vag00r0[T-45M]XZ6r!j-;G,U^.n&1^3%p3(gCog[mttZR?KT]\^hs$J/KD%K7b34AeX2*bO/p0Xg;#V&FZ:o82_'N#TL\;#>O!shj8%WQeX.L&^+]=/%7#VjiUpe]b)mh:/Kfn^Bm7k=F,@FgP6m5_JY;l:9&X(%=t9d%;WlJ?SqttW6bK;A1k"*3hnp:(7bMM.ju&@lj7_?c">G2GT#l6u<cq5^MAJ3!FH95p-sO<U605%3+C5=C7%o!jc!VE?(qX/5%X!>R8)W$N!jsh,+L#s2c],17=PilfonO;#<3g$0L3"Wu27,Y"/GMmcjHq-Rf'\C-T!tEem4/COj1K]9"=]Bcjp:,>H70Vi_oBhHD%&\\'t(dnpuE7%0NW9gteOUsQ;6.jI'5[^gQj+!k>q$VLQbi*nlA6IA&_6$In&UN8q=9);9pf]KUQOYIpjHI6K"r#rbG]k!F\-7c1%j%"/V1Z5LE=cKL#O8!)eSZG]?7:hb7b8N2R7G@ZdZGtp7%3h5#="\8N5#p<5=gS.<C0:Wt*`-S27b5L_aVoG[(J>_<[[W`pSB;`f%$C3S.ZGtLQTCB71E<hC,eT;)=pYj<)qCq<X71lI=n343))3e;bpY9[.WAG.Z=HHoW\QN7q[a>H@YO,Mb\MWUM\c[/#]Qu)ABrBc@%hgR,JU.%9'6K0_K-C;EWqn@WSqA9_g^:@0&dUTQYM6-6?p\Z!`f\QW`JpoPeA(@`5Hf9(4c-+]>]j-kZ.kt?I\$*$G+s\4ChsK@&%&5[$0A,5QE3E`-2BPCAZ1(:Y`mKp)+ms-OO:\Zs4\o9_c@s47M3B<5@]1-14Rb..=O,UDo=5n7)Y/jJ]Ch&SoV+tMK9-(t@nh'.G%T+puMa?Ag%C%$B\5$YZOi^sm*Hoi1nD7R]l.Ebk!WNY0!V@#cO-YW6o?nL>(egk4eK6NO=hFh2W>8?3lJsbb%PhkhgD+o+?f/mJI%%Dq.XH4WHLS$5&ehL_a\=5M2BHK*blCW0_[D<eG'"=nGK\=<cVj.dn1P0n-Kp#![L0S?HP8K:VJZ4amc7HL%Ek@+B34.NPO>1p\5%DXW*lMh'Cpe6IP=gHij!G#c84Eqd'R8lSdY4Y^u=YidhR"\Tt*d1e\q5\6ko-[k19IV^[IfsNMQ1j\K].\ejU[US(4FZI09L3aW@%AWskg'Uin/aiK`Ng90u0^ug_9J69>7X/@e9Z!Gh.e@JH%#lW))847$oQ^!("p&ja]`1$lQF;X?#IiSlIo6M1RMs,$f*3C`32%65+%L\Wg+Tm-'MUd'&a]+COc78e?E+ZrR!=bNm:';Sa6Y)Ie-b:240p_qpP`B/a/%54JIGoU/k<sGlbi'=g9.p<h3%?JgS#Sqe___ql,%D*77'2VOfu^hM.bnbAW.D&*Q6G^T3nS%*[C[T,+:QXV&DO^kV!PKl:,@hH*4D0Sd-2KFhC7G%gX4a1h*`EboWQs#uR_UpQ?o:[/A%(_:G[f0VNh$RJNAXN&f/:Z+'ogbONNhGIL?PUd2n$R3+1o-0QX0u;:Q-?mCcf"<?PlXFO&8Q00f*ga>HNU<2.`k(NT9`=]./TO1a%2Bis"lf'cE@1I$B8/Bb@:q&-RMn-e#Dbf8[qU9Mq]"T^pG5?KtBlok4eFoJ\.2mkeY.0Mlia/eeUKf-PQ-HXG/]c4FJl&h-^`g5p%N6'trkhZ-9"V-R.0,u?_.WFNZ8p18k**RD4E(HeV<Lam4SFc6D.tPUnCOL*_6S9^)[anH0UPiF1a,/3uDQYB4!lm81Z^APE!JM..%ff\=]i/iJF&4kn,E!Dnj';p'MG'*V7dTn1FPkRZoRH&FE;g28pcE]3_crfCm@!CK[;?2QF]t:+RH\fL^&_T#Bg>r%u:U#`UHA\th%Z)jq=-?R6:8<>mGj#;^/IQ$>oHeO:(%b!kaQjYchZ>e"J$.KLtLq*:$L3C,&]/Lc;X'LiLqQ<nU8pCe7$6W",En#D!7''.9)E212%$cs<8Kj6O"Ft7PLQ4Mn*kt$pUF_k;3N?cs_$ft,U"DS<I3)Z3fTK&:YcBY\YUnD*k2I>0bDjWR`&0\<$V(<XdPQOFuA+*$P)TPK2%;@$dYe(g(n.qS!:!Qdd;N`62uFuR,MN5sI!2^&M5QYp!<;@>H^)RYL(R'DN-Wf*Ok/]l83=qeeWi7s(mWka2?)`/bZ9&QY[@D4:U%N+*N'f@ASUG;.7HHtnO2*>7Ub7Z?/t,u8Wp9"W+[82$j`@'Ug:UG#U3BNIR-W<J#)=r4!\pPEKaG%8Zoi0`t8R0AM<kHXa@78VVR%psVnVfQ+#qcJYS9[VAU(0ZXVK&uP5!J.U1!O:!-V!(`<a,'bn"[BgL5FoaR\)c7A4bijK5^qDJGJVrRK5XpoU-l#e@Qm*KHnJhNB%\;os].YkpOgem+9Lnk"@BTkQM7S$H(PZH]nS<k;?a+rME`&W1PnMn;X<o+?m?Bt9`SHjUZ_StQLjE)=cOP\fE@F&;qku7'*eB&eo%m9u!BLMRJ^dic)(8E`j_X0]k__5;gPDqE8EjCB[Krg2TZ`qmB[Ml..$65YVAGaIU#<<+RgG5cu7:H\0Rm%3u)e-JKLdd;>"A5E.%%jZl'To+UfGGT1E<X`+bdS\/2VAN*hSFmn;+jN4mH=$JnBTXn;IS>I:`IcNnjM**iLc,0!]OAnU)5$pt5F%?o8Mt*q$djeOW7KVjj%j?V,9!j3)n*-1LZDb>/Z*4T.E`KkVQk"MCDnO;VQ1$?PX'\P3]Zgdqk/WgS80DoQ/4%=*'M-F^>4!=7faEVVf4N:HD*!bn2@3)I,%:=*)iZ=Ds-Z1j5>GI2$\>Gn2#o=cc'?j4"rQ&N(-7"\`Afl_:Iot^M[[WW1%Y9kIN51i)d"3B"N16rG/iO)-W[<cMull!3W8@o5m%(VE>G\>*VDofV^1+cbDB`E`5,M01`iHXK_5n.%WkfO.shH]XK%%W*W+j16/5BrLN&jMRf1.,;@sJSJ%+GKfdp@+$#=0mZoR8FK<O%'dEH.eZUn[5D`\dGAiR6f`DP;ha(HDManO!PYMV<C[o:)#km1`p5qReHB(,Fm*Y`keNPkn.`,us.j=@`WA@ZDNn*4es5o?,&EmXn%OJ(D/E5r=ZjU4TmD4^Z@4'%QehJ_)Pg30\^%c6OL=WD]ghkF"hRVs9cMMUAG<RWA%)U]e,#MfN*A3M,Z%7H=i0'HhE)N07,QR(7h%g<t$>MPA1,%%1'Jh*PQo?:161^'!I?$@K7lH):p1=k)EONm>/^Q[[eo+gJ_pLCD6\Os$%=)H(Z%&_?&]RR@h/A]o[:e\"0ljh.V[%(%*;Nr@F"YeG#)-9-5:UF,)Ha2808d"EiVIMVQVO,%>*<+IUH0CLZ-K1I+QL29(WG.1D?0aD)n\7KUV?);0!XE&<[t,Cs?E7WF+`%#L15-A7m[N>u9JCr6"+G4+8E*6Z-bH3W(8n*]pK(54;Q-&U;?f($erCp-Sr&E58Zo;<.f9:6f:gS`+!.%Fe8_j4lTA10b>QfPZg=%5-h:tKrmP0B>qs&%.Z*7g%B[G4$]T`=6,D?O!W>[K"+?JDrGA+$-/<8,-L]D9Yhm&o2rKL.eDV[]eioUm\(3%#TaT\K`lN"R69!:%_Gs0kn\XU/%4Qm7*7G*Jk76J8YgS'9&"l7,!Umj7JHHL/NQCos"O=ZH6j8UT6@kn2ATADU?<H.,&X#RMaUSIaL9ao0Gr"&m.W@NM%E[Wr@jLi)fD(P:QKtp:O<W;Ct1"Qe'GMe\qjZ!f2:ru6QErHf),G-!a$K\c23,gkB@\OMq3!,/'RFq[(A=p($Jk<Yk.@au\q"Eb<%0aWaW$(S-LLDlV!7t`qU]39cL`>*Fh+u5=kUlgYC)M(9E<Nlni/A4jI=YtZh.X\#J&[=_f("jtD#iDT/EiFGdP]s1!3Aq?(G^Kl'%E*S*8[.fY5(-C*<s3#>NLP8!1<(+)1+iWR5>gc%HDIuo_4(\ZA]0FEhdd]]k=klO.fPrlj&Dq4tP,uHm/Q'-XO;p>Om=a)T;;5.0%aG0b,C$?gb>hheF%a06:o7.)&7n,nG+,AKg(7>i*VekERf2#e@$>b01WofEM+W08?^$]ueVu\53BFL%Gb%]MbJdng?Q0M8d:@hoq%M5]_QEl041iUuiU"t:<36G]JulZ.K!JCpp:O&YpL<nG=G[M=G1qhVn%,pP*X\o#F_qp)[Qnh5F?Hn$AYJ\@h*\U:DS#KbbM&1X?t%AN4p8Skl3D)$J>Bh'#`%:No>lH'S2),f='arViZ<&4_%JRSRLZi?4ajRhs,%T>_I'1F%o39j,479)c!V&6%uX&TRg:_H+a/d-Mn:%BHP35)T0C4=ZD<!1krp#r!Po4SAoM=<+52G+:&tdmGiMJ4)0Qt,&iW)b((Z=JJ0TS](`<Of_+*\Dr!T!+d8EXk(CW+O]XTs%U^pc%/iKaqfLbkJU[Q&TCht"H<iVLh,146VV4'J/\4kOWk>H:iD^>t2q(TNUD,k"S;jWB5kmd6\*@0uLi\FqP;jYYe"/dWTR]s&r91<`i%FPp,P*JBDH>cREuZhinQI:.dB*!$YFN-?ngFo$'1D#UJVUj0(<ga@'hRZA4U<Se(G2.(>LW@A">0Y+`RlL7(\BsCp%*^("pdC>2m%Wk`%P9$<!Ll-WuXSH"_(I#J0qB_l]sT-/aanRHiC#R&Gei1K6;:,mG'HfA+>+>%VIaGBs^Acq2=*nZK!m%bfrjnTg_0;8>h0c#m<%8eu(<()\m(X:Y$TcG5_!iSRteo&Q_[!'j?/aDcI;-ied'8<#mciHT`X[P;)"!g.pXUhl!RXL)KAH_RRr(e7hOWeqBT@k1?#d.p]&%r0TRlb.V/9Dk&^XH!'=N38E=ujB4(&nt<>Xn-t-\SNu'+=2I`2.P-cdcUr[0&5t>nq]&eIs23];DT@n*#X<ms_&?Od>+nr,A`_DK%QCKe_3+sin\MOe:PgAdrZd8UO@'2g$[9@qO46N1uG?/=^!"oE#!!IjOAQdjEY&[W6jZDTE3VWYb?rtX8cc0&K#`DRjQ4`!Y^58#s%`HWbd5XoJX4O5_+`)ceD^:fKG?m0-RN+XPX(1C6:oS+MVJb(6u\\G^%[LZ5?WJg;<+O[$5\_/%]Of^:W")Bl@oA3-\)1dO+]QjT,%nt"T83=Q3>b`H`&)e_4=%(^R%kM^:GWLS]!2UUE!4@fTqD[hK%bOs5%#1RVgUo6P9Fk:W!Y+$?TK9a!.B;aL/?qAX`f%7a:=F"?`%S$O#nM7VrKj)iahVLaZZX5\Nd6"2\koT21])Cc\eW#tl"Z);k,me]mOpM=*jn*9tHm>W\k5h"BkQ/LaKZ'.uN3bOXr,-cDCR\Yn;%'f#;)L8j!YRc'1Uc^0!!o-i<?"U/MG\qP.qMtZO_*t[ugNjn&VO69.aZhC*MeMG]J:XjBA8(H81g>8l3Iq.'j<^>qtas5hb\i8m5%\HZ)U_X)>K6E]A!G4_a(Z;_@qSF$r=9NKTW&]bR(c/UmKUg8mDmN$dn]VEA6+QKed(2sTJ^pInTZ$OYL>Qf)873DM"IQIUSNB\I'%;$:pkpu?V\E8S=6\ae\biNGGLKfVWZn,1lCSURaFSpn;,!GWSGMVMeJ)qj6V/dN"`jI:f'%MT'@\bKJ=!jm"d/.>@h]Dc:HdfqCt%'U[j2!7;ZH#A2Q*24?>-ZlkahGbO`=8_+]iF8o2QGXd'TijI(g2Emtp<\Cc)'W?U2:LEPcro@AcY^5PC\Lq)fld&-QWe"jYP<HnT%XH!3i@F`Ac&c7dB1Pis56(^G>1fQ[oFR*QNb1#*8%,Lat"CT'$&9mjW66:XRr6Uf.GP;N?(>H_hK36f4)>Y5hb&6;+Q7>2Mj6L!.%%t$+sB+W?(]?=gu'Qm>1\OQT-,08O!5D/_N24m1U=AE0DYF>4J_)$o=2C9f?(uM(nS@)u@(ir.7br^hFrd/_d)+4gd`p>$oH1>@b%B+QKe8+GHKq$^_B8j/=9\&B^*p^m(=3AoOcjSfZUDkBlS+,-J8l0%HoPG`4?O'sg/?ic2Ke%nDu'QZY/DqnUseD@k4GPMXnIn9/)%H\cf[q(jqM6S(_+Lo1+?kS]"t.%e;+\24?nmYe",m<Nc_U[rOahdAaJcM$&6kH@<KE66[.\VUpC)r1=mRd)[eELSn[K;q+=LB6N"%oAP\#J)3`^)&nG&'unHT[2qLEE[]u6mpBJFT0DE0+0mD8XoW)_A\B-as(UW-0H/<fXj&O6qM!LaLX:S0lW.u6IW^SbcT48-g;]>'%!M`4eSBL_GU'I=iIh4c1bLZ#7L&UI`GouSU#EC.Z:+=)Q:*r4$$A*&C;4J^ZmZRCI6j6>K`"al0aZW2*82jR(E%hA=D/*@JFC%-s%-##B2q#+tAh)A,+[O$%M:/TArM4].aa.l@&R=QN"T*pT-Jn`0hcet:H'hn84$(C:e5W<$TD7UJBn^d[alTL\Yi<Akb2P9Q7-ZA<8%$G8m^rVJ6sCntPS2[T_W*\J#FfIm>]!dPSNS\IC-%2oL?GC3[`JQ-)i0,1?+#kVMREa\scD/<Zh_.?uXhqW2B1:3*-E6UT!A`'\d%5InPeU*MaMi;+C2I2>FQ!hS9%K0t!0"n,OF8#5+WfT#i"g,JrHqN"rF"KUU(<u$t*hBTZNEF*1>4@Ak]oR/YiT$d3C.DE*eq2`20%]s@c8jPAA]iEoY(qLM9N,k%%hrs1EB/qR($3j'Y2lKl1VIL:5%/UCo<Q],H#?F$R#ki_@8oW4$`F@;lMf0S$]-]C4$cJbu*Fc9_H%\*@Z;o&j].53L?,CM%Ur,X;;Rlm*C`BKTJ<6mr59%sn_rf?pbVI(Kd'CipM*qIXH01>4W>ft80G3Kl$p:RnT?9Qc(eKFoe[]jg<(%_i-4,Lif$GR6(m';R$SK]">!sU9P#Ah0ll'^Ul0D>5c8ZK7OTjfXn\d>NLI.6Aa&!XLjl'jS_7h^q.J5G7PPflsd#rV!9P0..3g*%RNIK+q6f6S.^5H:Vn5FjQn(''2gY-jqdJnD2mWh(;1=o,7h9e4iVOVO_/G7"j4kqT4UL_;rJc$79BtUkRWor,/ljE/$DdnQ9g.;7%Y&%aV[6'<8i/cIR8ffLeWsh5#L$1WgNH.n)hB(U%NDD'tG!2M8';[[\]gVh_@_HQ++4)(32X'^^Cc`A#5Vm)70GutgSp:#/pV,LV%p(cc3X?4_9;t2Q:[-foa3&\TVGH1RX0C')Y0KEgf1hNEG))V<cq8lb^'Sd!_7dVCE&N<ZmpmL>(p\Rq\/PHOJgZ&%n'2[L4;P5C#%aaUJ^N/tT\hqq]gKDYTP,JN&j_f,C[p\Smc:!2#h/V\ZG9W'_+0a(n,aIbq$*:ET&]`.EfA,fSo2sc,RW$t;_X1o7MSX_h.Td9#4%@]o:eR<i"C`bQYXE-NB%_UQshnBWPf9"-`3@m!qdTOEV1C\!cGlimb((`S<?QgUs#rOQ,+2c\)tI^'"i3U0s+k9bphmts-:M?U`o%5nj6,m]J&%]RBeIo[`$%X0B04`LN?c<O&K&baE0GZ%tJ;>ja,hq&c[>ZbP;_/Zsi3QnsnUl[";I>/58rqR-FVGdXhD2nTZEfRW;L%h\,R[\#[A!APj]6m&sF"\ajHeU^d[5(].)&f@2uVSH<0./q]NOSQ#!>NSO?m&a2AjLR[Mq?3E;0XQ_YgEXlS50Ar=L`_l"``<$%]%U,`$&32uMj;`.G;N;:WY8DQl%:=NE/Sr,Q:cXlTPm*=*,--$("prq0,^E?)=(isfPJ^hfM^3sY'DkF1%Er.cpj7]s#PIJ,ORqg`m%[>H8(Q.=9i'KT%;/D+=KZ<cpFgLnFRZN(*dF=D\6o:>P"]pk1S]ArQ3?Dn6J@)PfS?4'bCJ!G1Ss6N!L2jZQd4-2f;g\GMCg(Tf.%`,%5l9`Pd6^PiCHJnh+Jm%GqE%5WelK#h2%,Hl7#TfggPMrgfq?[_Fr:D*6kj=bmF!4LPH;@]_L37s/$;u?ClrT,d3kFZ`f==Gsl%g?BM>S?6/rUP-GgoDtqh!`G(El?Mj@9(%Lj5L,Eh9-*aF^#p-c/Z"K!b7-7Ngf3R3-%;VJ*M9Kh#edZ,\c]KaCT175U8'Tu!TP9"%)HCnE>@hg3((9c1%X2D?PlJ=me=eg%%Cn90WT1ZalRqN.OugqHI-W8)8A[JX4(rrfaW2aO`6?6-[6@K$-]^0[a.EmN)6&gWD/m'O%Z(hc=1MWmF2DK`j,MjGGB=F!a@m^G_hG!4ubf7+f3T!d#W$pk64_dEbPP1;'@fpL.[ui_o"$^LZe=/s6@njAm<Y)19fQff%X9R*r%DBj;RbPFN3S_H[U^iGW?oJ`$rmsbJN3uZ%Bl.!'\.s5n.rquXc+/uSpI(\BZ*EA$Hb+6'U3'CCa[FFI6ZG*6dOXl8:#*h6EbVn?a%l6lrpXGo*9eBoZ7W1VM5e4H1[nSd<&DIX,*FnE:I<nf?i@u$1-;etWn"0-B0KNfbW_NHNEGE]W@9-E?[,+Y@$g`9LTBb_XJm3'+k%R?.%W*oRS-f3+%cR_]>[/+V([[+k8BhW7[&-eT'aSh8CdM%hpPXFOdT,k<\)rqmSGXT(&9[k7_QI<=l>-Th/!7(0C.Qj)h-`B"]X%lhtU_;MkKVDQQ>Lc??J>:5KPp#MW_MqZ[g<<XGBoYoM\3:kDG$EF%X!&Pnp(XeMbePg<-VG*@iidlPHqgn1ORcCX`h2dWosKRWQ'%`Y$q\J;*g>L+S3TO#oPIJ"&ZJ<Lj")a1U!:T$gCFq38VeO<.J15GauQ;%5>Cp!dYqbe&Z&R(Hkm=ZW8so>W\gV^PKO3<mY]%pJpn%)2$#Zqkfbr1#+7\g#Fs&qV<,hlG-YNjaA24e-Tl1e\d#/-?X!-)KNl^3[QtFPr`C:n7YP)g(,5`Ue\T%AFALVq3?2AoCXi[jG)GU%WIsY,:,aWVC0g,K]RR/:\+,NkK_dO$%bB`Ub+2C#S[/EuX@#kjj"BaV4ONqg(qDG;WFPTU5(Ub1UlKd$_PK^q`ZMT0595a5Yo;tj%,m9k?olU86;nqEKREFIRSl-rP6GGT!dsEp%E>@p?J^(7eJR-C;hS38r1*K'sa["u'(%[m[k=V=L_:%\696ck.39,mjTg!*kd!JdZ%jKn_hbq#kN\;D_e3]d)CB3`\PFR%cfjA+ASg\fm=P.b'@1p8NE`PZ%]i_G*"[>/;6r.o7^fh31UmQARfFlWCUc(O8b,TIKX=mZtF%Ymd*Nn^Y7%PW`p3a*QR:#7p'R$Mp0[[X.KUM9G%YrFl76\lPC!R'%o_BDh8`,)1#AmWt:]DJsApXX?ZsBC[>-hB,1`7*AQYS.HU.%\5B+kfm7VB#h&P!@oRken<cTip%Y$;\X85fcG5rOJ!g+]-9sWGRs_Y2O#Ce[`(M)+;h>g.m?+;n>;j:-^fRc]&;8N#HEFHcJ$;Q8%L3Uc5>V(GTFP-s-B)$-j>6j1-PV*k-h*K@Zo0n&EJT\e(0g7PMeIqN3R=bdrjcA(rn%Sa)lF^U0q3'Ao^61X%VPuk(VZ(_pFZO55%V=3ST7dhnQL,tM2"hhg'`[1m*>V#'No0EO]9l,O_Z.hc![KIEG1MG<t<\l&Co!<27Q*CEAH.9iu+Md![cdp3%WJ1@/25Qd4.tXdh%bKZeP_M8)@<cE;p4^GZ5J)p8Zd>GNu8>6iAc2(VB1qoS1UMAh0*S.6ZNiKjgB4*Rq^jt2l$L;tU"kRPcmWr?V=1$sR933bU`Dn9"%=85hrkqa9LN]DpT<S?)c0b!el$ECr:'m[*po*"T7.e`SfEkHSdeghFFg-oKh?gOLkHrKC5*(9!:ItFD=*M\<$I,)>fRB-(n#d3hl%X>*,>iMOi2NWa.KcYQi4UTH"h]hj(-iT^7bJ$nb%F\q/gQW\SH^O4I6j17rKC@/D=Ka(!sK),HGk^aRFZm&&.L:DPVqr$bnK,4.*%io]7#:N1GN=IEH/`)St1)Yk?_E3TS`oD3D9`RW/BO)J?KijJNQ:'\I(1D(4OQ#H*K*RX/ZHe37d['E'0g;>9RVOr-`L9]<"/)**s%n4q+C^.];=],8jP0fBqPko1Ulk<%"!Wc92j2iaHJpDCL.rq)DP/`K\;rV.+lS'D?Pok\+=qA"(ODX*#CUW8V9*oDphrNmb\-Q^6U%o!I6rN\?^:cGZJ0Q1ua-^a0E*RZE3Q;jPqfUJ;>X51i(8hu-p5PQjkngL!n-hPIBDdNIDCZ&/I62j3$O2[8b(RI&V9.(l6.Dh#:b%l<Q/j'tWSELT_XG)].,2ls?us&*ToQS$I/NmrnA<CH4;;Fbd.Mmk:f;Z6?Stf,ifQV;uu$X+3L>T2\UcXZP))@K74n^e(Nu\caZX%VLaT]O/JB,@k3#<H('DRoaUnQq*4ia"AVM,3*QK1YjrLGQ.r\?:D_!qlKk[RRaG8C#DhAY,:L4pCdUmGcBfuB26&YbJ$sOJ+D[t2%[su+dcK":2(u_[DpLS.6qmn;L3]>B1_!4Hbp6h>gD:BPH?g5[oGk,t+3F^#5I_Z9q_'*!pceCC.^?Y8=%"*>=El<FA^pea>+G#E$%AMN]9rTWFg_P=4bG(VpPK,.5dMMYX;MY"iSpFSMfAj!<@pKt`3H$HQe1ShF9"g!rtmX3a2cTeFk+j]L0C6!,4Nc/B]_r.N-hpWu7%e8q:<p0H/f->pKqd!e$nQ\]F]<p;GU*8?jdZ66c4X:d%+G/LA-PWC>L?sF^\-)8c&ePa;tg-;+*kH2<r:XcsCWO!)q5?Oi5C(92Q%hKq!O0n%V=0iDI+jA>!hNJspXHa,l]WuFVNmBn#+g&.M_Q$8R:lZ,5GN@XX_N257T9)@Oq=6"%3@S$+U7`L^O]4fG!q%ueRgGH(;%+D79UNJAK*MkS@q)];_Kc@7YAl:/c.71fr<?JW]4;RZs5mZ\`&^I8S%bj2\LkWQQML^U7;YB2M%GQ<tbJj;G%"#4l-"&jPE$t*Dt%aLLMBrMNj``i7."cNh-OoA<Z0-=eNNI($drP</>fHW3`\mLfuQ]%=!e?WorsHoFL6<mmndTuD5R7E57_ClD<U(,^U"gE;]OQ9-Us%4G7`"oJNgiA6^S@p^lT<NJoA$COK^aWiL,n21LpS%SnJb>.jS!ks"?t=RSSq%K6)[XSFXWB)V@bEK,[\;7prMC.EVNh<!7),?&,H%!C1!6$_i8&n.1j_n!W@_WuDpXUWX,][q>Vffn%5SU54V6bc;nm!tA[F%@8+!oJ66WOr`c6ORFogf=Ft3OTD!/Nn5$gD1J^5a-p'S%bmr7R]Xj5F`OpO<N>L8(Y2h/1Pa5BP<*e%OH*nI..'B69"#=?]E#VfqKt;7]o?YouZmUmcPaZ*A/"O;iQrj1>LhbbhId`b-lT653%?>j4$O.4s2@Ed7uk1,H3P5ST?:>aIT'it;Pb.P<JR\P;8>nij#^IN?hjk7^B?F<Q<T]S(OG$.7HWbGf,G?g`k)];_p]Qq9fh3GBS%De`V78F#E*oq?XgN@pYOh!k\`?8W)iO=HDG/YX1t\SbZs*.Ok[7n9,jN,A4]5TgQ?<afqZeW=/%C0^!^ml*2/DIcuiJ$M,5pD6K,%Z$sD(FeIaHX_b)MkR$)mGbV+8O57ao)UuXphhg7+`p+Q"8G(Eh]X+g"L(c^%-[P&Tci_p&/OoAK!Wb$Dbh:Q((Zj+?LD_utR5&/!%b,<s<h2s;9rd3EHkpNF@B4m;S+1`"oU3rCb\K9k=Yr+0nO(Q3Vr;7#m68u>pSXd$E9tC(/_kod`I\iWKfU>%9iXaBLYkSp7R7]2G%HPXfar5E*^<&3#?R%@AXX-=Ta$9EeL]!NN^^$;DD@!=,m\;7W`k5?ceFcf_ObV7`0d57J-bRn,lO4L,n+"c:prttbQ27nA<bNI-6%ko7Bdf;jDEGGnt:4Z_hn(m1foGDgK+3\_i2Gr,>iY^jR6XS2:H]%dg_lsB)X)jU:,@g<4\)/\^1QkKU6<]4L!+8j\_I8+99`Jf%"%:]BFQ]BVXuAJZ0g4.G$:gs:)0m!^KBBP&T6\IBRn-b:-YF<k>#%55r/8$[KI?AGVdl<,MkTMMaD@Jo#14h_MdD4ph_s!\G+4RM@M%2&>DKaoSLLr"<+47k5lXV.KG"=JF#m-o.@pWqgf5rqCtlN2fssXTc`;M2`g$^,l,o&^86*:NjNgS%RIOZADZpA5/T_`[Ucf5-Sn%%6JFD=WfMU=Fdp1;BIc<]llEOp[#7f3Fgb;@2l"E3%O)870qPGneTL!US4Sa;(dl$PVY8"8Mi;N>r;FpRI2fo-fYFd^k98eWCE-*p%%pN3G^7Ft9'3#S&lH(9t`qNiDj"$l5pii&6B-'sq)4Rjfc4kSaf&Xq^-R7:ehsZToi!Qm0<u<>ep:&!6A^X%oip5'Gh0A>/EHa.t%r;=GJEcsu0Y]D_2j@SZ[).:J9[<u91WKh*uIs$>!H(hgVMD)N=m/&=<k3Q"q0-kIrT#VK:N52q1!3#hn5)?3.'&SId3"X=[)tU\b%Z?<GI=@nmFa_qdl]R=,8C\h!a*$iWqnoArW>X!Q0qRESn@:FTO5g9.E^NmRE0n[UXX?OA!';rU:hlj"<2\nC%>m8O+6s'&Y+`NIr%$UY7@\ufkr1tA(jAWT@<4$]>qM/9;A>#f-cLV#9R]KP]Ul25FUFXNe"Vp;>7`4SI6I681`oQt%P3k!r7ot@tao0*I!eb23'4[.q/%nnXe&ETRi=b1/p3jY?5H`rgns9_nV<\%7:rV@-F5#1Eb)a('GQ'n"decn*lRZfofJ3'Z%]DtEfh'd-AFhUd==j"C^R.>qSNA_UCA%`JYc-,*VqUI<W4k%k"s1+%8eEa#=_GIAF7ZB8`1+PG.s#6Bb"5kg^2scfJ3?f'27j#u.jSEhC]hfu=p3E$kN':PX>m4uUeE1g,c%%Hn-;rqVaNTOPD`Nq9;.=H9ZdYFfW---H"Gpd,`hiog)jgp;YV-!-VAO%#98R(f"W:FqI`Hm:ipJ"MW496j,+!T0*E<eBIp>Rdhcc%M2g8*Fju-+$)re[o?\\q'[.FGq]939UC&OD'VR$i'i`*\Xm;Ki=S_UYGYLi*q1D+`e,E>.mD3?'V]GU4i^"9gP.``g$5j(A+>dE6%aWSLDOr`4:=t*.:Nf>X'RJi'6iR%BE%^9!Rko=tg:ntr[c3L[#]Xu$bSmHX'UUduld=Y\;@-cau7_]ptKADploo]+S,gRGOXlH1@%+gT%I9aorF(@1)AnSR]s9P1M5KEg0)mG5+eO%o7rhd4VAO.<j0cLt%XnQ<f`rKU[8n$fl@osr<T#]7/G,8PL]A-0p<i>Oa@B5>Wo%``sN8m[4/p@0Y$P]pCcLAn9LoBSct-%FQU[37(An]2R31/'pVsT*;'5:at'W?&g"UI/<sQTut_1_A<b>qhN@(k48CM&'HFTGMp9L%gr?9Xbc?Whjf+NcnUpC"!a<q/,!)Nd8=7NDS]aI'R'Yo>l&8=>V;g<9[SaI4CJGNSK^`jNRNN9_NM?PFIUfdGBa?bJDQLETQ4J=P%e\Y3U)s!_15d0_KoF@$T9^=QCQM5<nf/.9=Np+U8S$0St?;mncgb4d,IGNCg(:Th>JMX8pQ_h6Z8JTa\l#0N1.<*/u0AVVflPP].%2&25NE@,&5J7SC"rFJ@Sm%5n5:Dd]lo1^ZqkhG+$!s3*A"NgQ2F]YH]>u@RP65U2gU8J)a2`<qd9XL&8o.f(g@&]"rYHkT6oIQKC%4S@uFhDF*5L,0B"cQMB@.PNm$<lZ"H,AY;:*eCsQVoI?_D^9+cCaV0+23T.u54-G:inMGTapn01LQ4V(j_"I%!9Igo]6Z7oj[RnW%KOL&<0KCi\ENb3F&2V'Tib[^*T&s.5F1?b9IXsN1;F,jijr6j"4W;W`5RqnU^s/KqN_Kpc"NMZSdtN[rYFp*d<\@Eq!oGkGc/C,6%:Hi\]g/dK5BM+,fbJVkDDt8"NQQ`bg,%ZBh&i&7Q@][]>ZB!&[\,`gO*,i'i=S'Xe:Z\R+`WILtC\j7,\;g6SVdCcOVf-r'Y.Y1O%]+/2&FTDM,f;hYSnh$sCEpN&\kLBuq:NWJOcsp)IE>3,T[gn>!TuUR_pn<;##7*KdA9)J,d\J;GVX&q-:"[Ker:&bf^.mg09&83_%_TZD99rV>9;CW1MB$Ok$8-sZ0\Ih&233$=_@33m--Yr>pT@-e%nLIW)Q!TMZf&Y6boBBMg-H6]65)_K1:#(\M&GH0T'm%s'(=cDk%'1AU;]=nIh02q2DfnNN(\BruEdj%M,Q]U67cYi0XZ(-3bLCV"g2SAM<p*noeV[`Hd7f'D_]R(O2WTc:]a`mE`b4d8>RSA/;]d@@`%)LPmPrHWOB6L4)8er8i4B3:[8Q^6!(qUBG\<PO6GKO.]5QUBU%)I8hBHFVb/oWg>\J,""T^>HJ+(#/1!A/ItG+D-'rm>"OtL\#NL%,45S5XP#o*=E*TZ#0-KkF>]lTql=]j\:1)PR^'gi`7[>N!0(H3X^s,m3.[jfU.^BtBoMsbI.R+&da-dm%?lKX1c6YP^OAjH'e)("%964%F)3Js7,OUl,:T!0-YMQu]93%#K3a=fF22dpOLHgsZ\%N:?'7XMtSb0W+5<GGbLQ0'"Dl7sn]KTN6s2)&lMpJg"jso5uom=u1%'XZD1(.$!ohHc$\J,23;1`U)-9F#LHh;+@HE9Q^>cu<f5YS$![E_+LZLACd>AdI8aeF'+JNm^b^CnX/+6:rHu_C,rd]Fd,o?(CL%%^0FdfWS;p@]..s8'f_l(9`4mtAp'Wt`>$=E^W'WQQ31AcFhO)-R691sVHb1k6%#oGO2%BEDElLOgElX1R7t0d)\q0@Ahr`lJ+NE<%+U_*(*FH]o/B8hbs5(J<$@#dk=_iH'G`9s4r9/PBmek%qDqoSriTk*=0(_ZjT:[!!bu*rJ7sR28R8ik`GAj8Ac-4c_j)52P<LS.b%YdiXAW!SNNRmtpnq+GEPQt7IQlF:?VhUuAm)m:(*;jK;DUYm8N5()3jmW"l\X]i7qp[QK/jj?A4oD3P)-d2b;.>sVS:Wo+tI^R@G%F"cHkQ84EP3=k+UAo4e=8lXTea)!T/>@k@T4C/ieZerC0^bV>M]"PounidGHc;f-&@t`37fj]m4a.L9&@Q/^d`S"_k(:eQu4gtnB%g5kc@p"@l*@cs[Nrj=5!<]eXGl%;JfUBsYl^gu0r<+nFDK%Yq62Uh4@(,:;FF8)\`48J`)c*OMKoaKF!ET:?^@.eu"Kb#N>dG4j3%qrZ_14B[&SLp:>>e8$s>@U2[^puJ3:.OekM]UFN(efXe]h#F`*cG!Xo37@C$"N:uj=*]HJi+E1uD@$YWRJXDC07SOlSGW'iZ^f9u%!\Ld%0`u#)QMug$S)"g\5(WQ-"F>>NYp=L)[uNKIaJ5Iba?43QK<368X!&tohZ#X)F&n^4NSfFi7QKipe@X=50;ikn&8rtt/9mYg%r;9h.mp>aNje<>jARcD!0"\_<A`^PfrW]E@Q(:.\(N42V+VqH.i9T(3._GNr\U,9rK0RnKK'-2SGEhR5hq^3J"[3d%"Y'?ICq^;-%n+ZZbs*PVM"t@;\(-oa,*5J7**MZ;WIe4IEGU33Y0?KDZeT.u)l.JkI:6(j\a-m5pid>2b6d5d-+6T3iiVR!*Qk3j1NldQa.N5r5%0CGQ!H*Q.J8M=i,$P]N-)q!NZ".8rXA;U;UA[(Dk'q^F^SblM-R>k!c<-7ZP*kb&^TDWYS@g_fT:Tntl+Yao4N6e,T29.WITf.f&%&VK4A:9j`MHq1Vg[c[!)J$Q_0O><m0%;2,X]hSK:pc:7V]TX,Wfm+!I>=UpBj#`)=>b$Lroni+=F)jX[D&p-[(FdsqmTGVr3YVQ=%.a_7GoBp<t(]h,J!oi%BRd:Ci"/:*)IG_cbWm`bMI(bHgJ$cX?7s23t`U(NZMV1ckbfnuIcF6<Ak5)-%)U(b[r\n2WGC+\GK-IS=%>ii"qqZh4Lq<R.+Z&,@6("-=JgTgAlau-!-em-4c8+#M;2*L##HVNh"4Gl)IHhqJ?%:?Jf0/f=ZH;L_6]c%a=)_F!TSkTWdoo+n.%j`s5ZH#^?kp#I:/dI=OP[@UlKJQb5B'n>Du%V9H1pAX8^T)4DabNju@SPu)'A^Fsn<"Q@)>EaWse)TOMpE4Qo@^%5RhG.?Bs4@\B%#QN#u9J1Dr*<rc3RYhr_T]q:$9HNTCcM1<hci*EBmc0esD%,Kp(H_#)40%/XHXt\WDtJpOBO$EPXY)3.5Fq\]r-DFfjQ2Oa5MFck%ojtR!WXiYIk]B)$SNl5r#QlRBgd-\7K>nMSZ^Z,^o\:dR;!lCK1RYCR$Db)45+_"#ae(\PIf>@"88pN`PJt/#45Jp&s0qSIbN'F&%Stt?*l+Fe7R@!dfWJl*;[XUDielV=3d,?uO*tNXA5V_&eF+<o4S9fXu3W!M0O6t#T21Jp[nmi*/&ZoFWe$=,$GG#?BhGJ*ML\-!?%2g8c5o'gnTa%RB]QN"46'ufjfH*jZ]oZc"IqI=nU26Y0sSKC78Z?>j"-&Du>q;M`Lb3IKjDc[*XJ9=Oe_4'(b`%NeVch[jgZ,IN/%dWkhk2HE*1.LXh5_@3O*]H-BR]B]6&7$#0]8"<F(rUfUWAG,!-opV"Re@D3q;dl'neVlQDDd0M'ob+=+I892UUX#s"-dq<N28//0%PYjrZ*jg^IEe3+CfCU!*T^WfYPL56h:<li>q"ougi\!"O]_iuXXm,Miaf+ePp;FiC;`]LnJ'Ni8eH.Q-9K>OhGP80CqtTQp!:N*O%SbJVer2_,KRJ\BspNWoLa,G6/EcWOf9\rY.5ji%=L?Hl@AaAa"4G\kF\rKraUM9gs1YW&knj&<R_ZBK\U<ms(TBG;o(fKH:^<A"D%q1I-j34/G3SK-BkNul'hR__<ncS;u_::)r5roP3Akb4T7muJM]EZg:HrS9>mTR699D5_n$Fh6:'ZQCjW*qmm"@4nICf=H7(13?c.%o&hiU*bUs\X)II8pbMI!(2p84l^HQPHMmSJ*H,h:Yqu9*A^JV2n$]gBZ_@O7qqM#QKlENK\bo<t[<l1''/#V9;RH_sUl+pm87/Io%I1Xm)ap5,:@#!R1dW6dn[8pr7b5@0QkR5:Y"\LPJN.na6cps>H%M%(C?QIdf;b?n+Hj05tbl2*lFu^S`CF:KV$5=BaZsOk@ldRn[%Y,i*^Es-*W.cCY^%<*p8pL%(2<toK%/GOrckYK4-aiCJ52W._O/V5%k[Y%rcY09*PTAKR0G4e5tpFjNL3O5^<Mh_ZS0cBkV-[Y#F%):\;EXksp6[0+Q@6Oe!&rOth>,KfSn!f47TMj^`gP)Hr^Z,%H^3?$]Lm=D0kRP)Ctms][MO)\r-SbE$+D"U-QApK`_C)](MI(u_,%.5FQ.f&b;N?N*+^J<H,n-dm7H:C3c27/sQRpBl7lLCiK_-74\`kTE#)-oudhm7niUWNpd9kMEq?g%^6(Cg%J?0K7r5I$)U9=79Ia%M:YOq.C\>S4D@)BbWmgm3$hXo<;pYY:f@rW0r1]0X&m>l`JCBsEVeVYDc4>Y/`3AH7OE%8Lp1#&!WZ[6s#F`jmZ2`+4?C_QFe@(h%4%<9PnRkO<#1]s*DW<t9p;8m\%^7.kYESB?#Ho0340T/@kKOP/;sjn<3M'TR+".nBFiOC@'H-[SX6olTme?7Oq-cL.5PXG.='*ZJ%&+fKEk[TX!%QF<m2=#\k!Zq>o[f&4]pcj[Uhr/pHX)%JXH-5PNJ`+*l2#r_<fO`'+I*["LNU6O*V.IpCrAJfHG3ngQ#WJB+s'4JH%?Rr@JrOo>a&!Y\3]#'h]ZTFr3q5Fh.?mul$&JdPM\#PF;ZE7d9[_u*60N-3QLZ!Y%[fM_G\ZSb\fBE1k*(Glcj(.2BI.-sdbI+OW%8-=t>7oRHc;d8Fg5E];G4SCP=XE<I*jk7@XMc9"-3BJ@-ap]=l/bR`[++MP`?e.(k6[As-otWD/P=U2hAN[RuBlD?=?SqNQY`7q2%YV/+NXXQ4;RqlM*O66&5[%fV`"G\MiLWb@r$C]/meB[/,?9-fp0bWsBm,m*fi^<U!lP'"d$RP1-o:PN7QJ>gm^)NQgBWmKdQL[4[%f%QAbX7Q)GC%[fOmd&&`g5PmmO!]4#[I[t9ReZPrF`HMcifqD:\n"KeGftZ5Y@^>$TV$<AffgS[n]IoXWHJrF^*d&MET<],U@=QW%L!La;5tBCG[+K^=&8!^o^-ULC)i41R[?b[aHS&1I?u&O'A$lYunC):)+>>6U+Ke\XnPE-29L2K[*79kebl0GjWI(s.6IItT+"r)$%S;9L]1<Ldpc+g?0q;^e,R!l49O)k5=C$X:H5VtLQ!^.,>R7&5m?`Tn\9$d3-8U).N<@/Qu::BV!9BY:3TB3=%.[#-I*(BVa%Xrp'%nFP>ZO-^s'hO>Be(n4aa(#n`K`ODtA+$R@8nDDiehp-^YIJA,:DuSVKg7K=r]1'=,iV_HLLO2YiTB);2BCoN^1*Q(_Ni=Pac)TRu%]Q=*\l#a7hhCR9^`*;cWdeN1aUP#h.n`f/]MrUq;Dp.[=Im1_F-WPM@qY0o[j"jJ;DiW.5:S^l;Hrm2KA1F;E2S4:I3.%t(/UnL*%(GupAj*I&YcIQUA5CL2U=8lAUFr"Gm\%]OMrp'FZqe\`meubdVV/m:0St4ueQ`f&?b1,s!lSm%!k+>GQa(PB4m_Iaf]cNf94oGKG%pDEq:0L!)a5DNB+4<AEhr3AFKqt7qcj4!2Y&hQ]lX8T9gZ1#@t^;FH1>/.8TgLHicIIC.LRq(@1R<NoBe"Q6),4=[IDrg-NEU42O%#16EOYdr_IJ2k%g!1Y#Y"*^IHke-Ua)7U>[^n/\<)7U>[^ub%3b.sRH!b2m$AO%Id1Dc$/-`I</(ns*oj_SDd2b;X5Y;boWr9aR(%hJF@ISq$M$gLTKtqNJtcXY2o2YKgEd46rH9rGplarn$9!07U\7HYk,L5P*\8ZrT-.VZr=S(q/5_5MC0#s*4N>XaW+[rahTC@#\ZN%'lqukDhR]QklVgIAc]@+Z8.3:pk(7!MF]]Vs7e'orBV7K&+N]YXcf!ikN_rgiJ5L#e0!EE*,+*sHMN>`M8#RK9sHXRF'I['VXJiP%+?i@gd9=EXY140Yg7EFHo6hi=R`[GFKO4WJ<6t$tFI;)$0/oP(X$,4pk:t*3;ts/ff?VCXkHth(Qu*piY^tKJItrgC"pkgLIf:;0%RX:mN4#X>&WH[,]kT$M9!XI<o'_VURcY>1^ni_o!&E'Y>&U<KXT'+e'[di\*?P^TO#)Hf)]:J;i>t#PC?T3K6>l$A??UKr[CCsL[%P96+c>>CK&@],\lc%khGo`prj`;.:TM"Nb3JcLV/fA"0SSQ/Q_GuL;^V&Ej!*THOuO#-CNZm/9!?U%6=S"FaDT7)F"CN8ltj==O+%"ZltPS@&8b[:>__0tk)9Fasi!37Y<L]uH]4X.L0A*'X%/V[`cud-m/E8I>e7rh$1?=&Z$$?`(<j#LTDWdLWJ%Q(p!m/@;V)]#=EN%cS38g^L7S#$UjiH7XG(##oXS/i+UsMMt<b+./%ubgDjhDrM'IjHuh\t,,CE8%hARcs*1iO`oGr"U6A1_iRfN0]R3"5^`VG0,_4;;%,ktVl2^DLbFUhtOKSd\<'17F`c4L)to@X^A'pIoWJsH/X?O[==-7HX27tb#<"HAY%TU3SE65L7c>oVZ#4mki@)Jo!1kb0:h%mF*`%It"L;HbHh"8[.fhrPtg'6NRlA%6cHXl;[@AdrA]9@3ltJ#4UlpA6/aFWR`00YKs?*N'ZQ%T"<1,5c&h=pD@:>p7=`25<3d8;W:&+%]Wo2q2"m.,!+Qk8kQ0[^IVq]RdK#;/,6EC9Ca]j>oeG]SGON5I,_(5dj4W6,'Eer>]Ul^*KL&=@RN4aSNYn7!:h"p#VCr4)$k32l%@^`_8qQ0<jj)jgj!tcW'&VUbT3$3gQC1Eq6<so(J$#d(-8;6'e0K(ZTTf;jV<tL0pIr+ST)\C^$WM?*U&$OmaqN$s1\+N<PMIlN:%V!c1i\c9]L?QSMj/+qKNO<rhi5m]n]rGTR9@hWuCV0AiHf^VqkWj]Kb<t7?PSHl3:2rCb=O6t//7CS_?Wj9S6fUt<TBB;DP)8jd3%b2]B"lm13M_aXSnVT]a`&mT(9e'hUC?r#d#UX1-tMjlG$D%)e+%j,iJB#gOi0"$%i&l7S[K'PPR(eX(TOe%A$0[[kBhNaef4/ntq%QJNT#"7aK7COEg>rfcU.k?lrs+0XINDglHide+jm.igCBhnOHq@q]mscPBi'@dk9!Oh9N$UKIFAjffq1]_QAZc8t58hu8#qc[0lb%Ze+bt.^)XMM*(,)YWmPRJ!fnY36jb@+6Gm?pX6r']UqHbU5/@)Pi$XDH"ObQ1]@oOabB\e9u[[#LIc\/@$`**4r)WV^N+i607;EV%"d$/Ge@d=%ik./gAtGt!?cZQp&MN9GXQ]K&/s>UUcsOFF,bT8Ihd=#lDErLMURd(E$*qfKO"fPiWIsjsmE;K:kNCAZL&1IkUbKdl%o<%&JXi2G,Eptb0k/I<t1]9d_\b>4T#9Q$G0:npljeZqolT9RQ*63fI?7+OI2ck%C.^*IW\mUg1'G.J1%-,*[.(Tlf'#mZ<M?9*X%iErkg.o?:-$We5Do<%S1aS4l)n8ILF/%`9QJb.IQ2N499^<F'ks24!^#MO7jq,;$6KUEq3puThYc:lnPG4hH=-'!-J$,aHCds%DT%#IBsG;;]3>hRl06_E23+P5];br:%fS7V9D.R.7iA3r/*d`o_Bjg=kgSq9+\Q0d3DP5deck7C'jIM.HV^J\4@,>Au^eVS[Z2i1Kg@%&kC(Z2mp*d4V1,5-7Wm:CnDe;=d!9qZZ@4Tc<=n@]S.s3f2$HtSM)HW'\F6m9YC9-g(&Vaa\1kK6%mKCfk'SY5^H-T_.AB!:<U`?%NEPA2HhZjmZapJP"BT-IB,@s+%!NFWdDL[bGm+^+$_(3ob7uRdVM,^U,1'c*RrA1,7./Fs_8><&JPB2_o[rces"'3_N(r5)i;:gO%$i^u]CgmHLrqpa6q`AslhlhO>r:kF7oNr\hNer,Js!%5&r,5ou'=,+qdhMeD@dF$HfHg.'-X-9<^Q)%$T3M2<^%q3rqW#&gVa(3(%D]YBS5M89Vh7P[r:\B,HI2D<G_J#\<cl7FKiRQt8(ub@skh[6Un+D0ir>qI)%=]CW7I<3s,iETRH'oC%r=MUMiK#`,=[M/$Dt$,&%rp_Z:a(+o)dli!F^[?sBhNN:Vn"P.F#lJ(H<hs-5b-\eta)O1uoBb<K2G/Le`m>!@86OgHJrQL1`2YC@;lSIpBIa^1N3YR>`h[F;%=cPX64&.Td.+8<G7d["-F^rhEAM3DiZ@p4Q2N;]Z6;Lak'9T,g;&5"A`k3nH/?/<dg*4jS%;+<0;&UXF8R%"L#_skh[Z'f%S</D,%8r^m8>`*]-C18"e6!KW_h9XF\)UgOl,_BGM8QtGJ[A>:/&1#InLcXgq*>S4S5=h/NRF\7!Q>Ph2K6]ggQ:>FV+DB!*1^cn>H?qu'%+MHmAaSgh"_t9;N:<7&X47du^%#k=;X)mEiYs/uQ>cR7N#WUg9!R7@5UrKKp8cpo0PFNQO/<11d'\OnS,u&O&\=I3P7aNPoCtCTt%BTb,./P-rD6k#LG[[W(^U7*Lib]$3Xj9<pib*"UJR't0`/SYi\G*.\65Rcrf5\^CS`[FI&?m`Z@Z:o"3#.C6`ro+Rr)O%[)c.W^D%TafB3AeBrs&@IP&94V"V+>]*=+q8O)n9^:SE0(r2Yq3fGAFR4Tb&H(](oP=8*eBt=a\!FKde36GmU1@!A!";[Zt&`/g<:l$#W(^q%FUWNs-ED-]imA_`*qor_R'K8>8TR.]A2,qW+Cl10pcFf[2-Q-)!N$i,%ZQT%@ac/_.'?D3$,)f`gqkJlP.[>2M=-eJ8tcA]Z??:>%L2!G@NK^^ikN;@E<^-b:8J3.C;:Kp3D%RSi#*Yobf!('UP`)7ocDW=&,D7k1;3I=>0lrB`OMoXZB`q.5XB3J@',jdMK:k[N>`jnI%:RX`m5YRl.f%7g0K/f)e3(.GToa`C5kHOqW*)7FkZP)Ag:EX=%,$;U1PcgoSF9g9!*f&QU839L``U/&#hQZVF\]@[ikI1Y.C8%(>%#!eg?V@m(4JlF@"OJ-dBSCeFXRpoq+=JJZS%_,e8i^`]q"P1Gn1Yd_aOc=(,q\3FN1,j'4^nq5M;U6>C@7<-USS"!<N@?P)1r@7-%$l[k6-(-b$%7o.I8J,DY>p-;0&Lgu+,+K)n"c1uRg<_/Z.I=$&oRV]IKFu%TP0aIVk=/&hEF.r:bT)mf%4&#^'\@;VKS&5;%7^`!%/1U5EI%W3H8Hfc_[PEtV80AJ';2V['-`-.n&`&$1QH(3DQI1^J=Dp!fJ2>En"!5l9$@&\uQ&8_&(c>\<&tkIE<@Vbbl9ku+*ZKg[%gUD]cX?^cW3_tm:I8POO;PI3U,3:Sn00oQ";+@M47$BD3.0B+:JQgSUa$kdsRV.p*i;o]K#pp3/dO,cGoJ/$s,$e*B8ZaA1@p,,L%@,ca;%kEE@5\!q=-d4p>[2Auuj<C_N*?'VQVBljo;NY["YiJ3s3RK4%Oara!`3l0c$>^<+"I@?]3c82)gACjt6*j8-g3fQubk!Z]%Gl`5(KPHHA,A9b==bbFJ4[$A<R,/01m+tpWEI+['BB8Z>SU/(CL.D?ke[\U5D4/6ARN[/mTN_DFAD.[i<.Z?K7QN[D5RG%Ua/sjs%EF,S(Q*>94Y'UBL;(?Z`:hO0MYYE,@e<Fp(Q@pUdg1eu&A!55)JY78Kl:-mAQkB[W3/V1o(np=/_\NJhbA09"f1^i?JTPI#`$'.D%1)OUI(aZNqWRX-n*>B85W_FHKZRGI.DFoMmD5oHn92'#PAQ.nq!Y(&]ep?JW#_Wat^hG?7\D`Al9un9MN8VL.;<dVJ,9rmX:iG@G%(md#L.>2Oe.7,()]oJ-:%]$Qr%XG:?AsgDtRgB82TdCiMO<IH9D0<SB1,_HD'$(QA+/)8GV'T#j`X+>J#qKM^SA6".@p0d.,?#Ve%d;&*r(srq#TF)b[FXE+\%@fe>[TYtd.3b9BM(if<6=Z1R<f4ahBXL&pdbsg(Z"ORYgCo;Ls+j%00O,3H/3o5A<b1hQ1ItKP?pVZo%!16a*[>BO1"^E^^cmBCeBX;Ei>@Kp/MS``DB.9%Gee=l&mOB;*O@taniaW51MC]@u3"**lZ>`.7J4UFkiQRuMO&9]`BnS5o62pAQ%Bm]\u[kRaq1<BEj[%m8ZgePoQ%6JR%M_'^4IVWo"QEN;>E3MbD!G<jalBUB("I(-GPem\T=S3BlO9e\99<EGiR"5^;:a>>O_?cq?%(GcYBOJJU-U'if'lj8ou[A"1k0Mhe0M6\hCi%*c>K#SXf7[]X`+p&pS#kWU[e'dmlHKJD)E\N(8;3Zad,<-1.Zo64.;"fAmUBm_G%p#0HE*bj*jMbg/TfK@UfSu!ek(9%o#?u+_AL-80l7,n7o9!:>]-Le:8SBIWd(oE6W%\cS^:C%nt,`[MVb6[b24A#Z!@A>C3YkH3'%olPl]@(IY)fY,82_t7!cbpVE[1\6-\%#k=[X)k34'*qQuJ/Mlk:'g56La,a@Yq7nL&t$hGnOmVM\Q_"D9]0ja+"6PHh8f&:jMs_-%CS&di-5kf/pKV,G"frLs7S_-Y,G^+u:8r@3(c5it'%,pZXGgpXF3nS6)8ZN&Q:;-^lp1Bp8..LSJNh:'%qc"Q7fk$)4"PB6S$U%0%$.h<pB!<GV5gPlZ,G[*m_Oe#1UI1EAC'`f1%m,SK/H`Y*U3nO#)9rL+iTq?=h"+dMqZ2sY&naX(:=ml<]EROQO[\[kVB)PKluk]Z%K@m1#XCR1K1L6P5[As:g=*,sC+>-R2Z`'ds8%HE@@Vf?f8-.Z!_-u\7OQZl5,rtfIN+j=^QSUN$;DiVS-_`Sq'+.J=l`u<1a)mWd%7Y=:R0;hQ.)/CN>D4*@Yk]ddcNb^fJFA9%Z9_:J<8I[aPAu%^P:4[2Kf4G.YPf-!MGB@g2ir[e"b0U`3XBn7fBS97INi>&@_k%`\%#rRP&,`(`q;7N>T(lT)p.S8psJP#!;SGP*4;^RAi80]s&J9i@r>u-OL%]6^%%_K39DOfR`],CGBTr/qcP+bagE])EI%%G&"@>^jd%-`BHVa!RI+#]tTiarT_pRG]tH_S[IA=!p?!eCXt0-o[,_Nf8W$ATKAc6qU6F)kb8/iT!hn-`*Xp+E\oZP[m+B!N@#JCS-ouehI9G%Z,gZ&;e=nmaH6\'W!tQ5HTmf.?"%GJYVV&(njIlqBp>@$88BN;RX!'Xr1Fraj`M)\!XHZ+W54/Y:WfDd*B9_1bHtZI-+Z<U1Vt^\%BAq@6%JF]]&de$sE[$Z::=msi]*7FNON$T?V&a-Ok[m!ZH^L5uHt5b^0O1/+291=$Vs?tM"*d/S=QiEW2f'buU6d:QK_"DpWKClX%^<;enfm7!<]X/f*&?%f[COX>4G_LpEliN21e!Qr!EqL56H.+0PY.We?T%VFU"-DS6cdK0+HQr($\HlW`72npZ1;k6sY]$;j3+H(8%dP-KF;4K*L2OJiM8o7TIMCL*pBH9L,p55Frg(B`UUB1U:fFb3o"T:Ue877/tWZan3'"(T2MchC7q9Y-576#AD&NSZ,H8Iri/.10_%R^T+iG72l,+cG/`9/Fe"dER%?p+S95(s1,Q@(A=>.\;W0IC;bIoKqWl(p'!iRRhoRkp=j?YgI2=1!DV8e]hS9$T0(67nFStMfU$d%gDK#up-]G#VOW=7K]jTO4hkk;it6U3Q<!/!^cOop$Uo1h'5=QrhE>U$[=\ctD5K8#`@gXD1C8gcnD7*p-7$s@%4<dt,#ufW9d$fV%5bP,(6V(mD#q7bt`hf0OTI7<#A.9[*/'^K"3D*IX)dn5[2Ok(-UEEX-5@qJcb>E-HM1]VKicV\*7b?*6\:a#tNCE7gU)g,Ggib_B%A!hNH*+T<hn62A1's#KiSL<X#!':c,@--.+TO^US$u!kDmmLnd+uY$H;emORmJnT<*V367oq3I@"o=a^1"(MHWJ!JU"K:^cVCbC0%arftAlZ[nL]Sr.a:0Il3ZpeqW6R.\h&7IeF:s1fu.++)WPaRRM$o&KsiK$g$0nrdUr`$+]+uT9YK+S/lR(6nq?t6:A#RhRs3@]^<%@)+fYlrYa_#p@(p.?T_pgis&GklKI'@\AN*_qAEg8-73nR!+GFdj1_b*37-qT8p@P7rJJ`=;[#X=@"`2J#1Cp6C-!)%XCR.-fhQo%5?]s>do'$K,el0P8e,cUb`^C,)-DZOC_X+Kf9RrpUj??^oc1IaN?Zmi'paQ0KX(_Z`c@M9(PjV>n^j,i(oe9CkZ?]6NeM0u"Oab-%g6"4dfCmEr:M[S\_F-=m/CG(g3Y18F2TR(302iic#Mk07Q=>$s"i-7Th$f.5&Itbfcr^md+O_l#X-)L_G_\FT>f.*u/9$UR9Rn)d%\tH7?@:I"X9KSaU#)B""),<>llhN@_;B.1h.3PPSkn2dhoU!X.G=uX?l)hId:;@coh>n-)!X7@[k=`ds&c/r2JgO&4@*#J_KfDY=%"<!oSNcuTpDEr7.C,\j$WCRtEN4"rT)`.RM5SVLajZY:_FjGp':o5b6"PP+Q)=C5,a`4r9"M:@UW0F7o6Src?G_mnLkaCfCVJ2bF%mKOYuY_c<eA$P1[.kSZdjX;jig,/<9+jo7cG/AK2+Z,fodZC0)O%W-a*04[M-rH_5^VZ!Rp[GmZ":;(G?3Q#'Eu"Zh%MR*Q.%Cf+%Ji9##',M6ak@mI0Cm:miplok`4d%mohV'sUhAWtFHAh0&jDfmCHb_k#8cbj?H'29pr7uUl^m#2Q.=b:C09-A@2J&^sQNYgT,,M_-%<sf6T<hN,"M2F](%AbmSSh&tO[\9uC,t)*]LKpjH1L(0a[`pAi>rpDQ_*k!b0qg0L1g`Y]dc4Ut1u?d.[c#N\<=E9?U6DP&qo+L(%g*33nT:H/^>ICrdc8L=(-s-C<99kHfP#OY54ETLrNJtO);&]-16DD(KJ6/a<cc:r*#/9S^L\jMJ9TMCKCs4VQe=Wt<6T>G[K8h&g%=[59VV^&SSe#eJEm]E#tV8'r\1-R4U8c(&KLuYgBN<9o"U3\0jiPdWS=1"Vt,Z5OfR7BZ9!b2n%SD#`H)IUKNMum;\k6g#\AU%VB%I;#Eo/.,Lc1fBQh@na:][Y43XU(:A\U'6;@U`#<F(p2.S?5uP^7R\i^%t4(*'`gF!A2$W>!&$$Y8<mapa-WK>W=E)nNsoQ!SqQ]h%[O=_lp/6"Sd&tX<2H8ai[S1t9OO"S>Nr<jP]($*B+eRp@>$)t(@f52Y@Yt'dIi>Q($!uH`dk+Fjb<iMmiKK*B+J8&aOkIVCQG__T%QHbH9>@'B%Nt(H'4a+)Pn^skeIDh;Y.4+L+?pcLIGVVWJ%CLKJ(b'#4!t%<1.jVY<!-g^B-Yb2h3m'37dY->,8Z\Ej)29cDR:XP@%SS9[C.$1F,F**kEnUcEDeJXZe[@.AiB7@&."T_h8)+=o@%j`i;W>NSa/BdBoC;u=$?VqS6'6ts,IMYWejKV\KG*ZscMQo4MEf?]K%7*mSW/PVN34IEL7nc17u0g%h:dH,UK,D&LK-;Yu(<:L/@a[2.U>Fl/c'@(dmk\J"[b@%Q#X(;P!Xf7_@\+FjD*f!j\pmb=H39%gm%I1N0+#kh8THjCL;+\Tf@?tU&bK;P06`5X]3FpTt9=>Hj4V,Z?fTb1oq'O;'H2N\f5m7QcZ6T7b4]Io-f(ReeZ/gIF*@t8i(-n=D6%Orq,>VXK.cE3O)M5o0RUb]sign:1i/rm.2@nqp9?\XdW(W8#'?*a,-FA<c@la9QREZ>J!oOqgF<X\e.K!"P5Scs6a\8Hd4:`51r9%/JhtXNC7.cC)Tb^g.9*WA:_/t:Lp)F[\$'%$dYr07I)Oo*M1$UAf<iHR-FIk@`[Ob<LrrA-0\;Pdh!0-Dh<1a=g%LN<('G8`&uUs%8#5Q20P!,:%>#118p8ZP!f9`1m$)sN6,8('&UI=flS]*`-,SmC3HE6-8r5<@'+@*#;PJ4EC"h<Z!4Pd5AenXK?]"Pk;$I=Q^?k>c%HmP3lbVYE`@\n,"l"4VIX!>lP-,[5$V,1=ciQD\t6,^"f-r%R-5[>]54Eu*CU[%1*c'7ATNt4VRdOYmjJ_*1u97-9LOCNhCdA%(=%*6Tn/TBk[]CuKZ_@I\ZeB#j'dYFUHh#'R^%]3)Z>CfP+4,pr_%PUM>*MUj9j3dHi[XZWP\0!t9TaYf`5WQ[T2osHD'D<SMueX!WQ%Wn5Aq#&PQ]R:$T9MUY,i@&0b5R4+R6cY$a4Qu3TI-InfXK\\C?Z&8T%$5fV2=KIq&afqP`kf0A'Aq<&iMf?*BbY1+r/6/?;k/mj:%W<[90]gKQ-9ZjR]Y[*[?&0AuU1;o*&,GX;TNA&;5j><A3#T^.(Kg/jV9(>g%V[BeB8JVl`FgEp5^q?MJ8A-=UKCbD[:;UKA4'@VE%/5\NqC9Sa6A56$-8Mr8n:k<F1BppN>%Fh-t!#4$/<]^N(0+A*pI`::0I8u"KTVF_kEj2#Ihr;PS9V!5=T'A5<b$q1S_;V9h-mZbH%o;.QZ69l8=;5[H2grQoGfRulsG2Qb,Q:`hk[%N1h8$F!T#5;jsT:H0MUsR^3B"%JnU/[GR,t`o9e67he`.PKL;9OMK,Ym.`L[R5<%:H<Y$Ihj22+n0BV#_j_b:U>hP]t$tkIf=Emr[aj@'kdXkAOnr<bp0Ltk:MEWlP@_TcWaX9%?Ch^F?O6@AFXoE_0a=##p1II3^5n>%(WoGYCg8Aq9!"ZFQ?ZgYBp"]sEu1pb3*+cc9bcLJF;#FjK-Jk^$p#fX^Oec(lHUqJ$WmtFkj^Pg724U91bFqj+f.7SFgU8@Z;+[a%fNG13Xpd.GUR*-!d$upL2`=X!e3^`,TUHRMF%u03caX6<9i?'oCIbh,*OGiPm6o"VaMNC0h?EDq+&30"_^e:7V8;p0#3D&skiMn_%F?/__=6)snqaA9IbbE/\ijjN(`X\GA$A[06QlDT#=Z6`/!HtmmVc]sD*7`t0il;=sFdmG-c#[F:W*L,6Zi^AA,hPsdj%Up[$2"c9%@s2lU5d2!.(CW`%9#E/Onr/0H5]6n4.3]!7#l1i$Q-du5#Z2`+g36GlRHg'c"U#iP0bMn-P.4b:!"1/Ei#P-7[EPQt3/kjkLQ7n#%SpT,s;IC=rNMAjuZ*`f?Es+jYbe,'"Z-Ie_Ej)6Z`PDWWS]IVrZ%@@h,sIF["p_aodRpbX]I<lDr_0#fJ3Pi^+Lm'q1+@X_H2T:>%4a;,b4M5:.h!j*Vg0(psGE[1)@;4_GLg`4&_'DI5;9:-l_7gg\]KJTQITT[aOc#B$<[q_s5!]oeJ:S3!W[?AM;XHbAk6X?,/.3c=%MNhXrMS<jp[mJp/V\gOEWhD+)+9o2$',?-K#eKDWmg>?Oc@CLHej871+$M,QDdVk0kUeo&]@sNf,T)+NVQ#E\[<+qo8r,SdQ<Kr]%e(#$e-2>>+%=3S-,(n?s"\Mc=6Aubl;$OqTTZoS=4?`n*@Xj7A3ZM\mdfHT-_JD;&/_eIreA?6j[i!rlQsmN_Zt&i2g<@q(#=A`W%C[/Qd$tnF>OM[LH`AV&<-?L_Gr"bEq^lUP+'!$Bq7AAXSdC9Ohqs^nhLfIB<drR!PU:4=%M(:MNOf<O\Ur5bKH-o8ZpJUcG.jfh.%pTRep:I[XZ;RRCUr@_[>_h&%A"DKh2@uC7OZ8:mXdZh\=5Pd3:hH)YT'Q!ksf44',U>AF"+-p$UUnY9@$Q-'GNX%>re2U;"cnm(5%[J20<4S&f3f73R;bSrV>KI*X"DM%*I:clg_J`=q<`$^l<j[a,p3Po!ZDL'I1g`"nO]9Tf\o_?8L_./oPB-F`mS0:^#S!0d_>`DUr%CG(R<Q#&F;G>6L`laX=&0V6XN,fqgt<XPPSU6r/m<*Vn=)pBdqWZ/MM,/n[k=]<tMO).eGdp0AYV,X?jR:f[L%k4Y6/fd'%2I483%Nu"$WLV^LJi@54u+Dqt9$W.hf(*@__\H6EBJt/*he_mB]r"j.Ki!lk`Jpq]rU"_>QLOid#i=&no:Y#:)%1g-iKa_REEKq5lj@pED%Uspd'+\I]2@M&j`Zi*!1>Bo"6(pr.gg!P(<CF8"[J=Wae.>B058(BU1q([m0$#Ts1SG7"!$JGi.CR2!9A^Hki346n6I@[7Ba+3cT%/Q)uuWD#<1rXVL)s%'*u1kJsO%I.B.%KDV+W_D+R[`(j$$[d4LF;nea^o]1eOsR8<C@qr>O.P].,!_Wl,;g!eQf>mt;UsS[.$0p_%'/s2Z=B,X,,7?7A*IWrokUI64[DD,DL6m%l<;d_#__6lcelZ:-Gb^1))rU<2Ihim(JI.tHg#AQC?A):7KQ6iJlIgV-Pq>+:2(W(C%BQeXWg=g7c4CG)QnVX0#cVnuC,EB]t0sUGQjS3<r3"j,^;ghB)O]9>^s+nraBTbthVMK_q2,A@uK2%'*_basoNhOPnL_PY3q#IZ/%F)$q3h%f3H4pCg&gSCXo/gcp`[Y`OciHh3?;C3P@WB>M.;IDf`VTKhtk5?`EF,9&>b+C.1`_u71*(;P7Q3oNhPf#F4.[L>$m`:)1%_gW`,@uR5SiSfc4Reg\pK?@aDN"-"K=m+Wm0H`QF172p1^6_Lr<.Qsu#^Nduh&M7l34BM1X]mM=4L_V6(7#!fA3E,]6uhSCi&]r<%WPc")hQt%^h49R_HiGtCUo^>8BjAflAm-oIiEaEM:GB>DG<F4Vp58a=*d;QPo6?p&oG%Tr6Z(u@A"b[Q.h2PFjc]=[K3H<&E<%iF%B%B0fC(l*9!ROZ4B`kt5XlHTE!9%&Y[!H#Nf'uf]J<6p?!l*SZ[HK.'qg\d#9S'mVC9UdppAqT)3=1$fJ4![`!.oV6Ud+4fX:Ba!%!UqCcT4bFl[W:$$k3#$J9K)Je\,S&JMYm=os#`glfi(^-lkKc@jR6hqSn+NQnQ-\1SSPKu\rm6N6sh\+'21=W,n%)2^#HaRTPWme%(2+A0`<"=^RG=8_e0b0P"$f\njIKS,f$RRCpDPBBr0%<<^g;$<CS4Alcn7TLkUR-.37NDoT>=lS!(*FR4/a"o'aGjhJA-dgK>6CG%"O,S,!GLJr2upe/lE@6FnQ-]\5Q^RZX.&f6%R;/=qW*0<nQ-]\X0)GKMCW$;]OBZ.WDq:FUf@=h9''qWmJgKbjl+FcHH'O0KpdnC%N=<AAf6.CShs2<<bh1.UCa-'McZQg^B#80jA-6tnHu4%N/R:1<YCX/tI&iqqWMV\+27++mZ%goT;p>EGA$23F[:[[Z\`R>OE*(iX%_(bg=fc8'[mY^g&Uns\o]@S_gmY^ns?gSt+G>DsWg_KF+^lh!@miG-iE*(iXrltg*K_JqKLV%"Z%sE2Z@(aP2EO[Oeo,r<?Q_0f(%i=:.PI=L@,+65BL-&EW4MYUMXBM<_o%V>fe`I4mhe7NlH(1n5*`I3e4\a8Z6bU2n<q4']jak\tE:#$KX3Pf6H_m:JT\1?]_!m.:)%B43];=5;sWAhu5+$aY]&ikF#0S!iZU!3Kb7\F7=tp6"nSp58`2,\`mWLr!D;htp((qm^05=,i7Cmd,"df?mXC\,HTsVfFWa<m913%54>Be2,RH1kCGb\?&sM)??+k0Fo/n>4RtA>iN/mUeFVmE@WjhNs&78(J%)#i:^0gmg'7p"Y1a+ZP(>2#;K2[B.T\6UL!&>W2ujk3%Zebru[>DZX!"`,4?qE;UFo2sZJ=pot:O&g4r"TH%6Z&,_iLr1"<u_2L[97RI)q6qJM?=EMeZVQm"_o'-`;p8/lBaa"4][KUiW+Wo%i)a+H9im7fiW+Z0l5+U-bl\`2`;p8<<_tuW2nrPo'aGkC"(%OeSib,(YF;'g`J)s]3NNWC\1@"=/-#46mS6Pljfhf+!.r?/mU;eI%nQ-\1K$%'l@:;(!=3]%t,$R$_KiuH%EM!n<Y3li/ZAH5'^=P',\j\0s#53rOSq++hO1G=nUTZWW)CeZFM1s[%?Z?'&<2T4a(T;KS%'aGj$CHpe(i3,*?+^Osc<"/b`!t_b'^I+:&?Z?&IB'jgA1[$@Oqd<@q<E5L?/+3:Bn+YG6Rcl735Tm!$Pg<h/<ucakXoNc?.UN8t%b/4!N27ifeU['+%\k/]IB/R9Zm\B'TlEgZ+=f\].;iLP+HGG1%[A0=mFiOQ#@'@*/on<HG.uskf6sjp6oF4O$fH(F-M8!H5f.`]5%qH0*oj;%9s%fBdNrH3Zo6XFciCS4A'5Se#HIDl3mL[#ZpliOST^Z#4r2"dj`p)^3P?8XqX<^%pTfTW*8GK"tOn7YWKZ00OslkKaJ%fM4`;`L]cgn5gS0J)^d1'mjgGLV@632t8?QX$(JBhdN^un#uZXK5-N37?g/HE<*?Z[omU3"kl@O1#Hbb1K1H>"kpauESkQ@GdH0O%&%%2-iW*ZdIC!6,&%.8/iW/18L1\7r(+OsOiW*YjNJa8hcmJUHq-LsT<rD:g["c9R^=QFEc&/4NJC`+L*.W",rFA-F^Z#6H7.#1j%1&*7/5emBuN`-.1`I&c3C>XZYM7qo_%sCr['nnq\E<$%@csN8Wiib<A^8U<qp6A'R1#H>\rP"Vso$tJ50!YCS5P[P:PQ1Z]T0/?`%eYoX0r68;EDO/%KM_eES!.r@YBBGmGnQ-\1Ed)KqSU%/.r"THeTQ141=f;c.M?BNF2ChJm:n.51%Y0;f/5b44C)qfC!RM>$ArZ+o%;![m,%R<!S^Ap(u[>DZX!/,IeCJFOEX2SFc!(%arb?FY;X2SFc!()/-.qn\>!K4_P!!IX!.+[4D?S287!t`NS^FXWUXl[o2bkG2Q%`*b*\ZVnSJYIO&)r9o81k<0!76XOg5#V'%.SV>e9?Z?&O.T^DV"kl@O1#EX<[T5Ht["5pM^*fRiX`kOo'7Ih#+K0+]GSY$-J&MH8%:ml(i/CZ$GM??+?flHakT[rX7)upG5WHZZTD;q`Y!9%&WSH96!M?=F<[GQh[i3,*?+V43,>oEPT#9`*Z^7%;#J&MEo[T7m[V2;tH%!!GW]^P::W?Z?&IJ`X8DIU\tI@FYB`FTp,j@ena9:hEc2HuO01dpmN#:=Wl4797fGoe]^o@^RI^a^K<+<lNuS"SRB/cKCe^CN)JC%`uB4`Z)7tV3j?JlQ-HCDAL/QOfN>]&MA9/AYa_*;P65^%+jI2'oCM!)YQ@+d0;qOf)N?'c?BOCHeem_H@C@@r/>\qCj)_Vf)ZU-n%VV";F_?;Tmp64uBS+nKD!'q?e)33FHWRf5pD5+5$mg1=QgnsNR<Vs3dcj'3$qd'A!Z9jmlbuHCc/jPoi.h7)a.MAE^_T#FepOl_j%?Z?'&e-I-R@R40/#JI(i`*[Ka_QcRtRCsup3r4a05+jClY0p:VmP@an^#Ha:efXT?jkoB"</83I!;N(A8_g-ZAGmPFMYTHg;s;pI%d/]^%YZKWS_=kokP(i6kdjFpK"*!@[MH#pnm(`K>re^esjTE<:>Hr@pobLO;J&MF2W0s[+42=sfpaZgS6,a8JK2At4]kW!k&.;1@%-jEiR3pqn&S7%ZMJmr<fo4\kb`;ot;15]&UT`MT$'7[t%+K.UsH1]ki*<(ftTV9B%bkfI2%Xl<DY@4:B/_!Rj1>",Fqf&3VKKk7+%iW'*Lm<;BHpaZh>^]=>Y<"=Ds!=5(#hso%OY;cNu[d(&q2"=We!,qc/f;Y4kX6/SrQu^n^n*OK2Vs9m]FoAtNR.>C7To?)Xpu&dj%-HBkuXCB<9KreV$l=I&#`G.i3;Sst1XAZn!"RMQ%T#j-VeDN`*%lEE2@Lj186sp0Z.uu]1b)/PeS?^M@M_JRN!P=VbSN,P.)YVDk%dK:TW;.7l#L2<3D@2p68;?nhCeAG\D\"bpf[X7e[]AX"qkhp4@JrTIQ*"TH6^Z#6,W)T!,0(;_Dg]M4'IDpT;6aj8p6!Qr7[\I.2%D'6$LcZR$H&KtYGB-Qe5dK]9"qd'A!EXWXO+,Hm'b6)UUY;cM#.^1S1CL4TMOkl\]nQ-]\@'%.![b>sbW-/"Q#9Y->-Iar-c$PN%%iNG3@rq^."YGkX\S#d*J`I&cs.E2n==g.W[YZKWS_3Vs$=>K;%dO+gJ!t]9uWkPQqNo#-*iNG3@k0f>Z"]e8OV<*&BItteu!*o="%YV&imb8sKLpaZi)^>>WTlM\cGi3,*?g.Ns<A(I!L%/u+dTUjGm?N9`\!="%m!RM<tb(/6=>oEPT#=(X.nn`i9`LsE%n+DB#K%1M2%Mh!/JMYg]^c!q.ol78tRoG%VHghe<]QM6ZG%/u+d&<+$c.DXlF2uit^q]8iJre^g91I0i]PsJb3hZp7::BP8SYF*Xg4k3V6Bd0aj%mt:#b=0#fW<uc`U<&kDhht@SgWWn!SXoNd*.UN8tmUiL04ubFtl*:(6X'Ti#+fF/$l5?X/Z.]ejgp"?rVcp=)!IM2[-Zea/2)lE*%@uWX:fL(?U'0)-"MI]b`Z4`97BWO>U`!Ie$f_s%^`rWZuYd[eDfh!#[,-YgKn`g3PUd1bE@)4?6ed83]RNr44N(kb0`okoQ*!4K)%$7^daNF9734eO_'<u_5-Ju:ZOM9+CR.`rf/S+nKDJA*V.8q%'^TZ`7"@r:5/2ujjH/>[m:7-.,,%^h/.iW/2sOqOhG")#&`+d8Ko%lhDt?J;.5qE=Rtqcr-cWiLr1"<uca0XMWK7l414^^Z#6HFG9[mbHgg\X2SFc!!43t8lIXK03p1/M?=FZCK.7F6N)2FiNG3@_;:&W%a%.oj^H29-#9]*1Oabm9Ir@@F'aN[>QPgANqoT,*!tKh"!P%\$5\#op#@UDrjmZ=k!:A[@$L%YO[>DZX!,,_e%]A&(FD^$@2urg3%+HPL*)1Vs\paZi)^>m",+ar%/6XMS*'27)>nHhM=S],!?\F2:OW\iU7#]SuX%KJf61?_T`?XRmK.h7)a.^<GV?fB/dY;cO@=Sj'@%*<(ft&CRu4TuGuo2uiseoK-G@r"TIPB@_OC!/J9t^(7YP5IH3]??+j-&tkkO`M'Ip!.hLtg/pQG:t)Z6!3Z0U4'#P\g>HrE>]oPP%_%BA%eQ#aPPLU@M7??!J=>c#eP#s#cePTE`K@LOc".hZJHQKB,l,Xo`bh9oU/_nI`8p45jZ\"I-Ml^#jV%P:X318-):U>Cg^b%Ek%L;Go"!5*uqR0`TsbF%6FTFj_iF*@nKh9;k''K5&SppJhpNUI0%N'Dm.iI>]HetOZk#(+=;:I(%iAO_Y7em""8g;I<;h\/gkW!pG=%lH)2>2R-?=pDPI1T20"Y"o<7)S(K7ZHNKYQmMEr!V&(Q("0H(:\F2<%XN4:K/s0q3_?+R`YIO&=Oll$Z9tIYFK>$9Y%ql=)XgF+h%Sg1Yq/+3:BojM?sf(%:KV@IslI37sX^rd;3!3>Rm=5<PdNl#7r;;>ZW:$`VhIB`H3!Z$(0K;MB0(&.Zl0.0St-:JH2C1=BVn#uZX%Z/0/1S<:L\Pf$gIh\/hc?9%[".>,=n^*fSYMULrd;[.TfIBP;M1I27BT@ISY=5<QHSl_s@IJB&C??+lg4'=P_AH*[h@'@*/2:,Tk%3n%a11Y=5GH[X45Y;,lG.0b.<IBS32e_e+#PX/V1T82In,PR\;/+3"ZT`#?K#'n19+"ViTUQiT$ESh!pg@*C$YZKWS_05+AShSeI%me^DPpJn#XfIQCe5X[W/X3\cr'rf4I=5CUZ-)#^GDn(IR2<_k:iD5H`7TjSkeHT/nNn)-OD2Qku=D`fC7TaMZeHX[TS3N![Su0><%aI[#1BuHSiltO7-F&j3cdZfrMX>j_O&M$XZH,/i\G!?JFT8(T^Lj*_Sh;%*=BGho$(%@'kc8/TrnAZ/`,=5n&lHC?XO4=GPHql@!%1h*CoNi<af^(q2j'7%QF:I$.)Zj[n),\;1m:$`Vh4T`ThJPhrb[APR6*[>N2YIO$Y:gf<N/m)Ts'ZpGfYZKWS"I+cGW2j/@a5*Z>%@'@*/2,N6.K^OeQE"spm5b$CVme^t!G\*FV]n"\==5<Nn9sK"LPRK6DMnS,a%p*+'A"F2r;iA?K^(:$=TVUfY[#ViZ^(5E%#bWFa%KMO2nMYfTiqNtttQoZESGEg'QESk,K@Nr^;Z:/tt@ZX[8k?%ZGcj7hKA"4"`(&'`)9N>%Xs)BrZ=5<NQ1rI+g!U/3)?88&c85's;%%C5I4g_KQD_*f@k^<,f`Ta^LLqjr>TELA'Slm2j_`I4q@juI%ClF6'slkT7XGni#>,SL(;'8+!X^=PUraI`BoPeg[GhhNHD,P)f>%(&*,IdlsZCK>$9Y%p-O'3SMDXESlP!g@)su@^!<1_[Y-l2eca)\F9BUhcGSJ,-RB[!s.NUXkk#3VF&ft^ZtN<0DX\pHG`c)%\W\H%6ng>r$Y@jZ:(:aa3*$JueL4H-@au;r%H5hC<XiGtEV:7;Fc6Of+FB2i#8)<GYX\^EauN>CMGdIhntM'X7B@nG701#c\ZIjD?5h7l%8s4?C0_HVR2)>Er'"%:E=l9g-QmP'/+<P`"9_;fSCTUdk^*f:7]g]gsYTiZ[5TA?+mX#C"b)srRFBRC?UeUIr#CrI:l@Bs>hCGn-%f2.t3.h2PGND!Qe4"XITPO;8:paZi)L'lCmo_OYiVK@O7i3,*?)JX)0\s0KJcoV#\q*#d4ekX[<lNsqQ^#Ha:M41HG49LPlU9?NV%!<_7<.n'sQ@.75;J:Ld$m6'XZ!"OLt!=8B6'n"=4@9//uiW')o!#d;=;ZDa<n5gT[.plPWR.+)c+p/haM?@hZ"2N?J+L_Re<t9`!%!?e>/.[<!/=I](9%KJeKZQbFJ+EVJ[Y;cO9Bb=!@%)N*@r"TIPGV.&p*e[mipaZi)L0@'c+FB$_?Z?()h]g>M&-E@;MYUSr"DoS0%5[ZIS=5<NgBT\LokU0OOoG%TR*,<5eJAGT4!!8ng40TRo(%ZjXr-coB-ME>o52ariC-WG\`;p6f<I^")M8/$M";7B2DUh-^1#E5A%b,JhJp4'#Fe\AlaqL).:j_KE7=^2F*_5S$jN`/eX'pDW03=V$Lcrg7(;ib&RL0%/Qm=J=JfX%,3RX:X-_843aC[A=ESgs*#^r^[n%,dS\['oB"[@g*Jq:fr:amUpE!%_/)/*1QdfL?4rQ2PaI,!mh!Y?o2Pm@TJX/='NVG%DQDb\jd*Xe<Ib_"fA[4!X4!X@r@/X@pcHO%UGU<6^903S$P\5Y.Dig%1$G+fFF+gG[;A4U3(43<%_K<lTWc;4=W)CjD*^quG'P?JoQ#q??hd,<b;/;HgAIQ;jpnrKn*/R(T".i"%$,<BP$Wd^oA#&A.n*/PRR)jSF)U@3Iq*!a@>n%qZ\2M)L?JJ#T#^X(jJ4f2[(,_t0D-g#j(NER^*F4l\:S]*5_\I2d5.mU1'd5*<%-EeMIaXdnsa>J8A5S-MT##dES_9-:;#a-`H$eOIU_jmu7(+bAZo(ld4,KrL?olEhk?(r/D9Ea+oC\)n1XGrsumqA3gIR((f'u?&X%D19e6hjh[eLO3mSlJ\:^;MNA-g\dXF=>C9[enal(iq)+gg^CPB=;q[U:ST,0O_aR!-\@PbLk=a^gAINV-6@l"le;9.Z36&<XR!:i%4b7d%)=XG;o)#7TK191:h\4Hi`C[:#?CTh.a6FtE\G"YST%G2>65mBmY:#iX%3!p.@"i'@,u_Y_bA6]X!p/o%^S>Z:qgfqYs6r+]%2SUV9Y)G_#p=fG9=Ut'0\_(]hHPR4?,7eJK[J;tZ6^ECgdVB49<f/O<Jedk1r160a4;ao3nU!-8#>^tjkm0HFM'UB?Z0\H:'L8Lr%m&Ht6Wn1!^r`*u@l_[iMM;"I2@8G?SlO-mI1hkHV?di-C$S#F_VFB.h1tMM88R"Sc)9g8^f)"N2GIFHpbV[oIQ?_nU>$o_qp5PhP%BfpiOgK<bl6%l%*')"2B[D$Y3#&,#Mc*Z#I;Lti1*3F(Zo`a?>T]:fU9k1;DNXp`sl[%+51tMMhEOud%)YQ%J@:+D17/7GmWS,9p%?dNMm3"%ae2Nh[$3&\7S/&]UAs*]<6*j!c"Xe-\!*.GTrG&KkKlh'J[mam@-rseu\m`k]UrU&d_beN8Q3W*d^lh/<I0-<u>IJeBt%XUAW\B0lgg`E7;%Z?>X/WuGFq#K8GT"qfZS$?>egjP?SemiFo<pF+J%8!2UjML7r/@!pkYai)ltp2'BHeh6,s+u)AsdHbI'<d>=Q%j$DBM>.QHPCTR*"YA4RC)QQ!alPbDig+3cGg:!ZPZ-%^%Xtf.@c17O.D$tY.X$#V2)Z@Ci/GHcf2SZ.EbPe$8c0oAjEc8@%;p`oo%jZZ5ek4^]5\_klDq)s^;me:g?ISXI=q`S4h5U:33#=Pk7?;G'sHQ?CUf?]iG?9d'&_p`5.&'m.ZrJXnIolEi65@^"kQ*Doi2e/,"%i*;JtcWK:85M+uh1KM'<cSbN/0h/]L(Y@gDe5j-;d5Lh!N)B"eFDZJ&A!HjR?!FOXg*dJ4caNX4ND]-<FDZJ&A!FTjED8_hA!?d4%?(9/%`[:GJa0k_+ND8j8FDZJ&A!?dQ?(9_M)s)N=gZ8)b2S%_m[J;tF:%%atD158jPP[LKS);]IjF0nVk4Q)>\Q^3.'Qc/Y\HgPu%o6Y5Ah!\pGr-lX2pH,rE^S`g.rLU1:mqGI9^Sbl=HQ&+'n*/R(T#N&MHb-XN>\TBaOB8m8n#;7d^Ro61HWdbm/e5'VoX*dsLeF#a%T^PTA,2j),J8Ee%pH/T05'O]1H1(P)f"(,2N-!V"\'82SB:?H(^1D1piu.!^Vf.n`R*I7,4ajBdolN[6lfm0b[\mc$gR`sbmWppH%h"C=,EB>CXNk:=C2=;SJA))5!D/n1VRGtBIDi))tc4G1_I666WFCr&Kl!*+i5+WAS37G@Q/POInpGP9MJV/\p,AABjQM8hKjh[ct%7EfWN.[Rgj'^[*AVCX=c73Gm0ig!gifne<:_u(R0.UAq+,VDlUX%-hM1fg?D^tV>"eHm],BgerDlNh@Gek)Uu&bH/?-&H.<:X[_(%!%m@*O,It%pq/:1Jna.#EM9#El.JC%PY(bVKSU7N:iBg8$kVs%/VCt7Sdl)B8Wni,1*sd=GUWDW%5$ja8K&'LDctP.)P@JY&g%du%fqu85;&KoKj']2M$]&HmGso+!]Z%*g]g]9Fo+oqO_e0$,h1/Wb=TY1pnX_L6Yh6E9mZfdI;E&%R;,Le$'H'fF.NqOn^D4#%Ck5A9%Ta<p1-nsg5n4F#99lrj'>Y1$,-1oK*/Iee!%Kbf7e[7(3_a%K%)=(Wt-EpUNkFeJL`ATDPG69?Fe!1%FZi]^-7=_`fj&?4m.mVHQ%pL"'#:h6Sn\j+XFeQ>oBS1&t\;c?$q75m&;PJk0mJ74>>>D[@NAH34a<O>&?XEZmh.=_93iU&`Y]0D'%`Zc[>0NGcT:LOAi8apIY%K5Z.[fmXur%6T+`1g5CBbint9eWU8>?dCT;&l"R?R0&]'4ohQ3IH66ZPCC,L-3,"&ddp#EBr6]A%,8'Uf5&J.7h.n@2IQn!Rg3_f%TZ%l7qBhV*s-//-*pX7BRVSLG,g1=-&`&bkAU4ksnM<Nq0Ggt-#f*iVpU4FHNWfXuT5LPR^0]h'j%YmMC;pJ`)Pr5[kE4_<Qm^g<%^:7'tab6b[!\9ND*EmCF#AmTXgXl:r!2D=5#P_1nR0%W+bbVJ/5$iUP/X'Recr@rf2#]<cj?H;s@(O^N+`mKjJMo!Zifh^^o>kb+%q9*49qTGakkHD%VL!Kp7[Q_/;Wq]h!k<:I9@Ees(\LH5`RO:t:@X&:gnM7D%&/dJ[?/B'&2C+pZ`C"Ad*,lI:M@%<[R6ecR]E_EE%5Rk)oif[cqRaR^o6n(C^^S$-0S)6Skf1JBY&%2?e%A3`r>fIr8#\sm+?uY`F-4f5=kE!kjXf%%HP0'k=-j"60f"jb/EmP"\:1ABp%Jna?ED?]kNiXf@o`065sA5/S,WBW?R8PtV*F+?.]W;^%qX\?N>nO\mP^_b';T6.N67q)kPXb9./Xd9o2Yc`9f_><KN#(3/$&o^d/%la/lV(O[lgg)/mGe\u\d>IW+cBhVB1q#=3Zg77_5]bgZtRMC.4l8$-LkU+gj`_8O'8p6fYC;LYiLKW"tXlu,Z_j!@@mVhY@jk;p6%F9DD&cgq\f9IHj8Kd@@DJ",E5a^arn1C\`m,kF!_DN;Krm,FH`ct)#N)<sLlP\+>)ih2nr_Wuj'`HhWf\uK[&3aMa:T7s6Xm*F5s%'_\M8.M)F+Zi(l+/N@Z#/6Zu:m-qZq2:M&?^s"^p'hssDVeWlB0*?<E/-.(2q*=.%5Sk`a7]gs*iakFj=@^QsW2)1]fLTSgW);)4%'*8Yu_Ba6QL""DN=@@j[U_7GckJ;8`_@j$RdjHKjep!mhD6P5":iWV4V[5AF3:U1o3-<k%->q=l14oI=[]uA5=GTBaf-VPI]VQAP%Q9\=8jI7GAk+XD#mRCKH/F5sIb<h#raB=='QUC@7Ba^j7e$14Mr/'0;Cd*\lff"nW?:RM-&#<DN&%TH:AsgDtRgB82TdCiMO<K_+%CNZ5u_Gf&%5S9O*V9[8]90//>QAO-tW;$HQ;Hap>Cf$N$oi0>ga3Xu9"<@Y(]+(X_`2:VAA(MGFn=5G0)-4EnRnON)eI+KtMm?#k%4])HFMAj\EGVMhnjA[J^e<`+HUh?o,G>co+UKA;>M1Yu#73\gZJW2FO@4`L9[!JAokn*R<`?,/KVG'C.h:.Vo`i0>A";<O*.Y=(X%=r%-u9\#&OR]`PYG6cT$+bSQW8ioX`amF1thQR[f\]BrTkI1Y.C>#VnYmU%X(-77BB>MPV@"C"=Y)$N%8T'4jA_+gidNu7[U7=[s%`m`!79qACf`"F.f>N&8$I0I3/'3A(q1&ur!fJ^:(9WDJD9:$(0G*KuGC[^S829B\kImO*i^+j"7gHAQ5qFn'3fE<l>?l-)-jN\U\%9kT!*B7fYufDbNF7j97baLCHYaW;fGD8;P5W;.T6'LbkK&dDpQ,cC"e08npTi@7<UZh/:\ZQblD)pa0V`$<rt:NKb>+sEaaC1]eC%R2`csi>f?CP-a7nMCkm3jt,b@FVe8R?9O[Ad8u==V>f$)Bh<oa+?O,#Gc.L;VXmiPfK-!D]8stqKoF`!ON>K+g0#s%kg#$ei1<Kr%"%aoLn(jb$b[YTp<^)O9MR)TS*:qgCb9`M.Nq;:KPFc>E-AbA?g!TBeAR"'@W9'j:EJ.0:XlYh:]5Uk+S-4T&P09?o[]YAPG'*1F%\qb4V`R0lXA:rPJ@EWV0o\IHYZ<4OZ8Xj<G[l)2n&r7Dbrm&I/j-4)CYN.=brKAL>H5r(W9oiB(VJ3S[H8R:g#1fX+W2[lMY'SNl%GC":@'NtfRZs$U#.U&gsb/YlRc3fXB6CAXTYQ=j+M:9+/c@uGd+9>kFmZ?2#9gY5;"TgE`<C5f;/g;79Fl-A,aX_qs[UX%1o9+VJ%S&KO0Bp24*ftUd<7(n,em2$:0aQ9ZQ0jMR2JO8mSV0c@j4mL2--p-9BS)NM<o"*h%QV,s!CdnSu"BP>OM,Q'@YaV9%d,I_/L*rmH%0R`!:&7u?@6pcr7Z;###86Q?H3W[\B(34^JKWUh#l(4JL)2?Oh3a/:,//+dT-b\Pa8GpG+Oc+TB`8@PZ-W-ror&kue.dAT-^6Qgm%g;e0o$TZ_iP/FAK8r$CrTi_'P/hc?&/=)@gZ87Ylme4I<52q33i%qQ%D$W]'d"GSZjN6"bbS:`$OnW8J?!c_"JtmW+#glAp@id3;%^P''b..Do/`/3tU..?e6RXsMff*jhAd*;(A0B,\*psV5d%fXCA%p(s6dpeGXp6>1P9Zrg&l)>5kHHN%)AnlT&7Kn%@7TEP=>,+iM%a6L1cqcd;<^jY0[>h:g!Y]0J'&kergKnji4R#eW?<hdg].)Nk76So_,i7_-eqnF!Yc\n*d"EPoG\5os,\7M/<&gl@7hFXA*fon]]%9cT2u[c78D@EGL;k/%nc3caa<h8Ap3/m[UJ/EKf#4'^Pfc2D_U+r+?DM+Ccoph4a\Fi9<1('Bl3UD^=C9aq1H/6AdrBKM"5-&r4V%&EOSUEArNh(TL^5=0tf>%LINIll)6(E?hBY6J1QPj5-2ljZs^mi5$=+@@:e_3p@YL]hES/6`:iaddlrAIdHt&<0KJ*m-_"a'!c,)%kho>^`@](S_6(aVbJP?*hll]l^hpuT7ufZ5OaD8c(J#[pHM]%5._#;":"+.njgGa[IksiA-ST[1grKs#"F4+Xfl4BoNRGMI_`++1%0[eOQ5g"&pMM+\$!Ho&IWZ0>u-+Ti>Og>RJi8ROb+U0W';H[IC4gEf3D=_;M[_iEX6bmUCYk1b5>AdW(8?djh-rSJ>f>*W$)`]bf%_H'I"FAG]6$puNFO4NM$bJ`Vn8aH.c0:!((*5dUrl:GUIjYc(EM%@Z@0>lT0Q<@uQbI(US*urguGZE)4iL&o^eQF@RV,qQ'QN;At%5A'@88K1>p(:(%%M%*3@qJp5I[+D4DRTRGG_I@a:jap(Unk$"?o(!'*$sZ2-H([,M-GF%'J`O7j4YW!;Uq60Rc3/L#:BmoQNl+[d%`S?E,CDuMMU$c/8p;W%7'lu1#TdH.rfgmA3U2VA&3!N=@'k2J%R&?N+l'e2A)1n9&*idU!QAEqaPK#IC>dF2A>:]sOVK1@;TWM3U%R[3fm2n(AZbr3g(X5),DOpOp.LXO[)F7E][kCWr!9@tfReMUe?\<N/11*L/EZso@n1Z&f*[XH(_Q?'#EgoRTJcqC[c'ONuY)f>>h%p:R73,.gRdPfJXj8<1e9'>/^T'"B-tq(S,JgpJ!/Cl0$%/jUM^HZlPG`;-pDqj+W69tM9/DT^+KR";,Tc+FmEUf;EoBu)Yd-/_6g%9giKl-EQl89l(c%Rf>EJUEqH'UJ3,<X1F+2hZsBrNGg*gL[sH%XFa/]']UM?$b.$t?LYkJY@I*2>(*MpjCpV$IS3[rG3h)nL0*6u%biYc/P;C]MYg;E@Lgums.\9O$W#]j%Z,,i[d*\Mjg""g_-C&ESmg$]>gVQpb\C)hY.bRCimk>K5"Y!s"r5^laA<H@q"n.p)1X)9^%>^3*(poo=mIQ=Q\%DB0leF;;Zq]jQS*")s,N,f"W,;EaK/FJ#-D(uYhgVdDhM\%bU0&K,n9g`Ek-ED8bc"S,OReepIUEV6)UIlo!%Wulhmog3]CkKm]j0@^U7*m-S&Cf>*Em<jpI@AVbtM^b:lMa(-XNp8qqjP+G!5HCh'Z%MWCpX\3!*+RZ,8$'o!k8Zj;Uc0JO:p5Il%e%4_9TUZ&?Ket1pK0&fp.bdLCkgK5Lpbpf3FiR,NNqgY$,JZ'"h">YMD%Ql*1-Tnb_,P6+XIj&F((GpuP^)Dh.)A)bL*,!_]^&=$%'pM(el9!_B'-fA&XGjH].RB_E>S4@3o'11"XIW[aIcoJK8:%0\P)#^.Rg5s8Jq]m5kG2EakMT]Y8+ct-F0=\jB5SRW3Um2>_O5ao%Ca.R$6!Ig7+WuV;,1(M;_9Qo8RXg;m<<^:b^]:V*Cm9Z34!;(0+&FkJ="Jr9`r_pEh<#o[MO,%QPa5<g=Y/@^U)'<VetNqNl/#mk%]l+-6OO9"q_N)-bAurO;@`_=kW1brOFV`Y)LsWGu/[&_E$TH\\$UYFC]ii&TZXK]pro"%uO!F9V%d]U/R!QCM]WBZ+"hVgDNMMkI%L[0!Ko_NrW^-$,CF)>C@(tAJmYpqnN1/[o/oWDlfRLbW]O`II_MR#.C3#2rnBj:B6hMN3.a3l;c#$cC`\+p,Rr;*AU".ms(FckGR%MiZRMJO)IfnHP-ele=7)au6n%jsC5V52^8$:HrpL[,oQt"$T'22(W-['44g?-^GbhM<ZliCl@Ui4'&dTmO\)S4!9:qg+_"2*j7JA%?ruEEJPBs+<uf3u5f9(`Go."GQ?T_&.N*OO^-gZa>C;dKAW*@2\)FBod0p)M8UQl'LPjG(hOnSFCaI4f)9F`q-/h=sc\$1:Zdh+7%k#B?nVS3L>Bh/noetfXlePA95GC_,3O?e(k=[2</-^Mop@G:9.>NI'Bg1A2Veu9!U?:j*H<>H7^\)g+3$%W3r)14cfnU&2GQ85pR%?>MLk"@3g`L8Y8bY-i*bG"B/N)`5(kat/;"4LR2PNG8)hjGd.)*./M3(Ul]SfYjf\['AaOH-"EEOq2aL.r;LYBU1;%&B96T(q;^"%EuHVn]_Pnc?US=W4dl<.<').E*,sMA#Xs`^rnP(]El5I1LQPgD;A*lce4_]rC;sH?oZYH#Zj+TZQ(j(.Zp(&RY("#G<Dts"pC"M,%6C]%>j^Jmq4<1RI6b.3:0.l_5b(,b>cTnf>)G7@W<[EfR=mP/`T!.&mk_BI'[+,R-k(JM_*tnL+]$a3$'35[ds46K-ju.$$+-o5;%))/SAm)V#(37IA@!fcT-9;a7lf"LG4E(Ia)6gZ@?^hWTU_-iJdgSlM_ZmCaI/3&\DZ\=$+4R?s??o4J.)SV$RA<0FYDqV-*e)S4a%)`Ctb?@;2s_A"K1huV*0>5:$8-0@Zm9h46EVQKMe9lCu+eq5kgXYD";UKU.eWe&Ahn1YZu]55tVQL@h/%Z)1a>Wrp]L@56>.EGg9%hqYY9'A&?&9#iXD7IId.gR'Z+4C5%J1]h`C99eOn8+ACE9fVKO3R?I(25Sq$N%*)n,2"Xh*4j'cZ:8b#h`&_:lUH43,MgQ"d)pFZ%L690HndViFDJn5)?!e7<p:+YiReT@j$"l0"_c.U'"dY-:5(?[Tfn/5L0$P/D".QUa*l?sl@Y^(?::\Kt_aT)<%D*3FDHl'5/*SoF%-07Tkbsl3t-a!&:c#"DRdXa;[V(57i8uJ3IePm+!LgrMLla71,8%@,=X&e"reKpE%3Mk0R$lGT?@?.-=7:$2o'F/Y?P$-;fKkJ).%+Lq/R/LW5G[NsNG%D:E7@`1&T6>F09nG1t#9r<;l^d4"cLKH-DA>>KXrc7"VoW%LlqcDY&ZOrODA@!uZNJ%^afif$>-5F2Uk77T^%o]dkP+"*+0c^k?WVgii$4"9A**`-O13$6X]gO#7ZZ:+]a#YH7/SAs&LZVD<FCPb=&a5sOgCN)n_NLlRFiN$RlohWhK)i)jl2I<4/%9eK&3SDnO#'RYmh'J:m[7O>#.ELD\3ZWE>e\BO&7#'q[T8FRZKV7j6m?/E_(;_"P8quh>b99jcT;NT4dE-DF$(W)=K:S&L&.tl&`%R?hmBPcF*GSuRDpm3ADrD/HKR4&^7#`r18IEnC-YPr=FE%uf>V2H[UtObamuABhG-T0nJ%nEa_Kl_=54^qeo`CYTB0)=))n>k@2=%pLu@q)p?k1M]"s$.sJXPZq.*F7lFO!#gV?88.2W=V>_r?aRuOrD#91ame)ub_b_8u7]SAB8O[?Xe%DE9q8AB;2Lo,#QR\&?fbrFf%LL"H4i#)nT*7;\Xe+&<,.ihmUFqIc%?qI3S7DlQp)llCjK-=aN;&9,UT:3P4iG/kG%Y)4"i/JE"C#ol;'GN1]CC$c!=ss,lTJ=Y<%meU<a3gC6-AYWr;c6qqg0&SY!gr/*:F<RaA??KtI%j5#9l3gl,<s%E<VK@.'4Y,S3f+3*nLbi`1g'8UMMDO%6rrEI]gE/;mgpWPZ%J.`%:DTVpQ,hCqc?ou%Krm%oI;X[h^b;P#;iI.M-0:G/;p&o,2&d^*K->'N$n.b#JPsJHkeuWKZOq-%DDj9B.'U\8"2@1I"(<Oh"%TEHVCT3gpHI4r<q48-'=eW8@e.mP"tZ*]a^HOHFn'Sio@j+Q#,jnsfK9D,p-%[H*B@j/7t;7#WY%^\W)>G(WU@La]Mf/gXh[nU^]%q^2'L9a:B]Be/jsS"t4D]]HqkO2>*]lmo#^3\2XP7114;NJ:m8qqs<0:5q-gR-H]G=;d8ChMg)R)0(i@%_4Ze>*i3DC@Z2J]$q\:%2D`d\5'sElI>VTX8e4;o8mBS%"\"Uc&9("QY@@7*L=4Jf:NZ>1;Rb/FN=pQmkB^Ed0^gia7>lA&#b7[SR*&9C?g@M$">BRnDAI,8%?@j#,p/f8f<3DGs$Jk#0@EchsNf5CY>b6puW(g/)FBYX6]NC1!?d?)tiEi0`cF2#nBe,['N"?d4dpBJb-ASigRkNs_-E_A,;;H3e%>XQEj)',sWBmQ.4>^7a#jVd`k]8!kI.eN`#9d2pcC672e$`],Z4JBctcir!oRTMYR-N)/n9p,(JcXZ9eTC"O'V%Y$YV)W,\P&t$l%UGT'+p"4$9D7iAi6b/7umoc62c>[=!N9^/RG^``+P2#8U1n'GEX@A"o@(\#-K1@KAWJJ-7R=r0a-q(a!5[3(6E,dY!.+;:)#u/si%n-<q?DD*.79+U:L#/_02.=4\U>F+&L5M59h3,0..NteosY<9Ebnmla_OtO9IhgoSYGGm0q2&tJ\XCZ[#H?__UVR:D<>>:'R4,4pt%r:N7,nrsOf0f@>5<ZWc)JKW$hi11WgL[,$0o_Lr]f03KBDe`0]"F]Ri344Ks4L?H+26Q'Nb<01rbOtnFf#1uY?]F0UH4?6sr,FqT%qcK'TJhgmjI)j:\j_h=EZP2=&,mIW2$.N$@.6F%Zrj*oL]2?H4k>9#+_^'R5)Uh[Q6^#+dNUpE7*lH2\Po=V(>7"#EPut_3^.Cp0%h+a](@cfG;ndqICK[C$b`bd1%;&9eX(p/qR/kE?h@Zp*UHs@6%1Otued8HKMjsnP9nU62\jY554BkBJPCk8ZQB&j%AMDI"+7Z$t`%@4K&FF[`U^O(-sY;K]=lGoMiCN](pS6qp!?f?PjKZcqCca6M`M_\]W&*S"FH?HuY*Qr(r&KU'^!D-:#<ONf1([0HWX<hAA\7J#Y@%.b7uX_8>@[A1EEVNbTZgN@@;4i+a8!N0[(<[$\Q#4Jd\h^P=,d%Yfl*.aO3&kE,'/BH=7.^`GHTZPb9rnl'Q+\kMV(E.)cRAX<Qb%e>s3qL<.BP_SM`!2G4R;I*.K#q80JlE'(&q#P25]l"V2_:S+H*N#.nU#+VR%=E;l0%(d*X#O=_EjSE,'[XHG)pXJ!,@43.0_sOJP%UnT]gBc\WTHW<)VF&K@8"]g`7biPXXntD19Q4e6$N+aBN1LCKNV'aqWSQ\S20r=r?.Cs&+&Ok$6!c0L/k#/`QTm5Qj!Oe5:4"#Uf%.6>`g?o(6<7d^T%'5%ZV9cnMl[@#s11BlE#N[h$_<>QTao#PF?FlKn].10DhOGu$\luZ;Bh&'(@Xk/KQJTmrLNACajC.4U[HPc"E%1FA0a;^"V5s+2!Aq,2b@:rjtpi.]G?N%)Q."Ag`0?prC^V?!+WmJ1jX&Oja.!pi6.8p2%KFIXeq/ek'[M%N1sR0%3%kS#O;'HLfn%YRADm9k-ld`0`YBe+5R@,D'RB'Hf1tT-,m9G[a>I[cue2l1UVr^c"Nlfj6dR$F%cChe[k81BlE#)=P"Ja-d!F]jP_@$-/G8CqZcc%SK5b=!c2^uY#BX9S127&4N"le4PCtUM$59H0A199m"FmUqBc%+h]hsblV9@9oXMOlI<s[IQ;`jt<i3^pQ0D34H?,#pGuW(:iNr*$%EbCsXTZW-T-hR)]*)H.(9[2`%p>jL].6qHb/rag<mDP2N.f6\="*$`SntZ7cG>9M=p=('Xnu,`4-L^KRc8D1-TW2]`.?gArY4Ep"%WccTt>CJK4SL4T>C-e4TbtiJbo-BBsQ`J6ur+nZ@SeRj_K\8Y;k[:rEVA.rP3j)%+rR@3VVW:V->Okpr4h3@E$;fDAF:#&OEfMRP%\6QZ1S.%J%kEqE&/_#A7g7Fhp8HEQLk>Q=)e/V9TW.eE:]fR?\k",S'PB2Sq"*0DN"h77P,n1CLS[_RJC\i6hM`k,KE4,JDG7)Z]%!aIUnfDCqJ8fguJhXr5]GZ''lQGp6:i-CJUeVj.T5B/e75h.4C.]Id5PQKW1N;M,!B]nW&LQF.m&&&`?poc;pn>_\m\K4)B'1"ba%T?TR"V*G')Tbpa-La[Sp'OW^c=,S5tkVuLk>pooB*1fthEM``J:^lVSKG5G>$F#qmX!/-RFIXeqAr<_q`=n+Vc4jZU53c#T0uXf=%$F$oX9gOT94uU\#@-b?]ALB+kfJul\XnC'U\%%gkcC"`M]k0qAN=11$S128)le9kQ\6(PX1BlFBRS$O:,[/fj1BlDAKl(Rb>hGXn%R0%1WqW]Ss6kgYS$EsoWW8:*6d;c#`]24HdV*l"<B*tjN`LtdS7*mY8O3I6DTpCMmR4e`bKj[mA,pmkG9E@%MoJL)%MN0IrfM'[o%R#*8`3)b?EqKQMc4_G,+[2eWn):+]PCd$<m)klFg!ObnG]=loS-BG6pbFL`RpelXD=7iW8itt^FXf]lk7A,Gm"k\lKfG@RYHY'BA%e9i^;oqd&e1B[5U;a0MiG:TTV=rdB]e[8Y=,`gZ2^D`Lbe%RY?7.AEe!b;e2qmp)G6-#>oCqb)^<P]l:N\^jk9^u@d/>D>&P/HC:%7(s^F9[@[S!12sG>%S@0a-QjDdmICI/Z*dP9EDSfTWY&5e]#Oq4L1Ab?%hT3L5dhiaBB$q"h1NmDLBPNlZH[Z^Ki6rj%BEY>0*Sn%gVkr4I*!VVK8=/okCSECq,2b@:roMKh1_imN%)R)^o"/X(D1bJaWklbeJHGf#bLiiJBWRQ=)BT9kSR6Kc%52%XhKmi@n[r3j6Eeo%?UW92V#Zni\gi7S6-#>oCo6E2$pLA0i_0A2?VS$;Khj+g3)b?EqKQMU4_G,+N?#.r'[N./ZC0pG:!`@+!*O*sh7i4n;h1uObFRtW%3E(I1(\FhRj#BtfX\@#_7EL??H0!"%jQ@j[]3hbRT(u9+oh3]_rt\%)?Zgr\f49U3L,E+>:!KW..g=RZ@SkH0V!'d:J6da15s<k^%U>noJG+faPPDpu:c4jYB79>C*V!'d:JB\eSQ#*'(4>A1DbQ0n/#58EibEi9@dm77k2Bq?%;h/_<W,'gfFg5q`!8C2SY'bRB`Q";I%Cnls#^@'N>2pN+FlNLdupg,CZj%KK^?IZPcnAT_<N6*;/eDcP3(.V$/nYH6]To`!nisVp:),l&k-q4r8,DqL;"k\N<:iA?<kSTLR%0(blIbn7cJ?ODl&_5Pe'7*mZc!4u'dl9n,V*G5_`RA-l?*DppK.DRPMUDhZ;`=lkkYaM5hE#hetS1263ICqJoShYM$,K6.s`UTc)%fhD%_roY.tJ8LP@DNAt2.DXO#jjoK3S128)/,IiKEL\JnelLtF,'h+p!pmr`ljL.prNTFpC!OZ)]f3id*6#_DMk%2rh232L^u^Ec%QH8TP>_d"a&%D"@!tMcdMd=\GAC4ElCaRPY&=N13-q@l,15q?0$]J"p?Qp-q/b3SC7LSTP9BDEdRo[)6Q<T+S[gMl,/A&+%mZ?bg%FQeG@KX9cdWr='fo\:l>:oKDqO`dZ[*tn85.DRSn#99&];apSFW8gVb4qjJA)rm=K<t^2+6p5mS#VaeK*lm''22"mh5G`\g:D!W)%3_UsW0r@ulneoh2HOB7Z:XuMjB1,PN.DiP\*IEe-S"?)3j,SY\s$;ejh$UR[VhflSeDY'e..664Z)7TZX=5FeOXurfRbG;NKPqWU%.1%h<l',gV&V5]q'Z8Kh;:j"+o;@D[6PC<FQ9OlZ:j)aO&L^U[U`l77dT=be+p*I5rk6$6Wh):toKmQ$3<rnFrFat$Tbj/CHbtDq%([.j]:(`%I/Poe4W>@*7c^uB_L$Dd4-ep?SLd+<2Qtk:sDCnl,T-=>1Fhtt]4.@.nVZ>WJoZ$_4gaU+L6G;'N,5)]_YR5?UVagS5%,%-Z.DYoLi;aeDPX*[X]o;@Cp>5n7;Q01m`h3]Y]]ri1Oad]TWO/L'c-E;E@Y<"m.ib#)b_[?@id%QEr_9ee^rNX_?MS,Y0RgHcj%d$]];JT*7QpYsAueEhkI7Mb>XiC4IH"JHtLm;Q`.,:aU7Z-Wh@0d<;##a]M7!ai<f?Mdk9:4Gp.B&$B\F*f$X+La*EF#Vhs\n#)8%j-mJ/SjVtU$&/FEmQIj^]Z1ahq)7S"<R79]!_g"d?l7&jh0qZ>Z_meqT+.^*PbqkrXubj8;h3.(L\CgaJX"s1FOa1-S0E>-3c>72%kE!O%\eYtPlmX-o<7?_fKuf@#>gAPr:D!W^=+&j_>RA4;Vhfj<CY&E7DgQF!gA"T75gMZ4T1:f02e$Xj.DRlgMG/f3KR'^7TQ@":%h^g53Ytt6i1psZfLk&Y--iu8bisXF;k>)Zj\Z%*V@R`e@kt7tI5=G\rRQsH.r$#(iq,9\3n(5_RkPMstr$`i*;:c*dZ?s+dr$`i*%!TaXFL>M5]^n2eP*;D./RdS]`i(jpcVRg^3$PldYScX9LqThO_?XNptGDbmXka#'5p"!:MlmX,$pCf?+nls9Un>D(mmH`R\&FcTR%J/.D+L)'3ULk&NVgRU30:BA1,eN4;W1T(6/XJoE*`A=Cth^ne3Y:<pU&HQCA\d*Dfr2j&^#X"[k\274>"+8oneX=)'2>$B)s"ngN%,O[>WmR$Y!FK\%".!0>nh^!4o6J!@8g;BKWH=Ji0@^rOo]2H/<KR6$rdR03<Raf\.L'B6:8!,fgbX&b1_tEfAjn.8R/6)IP1=*=T%bR1XK9I$7\r.q)Lo>\gVUn^<Apk64&4!0C,kUf&9$#k]p'ELO1H!^99Wom.i!=lcg7G1KBFc_\Q8Cd=0L]H<EPgX+fb1ie8eQ:(h%+p(G\6:&OEiO3mAP,mbA&HTTj3Dbod6lB@7;u_g?R6:`K9QM9e6CEj-BMTF4*I!D19h2*%&Wa!OHhJ-c0LD=,a*i5!:HNn1nBLT$%CGr?EeaOT'MXZV&:>'[/V>'ZLGP2^_0WSrW>OfuX:$qj-,%)t;1q+%BjdPJiaeM)-V*L=5(.l)BrPG$JoS5o^NBOXkBr="9M?n/H%HS+sf^8IPe70GU8^*NpPmNh).P=OfjJLq>S94n1IRj)sga&n+=YG)VM$LeGJ.@])f\6ho1GDbmXkWYnd]BUX/']9dr-nR:"p\$&o%:(]Z'/K[.5>1/3i70H:cDesm@ScX9ad_"<ai(aluRJa[V1h'5m!Ni5CH[`o)!dq>EmbF"V4%8pVe_bXM&UTB@(^nm-Y.KsKntaP6%*k*IKZr,QCHehuYRCq3&bj[rk1it06O"b\>6@UP,Va>SUFCue9,kNEMD]miZK>%&#1GudQ\='n@.,7Ljh&s)eOYmWNBkRr#@houX%d$R50i5o.4fA[1)dd*+HV#`RWp\n3?4[)VT/t)\#<AJ:H%WL1LG-j<H-eu:Tce*s2?>Bu;q(t9V?GMAkk=bo"Tnq29G`TI.?*Ygl%*G5_`$Up:.>>&GEe6_B/'HLfnYaJs$UD`kCgDtW3d;c#`]26_,s'\Ui;2gQWb!.%o@S@i2l)jio][*MSETO:h+i,sA$BRsenbM,4%>]i/=$F#L$ZN>(CSG9CJNACajHD49k[6;4;P%*HF!Oc%KmAP.Cmj>VeV>sgRQn9tE@CYNrj%KK^?I[%jZ],d4j#BtfrD:[e/&pd>%GoUH(YTF36\$_P<=,*VoV?"5)SEab"GCB+R.DRPM'>KjJOe_)5!B/iVY,Ho#2qOWW"k\2A>INr]IIs$Y^ufF]'(EM;1S-B+fM$:S%OAY^`?$jj2@.P[\q$,j(p3=js?o(7$d($EBShYM$e&,tmmF[TB2'T]d?Q<8WOS(0^D1S95"kZuln$ZrVR0%3<>4,W%c^=iN]qTH$%*QOQLCi+=+@s#DYXh/YoIQYN^YWCJaHX2B;'6.mYoroWI1%P#^IkC6$,+g=RH6UBUni\2c+klsk*B`&._d2nD+#H&^Zkl0C8[KR-%(-StFO]@D-@URjjitNAua@8Ru4BeZ18perhH#8-oj:kro'(BVuj<XR!]4[')g<rXSc.auTDNaaf-e,^accCe_b/e5Ga_fKR3TVK;%N\L^iL#VTAcIuN$S?KV"S>YR1;h,=7,q2AgO[ktC*^?@^3)b@P'XK9RI/*$4Uo+niB*tjN`KH(+78EW#)TO@c-dEE61W=_IT94DJ%klh)N6-#?TZL/l"(R2D=:C(.<'Hh07Aj&p&&%Ut6B1r?7SnR3LQfl[r6L:3k^t-Yqf6]0=E&#b21BlEW_3@UYl!hIgc4j[P23"p7%6[GmrShgQ&O1tJ6D>EmqT&WHRpRuQr_<3jccoZ6D!4U<Z4t]@ZDnG2bP"..snrC6JpYn9@-')9OiQ8n)JdFWIV#\%;7#%?kh<LYG%9EB=1R.p,r^0`7Z1BlE)ESJo]]9YTm$F%^1*H*?\n^cK?c4jYB`@2ai4+l`7P=O1e]JJ6$0*TF#Lj-IgB1r?7T'4q"cZ,f^>:\b$%md)o3J?@GHXU!fE;h1tcoW=27(m@J@#,cf8QRhpnigc)Pc]BeRNcr<H>KbM-=%;$T.e4&o#;:&D+t"m]P9NLEE)e*#,B=X</O.sr%UMVsD31k):B);qDTO8RmG(Rf&8*2cbW0'X[N*9n],1@/BLM1s'$T(sp03T[*4Nbn0AR@HUaa9S(b"&L3,q_]cH20FsD5n63Hb^:E%qg'XN6?'"DqoV<FlZ7Z<0a63'ES0uZ9e@5R8C;FS!4u(OVsP5O88OkM.@rLtJ.7D#W'u1,q7%0A$7S$]'OW`94ID;M@iY:c0;@Yj%;h3+,dnrIJS1E\-]b=an\@R//;Xj/$($Ef+!aI=nP4sF^DYr&];Lkl^);4MUUth4<4(eo)[3fe7`rfl]mUj"NV>si((8Tr^Y''W[%R0%3<TFj8JP%n(!V/rL6qk9<>hI'!(l"WY2c4jYN'Qto`YW^T,c^=k$6?1!5FPfU/R0)_A0lJ:N)"6SM3)b@P8,kF-%Hho;*G5_`%jm8%VkZ/cGB*tl2i\BfoCW:Fm!*dbJBt[g'ShYM$VO+u_mFL\b^(_\G_>JYoZ\tD.H">aI42^I\;LkhoGdk)*^>tFL*8g.4N\:RW%=q,C/BZHJACqWecSI!9(!c5Q?DuCZrR0%2AEgfL?]p_`GN^\CZ6bY66aqK-PC$&)nRsI5pa?bc4]Z<_Rr2dt<ML6H5X[F4#kVYd*%I^F/dHZ-9<?L3/R#E/;KBGZO!J]NuZ[Q(LgO[0Cl>%EpCb7Y\JBRNB$1g4BB=XCh.pWGe99-8oi#HmW,ZIFN_hLE<c\<=#RnSV*h%f.j6o@)g!nFdg\-`6b>*=Ypo*[ncahQHK(e5]=279-0[Ym]@6cT,I67HTsgj<XV'/V7N`3DN,Di/Z8`9:;FQn6;Mia3Lt\)UP0`[%d<?GRdd+">qT+.[a'jOGUOgZ6*L?XL]&%+.;3bnR:W)LXAd2+`(NB``gD^T-B]Qgr,gdP?Cr2[gFAe(SBOGn:8pnLkp-pR=r-LOV%>]8,r',LUV6$o)U*1(IL:UAX,%*eb2Yb0FH[qWp"2qR/eA%bT(/h(#-`=BYll.K6#6`,V)D42e,NNT=QWnsTrOZ*NU9/U6u1K#,(%8cdQJW>Z64Lp%[Js5%?1ZhW*_[*tfh%IB$,)j=P2WmT++b(?%Be"jEA",lGjlUeE_UOgC^Wp-m"<26$<]_>`er?SZ)BJaKimC0p3%JSI$G,9BMe-e7XE#'N&5GYZD`)@^Ku,p%(Gd+2eOQe>#*2&b*ua<SrQel8Dqh,$>qAFrlsJNY?i+X`->7Lbim+J$GMURnkMDBGeH%Zj!I!6T5Aca^GWlCGV(*)(JE?$tsQ9YZ[&X3pF1i1pH;3Klb[`eS&@b+U_qh&lXbo(1GnlA8,&=[<:.m),GR])@^KujCWbnRLG^1%:lO##BC(u"HhZ(B^E1GQIeq6Kn,G"%n6c.S&"c&am^k]2s8IMt^V4u@qXo&^q"0pNG:)t4DgqW`LVHI!o_p?`If8)`hgY1mgMd)`%m<='(XagARGkT+us22JArQfu`ra5]e-a9"nQa1m"M\hH8odluLB9D&B`V`=Dfoc8jVnkI0]=6eSrF+R%PE(4g]T1V(b"Eh=Q;,)F%RVE_5hKjnt<a8@iTr%Db?'=3<8PA(M(?rqHVkrndMl2!+bL1WebslVl*L=\YCd")U@&<ArRnZVXF4U1<NG#68=d\Ms&fN^#@C%4L%IMC4=\^A9S.\j_.8t1O)k5$8tG?3EKABG[0j7:qk;q`cJ:9_cV+f3FMY4rFl6rVej,T\M.q^H@tnk_2;KVl,IUkJ3Oc5gb]B8PUm%[o6@4isAba)3E.DDp/W+hPOArJCWjUisBm[6b^e\<Z4c<lg@3r)GdSH/kgc&%J`T-i3`E!G/<k=NViGC/G?PcEP+;io_'=tH@'iZ%]tM%>?L'6A";WXsI]mDSp.I'PrR+>W^\#t/0>72KQeqYo_nc9o+'3;Tm?%%[_^urDN)Hc$p4alF>X!Co8#NK:_FjaY^pZ]?/(%i/%gDVXp#EK=mZroqV*#m8UBONo?Cd=iA6;#b[J@7oL.m[YSg=ct2KT%d!CGV%b0\4_'g'jd1M`&c1AfrC%X<Cf;JWs!9L2:]2;?FfU%ZF*gaEL>BL8_Q"s7#;XdCXR/7,?AccajB&RZ)/mC)G];0$Ec7#3/J-GWG,'F:1D+u?>Iu.&fF_hX\$E%>ZehM-6j<5$>[Jb2?V&U%@1=VZ##56:)R-Ue8-oN:aOXs9O+Y8\qP;A$8gme/[Pe4:JRC>m^!/f7(g,7'D+8jt#cuRS[2DLA!Gfd-AfrB"X<Cf;J`QU0#*^G:%-c'.!f\-b0KRPdhCGV%bpskJ.bs4nR=$sDS%G??IC5.&(JWu8"U=n90,Y*5>TJRNG$282Men-$NfW-0"Rt6f#YD-k1##YN9)R?ag%8."m&aOXrT('f,Eac\Oa=bF@*N`uoko,[\o`;[\tI/(YVW4?2?Dui-uGr(s`jLe"6'W_eG.G,\C;m8<aemWo)Xb5o3>46<hWHC`P%;X6/d7'/iAJ6I`pn[&e*_eC-s8(0Mp%]8oJp/kLRe=e]FV\Vj&@T%b6"khmK$;uT*)J"o'ouU9$[+<DA6YgX%K\#A[#[2l0!ON'_%j(AfrLX-lDO.J3g*B\-9l`mc#VaG*V?B:U63#t!EEp7SM/f5Te;\EnD1F5@&1i%M=0s_@h6Y;m$O-k&\*AHf@4^Q\_Fh"M?p1RTa%eA8HIcb%*907Sae%o+fWb*+PmH\BmRp"ebprQKE15EWfu/Y@2^$(6.,<5)_,98Su$:4+&4XWZ2uZdH)(8,6\K9;tTfFiLDfA?+'5%DbKn^AD'RX(c8?bL>#K=AeV+[c!ACbr,m:?g?P90C%2tr).o67f_;1g<K[lr8U#U'L/KM3ZiT<d"b+GR/r"eW')^O=KeLmK1i^uh%XN<`dPV=YC<Yd":Cs=]X/Zm.eCT*l3khb@3R:.j<bj(dJ"XAiY1hI]$`?e>QW'X.6SiQ'BidU,pjPHr:jrnJf?pSJ.3U'T7<3fWH%<9iKpg$k76F(j>&;HkM!I`X!m$!E$t.8A!-aLk5_WaK<gT8L(*/uZ,C2Geu^+i.<!)scZF7=APh:_@AI%W:!]TiMZ_Jj=!2<ofXk%7[,D@.C_M>VKkiEV1MlTjZ;HcE_E9N\Z%6F3X1g6')B[P#G`O$nV]qm]r&jIX@/E03(j<`>cScW3#J*4Zh3hZ+6V2Fbo9)k3`Yp/%>-t7>@Al3GbXf'7fafTpgbb>];K?P\9"p9iT8(Kdc^",qc`-PDcb599l\NVLWR=r0l3SU-I2GeeMA\WNgG,n2Zjh)MQ]KS\>"VgA%fr+F=Wg:"YgUtc][iIh%X_9L_*Fg&2.qRMHWH`mPO>la,N]jil9Bek</ES]aR/9bcCrgD_8/gbQAA`<'N]`f]&.-CPl\>$<anbYt%cs=slj-\$rO&\B@CN@KjS/A&Y$[EHVR2MIOMp8#O)ED6!U6V4&D)E<RXHj)&HbXUM0OiAm]gnVFI*^A5QlG1O(iiR/N3!.Q8X'Nq%\I1JV4jkdN5j>_K@i:ib"Vu\jRBpMIflY;jjs$8!j:=[XB!J%D:&?9n7hpW=Y&]c@Nq6'YLK_>.:"oe=rk>T0/YC3!RYEPRjKiL)%^Fq#ka#3u5*Q.W*BbnX8T(_p?rb^O$e<DshX.]^SEj6V[/[4YEhL'M/aM$L$;5b?V5+/MJ>+-RSdjTfUETO'+SLP=;FrV8"Q+,Bl%D2))_)]/Ro0^JXmbt@XY%lQ"pkrZ>\Gr?n;ZE6=4+oa+-Ocl"q.@CMp-$eIJk"#9EAs#0YkF.1)21c"*p#`&U<TR&j@bba%^7c5[%!U_`'fSTHQWHop:p8#7Mo],N(BKI=@Zq\`Ko?8f^r:@Xmm.Nj`jfoW&[`U$+F,j%Oo@Q5ZZa>r_?qJG^a_`n#Mj74:<=1A%-;B43%8ulkXSp5@lN4*Zba'(,m%07XMl9+a5%c)ptOUQ8@<2(=BM];K.\cL"1S;5p`CV-cZRs2&Gh+[;,.I]1J6&]qqc![ju>K5KT"M'c>%+I(q*R$)D5f-d;4<R]JZVl$j26;;qKXAY6/'W"Q;[B%H;4.*6d:=ojGXXN431ZtJa)p^t(c@JOSZspM1Pqju%+inNlQ:1B,_*:ib%*lkuKk6V;c9)@@`Q+#I6:(Y)-2O/d[V(]CVBj[^glVMX'fA*tFD!F)e,<*&ZWGrqO%P-#=X;<te3Gf<ph[*ku0Y&B>&PB==8LCpf%/iSVSLRSi#g/VN/TXg'(:`GM$C9Ur98PYqYhI6C[O])]ufZNsSC8=Z1I%@GEK!o).[G3fF(N1PLB;)ZuZdl\=B=/8Dc[Hh5ee4+$%eu#e)eVGu^pf]36$oLNrg1k_Lc=Z+8(-4+ZEcsk*[W/L5+1[WdJO,m'XdEsQNH36i'`q9t+c\eIa1?9F<hcKJ*8BaX$k(r8bR(2]%.f#@#h;$!lkps9<1TR@-H9?==G/!(mSB^a<:42`[q`'=kI/[s":"VOg.XVh$DOV1)MMMd[A)2=7'q=Ap[W$M9SX.gS)sVn/fcnU]%3D?I0Tku4?]T8d4Sqa,Cd@tJ1G7.\+BM2n_GNgQd-=oWLc%b64Akhqoc#+JTdK1;heeSjUeuH(MQ2;-f.q?];NcZ!^[q)W5Mdn)3%D5XZ43X_`ck'X6j7d`-7..3B6XA]kl<8@^7%FrQQ:TTR3Dn(^7iBp(]aU__5^tLWK>A`E;;5HN3Q;Ki7V0tIWjYL1G%(5>uQ*3#C%>d#\_17c;tf!apW%(RsJE\h4MX*:1s3\Z[fGqE=1f.O\j<r<30AZN'WRt]%]Qh`?-n<WDX/`5>A%,;Z`hnE.QeDnVejh!E6?3G1=%"@7kJ-*kZb=Ga6!FX]7qC,Qu;2/01BC3&&g\dl++.TL1l;(C[,Y:AU6ZT-r8?XcflJmHQGjgJ_N?3[XsH)p&*;[kUL]%+\qiJ(c$%\8=AuM'VT]`F`'/%EEiigpE"Z#:9(\jL-Y*_fbY`[m<is%B.gVq,FQU2K=Zi]iB)BG.*<V8D/?Vg\?uP4pp)+eM(&Hm3#O\]24AH%<dW8JQYgL9BG+$<nHh$ST%kd>L0E.CI,&D&,,p"t/bRC4cco8f7"#WWD-kl,PHc<4R8DjGaTV:e:f'p1Y/>B"GC"Zi3o<,6Xab)#%gGkE)[,EK7Bk#I>F]Q2!&%na<`,S\c)Clc]Ggu$D*8/@:=9;K9)`[gXXS&Yu,"`N\'s%+4q!9mrB*LRnh=,`gJ@;jbNlu9es"]Gd%&DES5k0=s!XGqM_/_lGa2Jnc:J;SQ:D\ah[47rL]V,Z>i`W8;<h'Or7!C70<$q)_c-?h4NHt\urEH'@EL"dOdc5ooioL=[9.D@#g%)S1EDQq(?I3,g^[UW!6`SYS#['bDt1#,e9@eC7_/:H`@=2a+W*#-@t_<imkr'<P1\eZ1'dll)/)&r)^4q@QnSr:=f&=,2%cF%s3'%[Z*Y]i-1El'Y[85-,*7ELW8?CEY'ctpq5/(E(ZV,bssq5oB'!R.-"K,k/SZB<I=:&Dk%:F[Bq&_,6ko1Z7ObmU:Q(RBK>Djnm%u6%']PhGr-6<ANCB"SrH48ZEYTV[PO*(CUPt/di5Wpbcl;9,B_Z3,=bk8o&(9=dd>S0BRJ>je_hDed$Y;:Cd,'K.iL5Qa[6>7pX.$9D%4#O9['M8D[BU,;KW@3H].p`Zu-][6TP(E]hiH!sW9"%D+?63n;3:AGU>;dIjEmqg4W)BSV-imKX6f=J7_M!1N8R!LKnVtjE0oasD%O6Ao2QWgW#1nbK+0h^Zi%Q0SY=B!?pA_g6F^FAo;q+7dZ\nr<ZhoC'7W<S/Db:^'j.L#28g]`hjfSi]ldN5n);aB7s:52`>+UD?E%)mVM@VGh_8M(Ya0B29]p38Xs#*`X=g$AcX_!GYIh+=0i-eYOnreC8H8eGMnaeL\o=PV00OPeNZpWkO>4-?;AYEMu`2]SSrtW.oa]%^BC"6FY?Q(homIH3=YYqOjCEkcFPn,bIJ_A1unE=J_n']06>U6p6'd+GS"QBC?TA%qMHag'Zs-K8c()*is)n`,/6k\ES&*K`;T&2%R"!:3Zn/oJ;]bXOkV;3H\UbAbll=m\guX5.[X?>gc`>60X9NE-!N4c#b1a@$X5SjRZsbijaso-J](7n#UOJLI+qgK;"G*=oM8XUX%25i.W7SAT0)63Lp?E%)g^?`>l&Sd;53G?)dBif^>QUe>kdZ3V[e2MHI_[MU=0&^rRq;ca1;(S+Od8W"G>_DW3K.Qj((C1jn<&?Pa%k6@DD]%3W_h<\@XO310'#?7LUjEU&qiZBK@aC&HI<334$;OZA=Ch&eZ\d%t7TCB;EG!*r\W`QHBGko.r]8_VS/Be!u'%>JIAt>uL%VLWV=[2ju5%eIfJ_\L5!lTXEiGrR/,De/?E2D_k*=-jQ9f\SK%Xec(J=UHT(ET,NI7J`hB:3s'T=N7925_RLLjeP`GU%6"nQWjL.%4682$L/a+I@Y'gR2b1R/A1O(;b+j^oflcRphG_ZGHB]j>\-XPTCs4j38Kg$+!cE^Pl9aOT"]L)dUDgh`4-DJIEk,Qr%KjWkc"U'S%PFq=`ld^gZe53><FOtMp=^J3&!G;(XXbV]U92"nLA;)@Ri_,$!qSGXnEmk0WTkJ:iFh/=.gbbfMl$f<S"nY+RIRC&Z*q^(A@f7R.%;KX#7I2>t;C,0Y%]&4OF5!?#PI1BKEqb4IBG'sofBW\P><F>.1]e"jaE!c=g%0qJD\V]pm:'X!@J]dS<k#&>#b%mW\],tuCMq)/0%U@Nh=3NUrCURGPhJs&WFeFe/.Fck\4P+&$m+gRO0;=>h@C6m@ESQ<KGD]J@JN7FVeDIl>5-JNBCa&RMXe2G%B@=3X_UbK7UKdAV-%J.*?^H:ZC:GqYa@+aF!EiKicP@,7YY-X$0_Vi=l>Ul>k>&gMt,B)L2"W\@/5SW8lCE)Z?PI8[Dl*EP&@K2Yqr&l?/KoVk%6cAQM^%s-f:iEg5qeC#lGucnq&e4IXD#Xk]0+>#)R.*6+H.XKKu.EZ-T1=/iT4cr;"6%6"]:V)?l_,dNh<&YgfPpmHN0Z+/MP:`jes[m/n^%T^kiS*K<g0Pa'@^A+hnEFYWh]:nBbb^!F=ZZBt>j)e5k7;`r_[M;0p]g^08_*`gj&ctVENPmT!"Pm\L!$g537=u8_P<A6>]0*HT?%H;qSuGqp=M4[t*R:6HIh!MGTWKBc?O[(>TCa$)km?[WulpM.-JN(PHc&mB?OqB]JY^mA9qNiTfA7E`DVh-<GV9IAQfj&hnB`gLHK%)g6,86fO4Ip,ku].A&'NV?t5$ZC+2Ylr:j\BNfD^\f;>b72+7jJmf[OG9E3.eCjL9ZiO`:?6<'g9'aO&`Z7.UV1/<<HA)kBC.)BS%No\peI:jMU1.u/W$"6Er6rG:acYi$mHcE4d9b"JZ1RKMSpT7j\r,Bg7&(@LW[6]""lcP?lQ5UmKorSotIO;0b,sYb-ND^R=j4C1u%HDMsM]<3KKLSkl<KqQu8lBLL8[e+.THmhPYUC,)=CpIUjL,q,<$GfsjO95O8irrWU<\V#,<LA'[-\P#,]\3rT.+.:Uq&X5'%WEN/%M6.\MGo>8`D*UXG=G'e:e9m)$h"],UHe-WAgeaP[l#f29Z@h"gL/W#5j*C:,CKrds]*J[4hO:#WU+Q0T'bELdXNm9[>RNE)DKCeM%W?.lSiE)S)--Ei`)VJ5""fUCTV9$EnLgcMfKohJ+E9gFH4mLKCh:>NJK@BG<&l;2@d\EgIH[QZo]:KNFW@/S>ak"R-oo0DmDVu]$%s+mZhNs6mEl?gF%-\:b9F44*,Y0g4Cd.8U92ee`GqOUn6#>Gm"O7I+,\gK>2D!gCS??(1^=l/(Y;R=%4kR<Z&6IWP(8[5b]q97s!%)cRd9<'NeGX9:9#rD=B_aR=#)\\gKO%?sAkYD49T$Zp'.B8CcCM#F;jNVoeBFWP]/f+VnTM!Q5I6Pi,sp7q4b>Rd^V[*e0%D]JZP%[!q[NCq]:Yh8\))U.M*Fbuq[DGB@=(cK/R7ZBQ'RB\N"?C;nqoIGq^g0q*6MFKl-jDt(kO51GJ[TC=/i;4;$R5je,ZRGX@Kn0(MN%G_m+*?8qLjXt^ibX1,\-j8JM4QYJ^4o>O:Vb"gJN/=KPhWHGKD&0+<#l.+...I$`XT(TN(/t=HcF-f8NJ[g_JP?)STO7!uuG=4fX%pr'`2;aP9\4)i.NY7+8d7.k>shn#l6j,N"Y/p`=uJ3;/IQ30=56jQIXX$Llr2HjDW_Q_?]ld_`cMUH]+dkX7l%kIsf2(.4[$C<hr%A9Vrtb%'[+SMTWgleM68\U%$:/@Q7+b$4R!(F[#1aEh-%q"VF9j:-,u%YaH_(ghtB4O'>!NDFS)Ju/k9l64#e&?+S?5g]0]CPNhh%QDW&]]><nS1PAQ@5.G\B<E'/<%X3BTjo21f&K]9T(CLA.S+t*2PLd%]V%kh0S!VMf_.c,sTf(D*;pB<\*hVlP:d`(!pPAi&LDjT@%$O.g[9L$-b,-2"!7EUk%gmO_)*U]/`6ghOWBc`qu#8VsC)QR%Ah6s>_0^Q3cDuL+fRBe&n#<X#,;\9pSf9r+cH(Cik7XSL)AA>)R%8`CRB,1#qj,c1@cA'X)6?_sRh"=NpE@;Rp^ptfOMK1o$mJY>:t74@8/]@B&3\><3.CKd@Y>'!cGSu95Fe8TgT?Z'&%</&:h^]U*t%'ng-uhW/LSasFp(J[0GdiAIU2IRC:V_L?-/dG<fK*NJ_ABg`56%<6tA2&\KJ$-C&LZl2o1W6eF_(QN6NUgIjDV>"`!AW0e5=;"eO%:9%=d/PUK&?$0\[#>om8I$Br)#'*U6p%;7$''#KsS.Ju.hf#.kb@g7`G'l$#LQQXBgo$ul#PT]*!gW8S@9tLH+9uUQ'2C`jeY2A,%>MGnkXgL>V<#dX!I$Wc05pQ0?`Ec9A10,?$ibQoe9aI^eZ^R[fGGZ#17VaClAdkB,7bSThM)SGb-R_(ul`,tXKeG)\eaOnf67[`E%<5-=JU2!M1TT)tg]5U`5,Q6%haM$3s>XkYlJYf"Sk+l!WeX$'Y3:69^H_&"sPpR7_*a<1LZE0t([hp]_",<1X";W)o@Q>]j'IU\+%2;ihuD<$qf)"9PZ(rVt&-EG63/`k'<jKV(-RH7.DVj-r[>3@dYLJITB]Bu`XUV%B.UDp7$pK<>\PXArE;iC98A]s*h"b_7'BekpY%b2P$Eo0Wji/0rcHlm490^/`c>J"n&*Wm8ji"Cj0k8k]<87EK))\:mqT'Br;b2sI]<>T&u.!?$C=PERcPj;E$P;jc4@5jjT-hC2.r%Ub&;#-5uuuWV\)"IsD9KWLe!+3Rm+IQ45:pPY3f^H&%1Lln[R.%qdj\nWbhtMC'Hi5eYH/dluo8%^pp7/I!]4,>b-meaG:Oa7bmp%pC![fC+3?T#K]<Za#LF.>a#;^CiUmk??#.E$tDa<+?Led$CC.,1:49>XHVU&<JAfub4@i.$0^4jJ?bReiaZ_6.oh2Z#:<VZ!i:Rm%Um0qoT:-kdQ't/+]:*LQU!a4/K@66QG#agF,%%D;nP]?`RZ=(:#J\j.4K`sb-mDo@O@O^1$JG"pb>%XmkTN_idfO`m,\*"(UhD5"%h2gCP=9ec1[eh@a64dg8j]eVm[C-odUUA0unss:fYdjG.IB;+JO/iKA.V+Ja<)mdp8-2R!71q.)4O?-XWg7R)'G0-ecH20bHClP%%E9?Uk<O]88^6S-pHKS/?Ib#`3JE.s\]Vg;7Vkhk9\kIfW(OY8pVl03f:SRJe:Gn20.g4$]X3F5H7,t-r.m.(SURk!gE%I;b/shE2%?HQ_qF`9$G,sN9]Jt?a['-TlU(0G7>W6L9J`Mm\Y-uFSuQ`9?gb?.!D`[B.+K`RW3I%EQ^r)0Qt+eq@e-OD(=^$7\``X\UR=1:T/%KPukG>UCIEh_\AX8VW#hQKndP9a:B9Q=[j`6>.N"?!D9UW.5Y4,HiLI=mAp@r8tSel<`Ss&^b%;p$>,aA>o#5__N/[5d0[29G^\2%lLGWe?0K/.:Q4qF:S)Z5cS,l*lN,0o.Eb;XWg`%5d"7Jlq7h`n<5UWP!XmE7>#H)0<IAS1d8_QgU`;[DJRK8CX.MYc$;>+_b@>?a%pktQn'>C`M:YVq!'YT)AW,JP*;uPXNmZnauT*6jRTp=/)m(REY=qk!5Fd.7aU[EQ]\b]^G%<9Ei;3NgO60u*,S40cA\?Z\\56bmC%M&\A%>eb=,ZuDk22_2k/9q:WOWqh!`ht&a,1O/O(:A'=/QGZ[E91c0MFdY-k?1NuMRNLsaSji([SnfCAed*%EeshkHeH5k:AN7i\%-j_Zo=gV;iZ8UtL65C;`T0&$l-dHYsHSDjJaC>`L%[D)EO%tiD!C#S#HoWK6=BBW:E`8.,[C(f;QiVT3^[;;>P8F.feB4E52g1:8%\DH#=EKSl-Xlm3[iVQ+_+!b2d>r4"[X2<<%U;@(p2!+*FDh]"R^n3r88eXGN;Z-+=YiI]@]u$HU%[?7*DSf>u5!Ge2.bf+_!^7Jp%>#5[*92k%rOUJKZ0@HUZGLC=k_)s]Z"tTeW/16_Be5!3Gk3R+P4lVu-/tl(&/;cRT,>8mg&9BDE@6W[=;ZX-Z8+N%.0L\u4lbno*%js*W='bEHJ,`hbWdpe$L:+XM^52qN)+ghtZnu0-<.L/sEmDP2NWYV'rEcod=`fiN"T2;(HlU#EI,rnYqBf\i;dg>C]a^_=sTTamh%=1->:4K;SV3m61I7F6=C7o_S,Jn/N1qWp>dUHY:28UG&13`#=FO#Y*^5gAgEO8=[=Z\?n(4NX?^il#^8291nCl6FR\(Jo08aeM&Z%FE/P4'2S1tO*>"Z\q$708KP9;F%P^bC+#V6;46,us'81_`03<`mb>/.FZdd@C:RX=$'$BY<&LR4gQgej*`_IZbspuCP"/MfiHgE+%/BM>#<I3\QS2lbQ<!MD=2.=:`4R+.\I;V<W?hB5ub$X^\I`]q32pK\Eb/8j'hc[W+T>&e;@14o@;Li#C-_L8l,3TnCJ6aW#bb5V;%c^=k$l?W6=UG9_DB*tlrcTYtnN<jjMjH1rUTCOfcGiD?sE[Br@V8`YaN%)P#?0o[%@tJ@5jH5E-<<CXm*XZ6]OS(0*,cR+SCja>L%CHYX"=KgksYpGI3(Q(u[HDQ:S/Hs4A.GO3rcdta$9EDRspD`5&NRi.59EFiS@I).I=6?B$V?"6rnij6p9_$>p!po4#poM+?7F.A'%lq5[goSk8Fc4jYf(X?RpNX;9pP=MeDl7&9C7*RH_1M.rp'+maa:+RhZXlN^sj-\Pg.sY[&k7SoX"AaCo5W0Xq1"DjM"kZ:rf:.V0%9HL`?mbML<\<950RWl4[T:&T-X4P@^^YnocJ?@GlSP/!';h1ueb[msBLbX29`tRMa$_s5p=.N("UiQKub5M9gGq/R?**LRThB,NK%^&(dc6'?I"O<79H`('qn@g]F^5081?bVLQ'pkZ9*a0ZOBnp$3C=m[G;N[4kMO#SG79^g2l4Rs`BV]XALYpGI3\u0W>8)tXko!h;>%.ZaTuk;lO^W+oLY$%NE224il+Q*TZ>!>cDrB`IgcX&akU4E.!8SL\tj[9@FtJu?ecF!ZmJ.R+%N&#,oS\WY!]`75JQ9M+D>*qp7I%>'NC%`0EIQ,HT<)P&jmMj$)<g'cnQ>Sh#*Aa1J92`"R/=Y2jREn"Rr;+Z[T.4RV7#Y=e><fSLuH0e95E4c>ESM'I;i9'fL`isDj@%)3PZ5lIh.+G!*mAG*1VJ&=t=r>W&36S!W;1*`o>q`Lc?TP/U@Xi,5m1lmP+u$hV^Z$(+V@XXqP9R?E@\H0!#Rq2&pDG*ZHUeG)qD%k=`3(4[!^gXlhQ3MK:Ws[\N##5-@^T:^2_<C:.$D&5YX:nKa0!WOWp6!B%o]4DM9+Y5D*emDP2NC8L&B(Br;.:\(H#:!Wuh6>@m>%jA@Eb="c"uG2c(7<VK4Q(^d75G`kSIE`4iS0)F.DP"4&DWer'-aK=tXO/hkI<FNJ+e&IS6W`fe1b0u'U24!;WeLIs1WLg5F`fWB\%Wp(7_Z3h@]B1X0;d8>$$XQKe`o-BB#CHo?2=s:9e:\(HW(=_1JW&^I1;/>1XF4m^HQt&\tZdNjt^B.kWNoVo\/1;5K&j*?DO'8Nn%.UrK:a-/W#V</,LL"&j[aeMmOY-qJ(D=Z9<KW=omD06jpnu,`0f/nTE8KLmXl1JrUG`kSIl?9k)3hGD0eO$e!jW..fW+qIOGT`"o%GuS??/dou/4NX?^@asQF7!hG-3C/%l^\FZ)inq3Dii<P$kOOR39mq:V?Xk`=m778$V<Eh!7MJ!u$F$QAj\%t\'[N9u^oeB"@EF>"%k=bo"obl(e.:[[:^>s5`2.+ceU3G`l!H+asb@/E_c?q(V2EgDl,@c=<`oN8ir)@[Yb74k`o!i:`<<:;o!B.A#+<)?f75ceH\FCl+%CfZBBjE[_U_Nt=7Z]J1pd*"l+(fPt`G^!)t1g7tQ%fDp'*u\?"5/"0XNA5_>9$^R5N<hSZ'Hj`kj[u\q"OE#U^olOe0A%1?oUIAG%XqY0Pf8-)49HG)DU0=fV_%U/_O=NV(BJq'u),l&k.Cq:B0u5YUo#RI?e[USFT(l36CcZfNY<?A&Y`03t2\aT*4L1C:RiTiFV#]2I%iQ\7d),l'&QHG3Ii&O_dD3jdQF5o8ZJ8Hj_AP(m;1BlEl-eOb47lat\3idWWh#4'gpOACDh6/lYSEkKB"NT'cp=5S+Rc"lf=4?-/%Jk$M<B*tjn7:/tUU?FU9J6bm)Y=K^54EIA"Rj0tsSp<`OF/ArL;Y8Md@u=pE'O\8`4P*Jl$(`#u7lEM0L"Kme-b^9;)^4o)m["r1%I*!V&C$m;*0-rTX`uHI3UPGjsr8en+>7-J:;Gjjb0@d9]V>sgRB3VqG@]9e4S^&,MTb`)RpHDd*SM>ENLI09\noXTRi&&.^+BOo:%esF/9T]\rhq4VQUhhf_MV#VA9GKra"1Wof/$Eu&"Z=D`?@_eB5lpn16MmR[e.j\Rs*kB]L%g]<SZKFgi[1\u&l/']FVA.rD]qNpa%^U/Uo>Ook4J(L"?o;)Fi9CI0[$2BZR2R@bDh0H^K+<(KshN7o['O[D!EpY^eS128)lhJK+#rkk6XY!9AJZ]fpok_q+NuLG$fc'7+%^$5lE-E\r5*`h>;7ZLd8RRPM%j;p`":>hj7?:Nj$"FGR(?Un=<]P0Rcp@QYl2kOd`LphiTL^.PE>LLS4"stq-8qCE-CdYSBUBMPg%Z'R&*f:?=?3Nco()c7sFW;!qlWgO4@[V\,Tgd`N)*4"_/Xan"%Xm>nDr?u6rdtkAk8<5c*cRF1c'OY""jT94fZU![lQ3\pcc4jYN%8pU598q"^?>%$q.`A;-6YUd\UYBr\-gn?p_$RpDI'OY""7m]g,Ub(?V/4:2uS125X`Ke28b&(%ip'J\oB*tk;+,^_U5&/E3!c0+%%;%i?ToW`D5!8G`jLr+ejkLt!S!8H]^^,`59P?lLWj%KK^=Yn.drd<(a0mR<CW_pK<W6&8H=,cXF!;W=S5P!2D(TQL5;h4gCfW!@>%IbmN>R0%2$*'_a?0]2WPF/ApV'XNLaQM"RCShgQ&Q"##aE&Z190mVj#]C@jq:6\s_FF5N&XosLm\\)6#&Ru0P6#j*-ODe0A`0g\n%8o[VlXjr7f;h/.&VW'R@>K2IT"k]]5Qe"7X9EDSaj5gaaEM``jbk:'M(icDQgSj/o:*">O!8B&l95c$69EDS.e9;spk=bob2E]eS%\mEq<j#LU6DTl-lGdLQGRZi^UY&1lo<obl&%U\;&78?qF2FWX%jLRb)8)uj%%R@CT#Ff\FO$;G.ok"tV8(!(N9QO`L,P)`i\B%',%7OBl(d6`n[C:qccKc2PNQS"M)ST%%t?XJri!83pl=RG7ll,QY&BWQj'4$Jl>)G;6RE^]N/eL$il/&`Onl-Zrhfa.t2`oN7JDlU#1%cns7UOe*.InYH5r'&8PBNi9g#FXe[#),l%pMGP98:\A/ZF+S&EjH1t+H/35i30d!j0gWjH!ousm_&9d_3?+T7d.8QECc[q`/hPC<%kkJ&+X<]bG89K><i%na2aEikfgU(cu*B`kg!*O*rZqEEmlT+Bl.DXO#,e%>hYhc<fk=bob?HYlE4s*j!n'%1$m"\d;V:OAiHsSpJ%$EtTZ41CL<"*aI9F/ApV'Y-?g>os0o'OY""'-^P&EXXp+J.7C(jY>W<FhjCHlq277GRgqL1#P_+2CP_N2n`EN!G;bD/&cL`06"7t%"3qTgKAs`SIW"LI^mP8j9!O\+\1rsDB*tk;+0UZJ^mP7?/]X@Z-/_Gt[[ufS/MQ*V!OgS"RpA)59EDS.1Y7(D^mI6i?I_!+Nos%9%Z8Oi$-+[F4`m\q[O!iR]L.==8Y;k0ZinEOq@7=L3i9*P3>3'N(r_hhJ"C=a^GQb`J[/EKVGdI]G]BJ??W->O\08aq:BKq;(H=W3a%WuB[1aKe7C.C(RgI>CpKYXYC!p9KtS\l6k6g0*H@P*_G#@s&s>1D0`L2QfQ)^6W4nB]I%U*`ou_Md9E'3#iZrMk7m%4_G,+/&bCm%[,ts>dkcj^B*tlrs'':<2m2$2N8U*YH/qS9))ohpLN8[+#Wf[6+BO/!.QKJ3.I$Yei0c;'f^)"mH<n$qXP)R(;*8os!8I-cP6[T'%.%WFtJ8N67IS@.GnP(+7rX@Uml\SrD$JLIV)e8H[=qu,5=PpDj:NYVi!O?#`6S#WgXbrZ("k\,ikI0W"4tE3ZH/s`aq;koMF2dZs%.6r>1j<8LhaD6^_q3"7NoVV2pi3%]m0*TG`o1`r5P@21m4>M9/V2FE[*.,C6+BO0&#3Us]#)k"H#"?1B/nm;K(J;K2!piOaPVg-Z%b5l5_YUd[A/b?*X#rkk6>q)(#c$)'#i(O0[l/T2-%QIC;D<,rT[03!K^c$7^^&%u'.DXO2GdB[@S128)9BONVn=1rCer0CMdIE_U%^t*\,]0t8og,M,'qsagdb494YlrBsP1N@:#ornKN1%Oo[:G)(D,'PL,GTrb+ni@u0+kZUcbra^1K,sT!'/]TRhhm$A,h`eRRiY_o%aKA!u0sYYYFc,NYA0I[)*j*k8S\8R1]^dp`md+'4#j*0LI-%kWZ-1qBQ(Fm/-)n?Cf1HNQT'BG=qW+UkeAOGiBj[GDoR&)QXp"Q3%A"Jl1*R>";^(_^]o4Rth`p&Ymq^K?;?ODlF_,C:QD8S>NcNnj2'Hm#EkE9Tl8L]\qBb*@6$BQdSX:T3Ik4TE:+F*$A!OCr5$<Bq=%6U(+<!85G4aSN,G%/J,6!b=I;H"D$deS?$\^(_]*4[d#+c6%9gbFL9iaEj]@q<D.up:JbjcBeTC]p8n63ooW&Mj;`d;Ln[AX$.&/%4.`L4k=YjH6Qr4AHEK/t0*TGifj1&tl*cA=0*TGi$-##$kuNP10*TGiW=!;8]Ui]\QNH5?YWf5"d6l6H!p'2?B0Xgj]2Cau$BQdS%A\MHlSguhN8h<^$hU7p>;LhrmQ(eP.QI']L!87#5g/`R7'Hepj?10)2.lgQl[l8ZiR3r0:>5)q.@aC;@AA($A]EQWJ!bAunDu:L!%QNC]7@CkWC\ULYFF%1Vsa;5%M4'\t8B6L#Oc+4roj9J/W>i^l5%TVR'7;bi\R7,=hj<$coI'cO:)f<5h52Yf#NYQCldCp3\rlBCU%#2%\Wa:Lhl/2BcQVF6.^>2@R-NRla?QH:ZK!2P\137W:<j=Ar3(n6P3nCkCp9cie$P!26Jl"D/d);P(*gDRV8`Ya`!hVe0rNd5nB%d;u/b]2HkZI[%B,`oD;9d;u/b];C#qkH3;=8nko3Gih[#G,7/?2&us0&B4i9A+I^2$uoNfNf[arhEf2J4>)gJ.rtSJNRJWQ'3Fb7%VKY\VB`<s^AP3'0(*>_:S*mntW0/&H>Vj(\3qQU%_Nb1-UO]jp]pt'<?OF$^,0?]MdZIca@,jo][TU[B3HAs1Mkk?i!;iIVr04%+%Ter>s"kX?>S_MT,54>909EB=53/u/ZZB(S5"k`LKfHTN`3I8sb@+W_[bME-a>^Oa1@.OWFl`f42UZY;OG5Z*#gXktE`H]ZB?rr4j%!pt#"#E6bL=*i=g9TJ:/!HKL-2;bQR@_e?4Ct$?rRiO10O).4/]r?7j'HilJ^>APb`Y;f"9t]>O"3qTgS(2Q>5'Y?e@%.mZj5P=/%'OVl\e"!,$'l@3G1\Ti8p8-;:DV2!&!h>)dK<L"Eq1k)f(\qa,QPK9eJZBHo/!8$6]nU4`O*9u*s,D3KX$+ht@X]DVG*6Ml#cr;^%Nrt:Y)9'\""dUSm/tm]L<d:u@j&Pf9Fn2#G^\m]8$+GP&5-^glcNfu+lG[SncYYoa2`rYH7Le&)n4%?N)">V`)D0(^Q>iHReW4m2%l9J&X?u%QK-rHFoTa"?I%,d:]@Mi,J-uB0-cc=0cMbsRKRiY8GRP[]`EGPA@S#2P`Y'FT;P6$n+"$!&<dVS!sg'lo.f@jmB/PQGn%c'Fea4d9=QmbLrOs*>Z7qroau^Akf]_S5le+$P,Lh04ADrr)kqIspq`o]tuFnEDV%n*U'T^\REs+9!a>:[c%"hUgZ`q!C#4^]!:j%hgY=?h"pd6MJ4SAmLSd;pHS\sqg\R2T>5$n?cqO(/<2Z%Z+`5Rjiog0DpBN>3JZkdQ0HOR$u`=B04*A9BCRo_&[,IQH/JLUcJ,[B%ZF,\8rc+<LhYeY>D?%-,?2q:*2Z0hG_Q3RuGi7Ng2]4TN&ut,d"t*+L/sYkk)GZ_0g]AgdJWhD_\'@l*U^]_\%,C"@D@tdDO8"IM%>J)Rs/:n``c6E\WeR[f7K\U/_eYbto)"gINL7AXLg!GsA$Rt\N+gk)CUn)^TYpoZJD8"-IgZ.D_%J')`(3t1PP<?UnO#"J`V_u6f%`\P=-`\RQ'I''l%[cY&+h=GD`pO@2g<n=]"F6jAfLJhZ=aJYk'+&jhfS4^h5_UHguT2Z814-h?eeYXMO>cJroRtd/[WJ9bV)H'>-%C.,a06aibhU8cj'Umt.:A8fqYE]DU2]hLlbnPfV!-4SShXcFj$bKIf*L"pXDINQSNmL:PNCgKX[W4\2rf=e<kVnK5;f=e<kVnK5;%f=e<kVnF](8,'P4PkMX+[EWdK,-H\Cm1G=Yq-72V6c<.'>Y9OhkMhUPO/p04O/l4G*gb:dj`,Fa3ua8EY2?qig$c]PqM-0mkI:Kb%j1!oqpWX4ubpMgj^]/iI).3@6Vf+c6s7t9]52Q>9nK6ZgnDjCQIK/L!rpZi`T-&R\rpbn_[sn&JT+<$!o"SPId/<rcp@DYilK`rs%[m*+Vq>28K!RV66+7"!*s8;7+s8>HB>P@6!^]"-r.b'6dZCcdJdjJU>J"Qc@meH&7b_mKms."H3>*nBDIeE,A?iPHJrBG](LO]0_%YFg:=nDW3LIeLOkq;\C1rp\1AT0N;DmZ2kok5TgTs35cF@1GL"8,ekLJ,J9ST/*TGn,N%Khu@&jA/#(Eg!BZVJ,SE>rs&_LMus~>%AI9_PrivateDataEnd