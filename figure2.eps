%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: figure2.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Troy Carter
%%CreationDate: 6/11/12
%%BoundingBox: 0 0 777 408
%%HiResBoundingBox: 0 0 776.5835 407.2998
%%CropBox: 0 0 776.5835 407.2998
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 9560 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFFA8FD7AFFA852A8A8527DA8FD79FFA827FF52527DFFFFFF52%FD0E7DA8FD137DA8FD077DA8FD0B7DA87DA87DA87DA87DA87DA87DA87DA8%7DA87D7D7DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA8%7D7D7DA87D7D7DFD0DFF7DA8527D7D7DFF5252A85252A852A8FD047D52A8%7D7DA87D7DA852A87D527DA852A87D7DA87D52FF527DA87D7DA852A87D52%A87D52A8527DA8527DA8527D27275252277D275252272752275227275252%2752272752272752275227275252277D2727522727522752272752522752%2752A87D7DFD0CFF52FFA87D52FFFFA87DFFA8FD1BFFA8FD17FF7675FFFF%A8A8FFA87DFFFFFFA8FFA8A8FD06FFA8FD05FFA8A8FFFFA8A8FFFFA8FFFF%FFA8FFA8A8FD05FFA87DFF52A8FD0FFFA8FFFFFF7D7DFD35FFA14BCAFD04%FFA8A8FD12FFA8A8FD10FFA8FFFFFFA87DFF52A8FD13FFA87DFD35FFA8A8%C3CAFD10FFA8A8A87D7DA8FF7D527D7D7DA8FFA87DA87D7DA8A85252A8FF%7D52A827A87DFF7DA8FD13FF7D52FD0FFF7D52FF7DFD22FFA87DFFA199CA%FFA8FD0CFFA87D7D275227FF52522727F8A8FF7D27FD055227F827A87DA8%277D7DA8A852A8FD13FFA87DFD0FFF272752F87DFD1AFFA852A8FF7D52FF%A8A8FFFF9AC3FD0EFFA87D7DA8A8A8FFFFFFA87DA8A8FFA8FF7DFF7DA8A8%7D7DA8FF7DA8A87DA87DFF7DA8FD0BFFA852A8FF7D52FFFF7D52FD0FFF52%7D7D277DFD1AFF52A852A8527DA8A852A8FFFFCAC3A8FD13FFA8FD11FFA8%FFFFFF7D7DFF52A8FD0BFFA827FFA87D52FFFFA87DFD0FFFA8FD18FFA852%7DA8FFFFA852FD047DFFA8A8FD04FFCA9AA1FD0AFF7979FFFFFF527D5252%A87DFD14FF7DFF7DA8FD0CFF7DA8522727A8FF7D527DFD0DFFA8FFCAFFA8%FD15FF7D7D7DA8FFFFFFA8A8FFA8FFFFA87DFD05FF9A93A8FD09FF557FA8%7DA87D527D52527DFD13FFA87D7D52A8FD0CFF52A8FFA852FFFFA87DFD0E%FFA8A8FFFFFF7DFD14FFA8527DFD0AFFA8A8FD06FFA8C9CAFD0BFFA8FFA8%FF7DFF7DFD15FF7DFF7DA8FD13FF7D52FD0EFFA8FD19FF522752FD0AFF7E%52FD07FFCAC3A1FD07FF7D7DFFFFA87D7DFFA8FD15FFA87DFF52A8FD13FF%A87DFD0DFFA8A8FD04FFA8A8FD13FFA8277DFD0AFF54297FFD05FFA8FFCA%B5A1FD06FFF8F8FFA87D527D527DFD15FFA87DFF7DA8FD13FF7D52FD0DFF%5227FFCAFFFFFFA8FD13FFA8527DFD0AFF5227A9792B7FFFA8FFFFFFA8C3%A1FD05FF52A8A8FD047D527DFD15FFA87DA852A8FFFFA87D527DA8FD0CFF%A87DFD0DFFF827A8FD18FF7D7D7DFD0AFFF8F87DA90179A3A9A9FD04FFCA%A1FD09FFA8FD19FF7DFF7DA8FFA87D7DA87D7DA8FD04FFA8A8FF527DFFFF%7D52FD0CFFA8A8FFFFCAFFFFFF527DFD12FF7D5252FD0AFF7D52A827F827%A9292AA9FD04FFBC92FFFFFF9AC3FF527D5252A87DFD15FFA87DA852A8FF%FFA87D527DFD05FFA8F8FF7DA852A8FFA87DFD14FF27F8FD12FF7D7D7DFD%0AFFA87DFFA8277D52F8F87E7F4FA9FFFFCAA1FFFFBCA1FF52A8527D52A8%FD15FFA87DFF7DA8FFFFA852A87DFD05FFA852A8FF7D52A8FF7D527DFD0B%FF7DA8FFFFCAFFFFFF7D527DFD11FFA87D7DFD0AFFA87DFD05FF27275252%F8287FA9A9FFA0CAFFFFFFA87D7DA87DA8FD15FFA87D7D52A8FFFFA87D7D%A8FD06FF52FF7D52A8FFFFA87DFD0BFF7D7DFD1AFFA87D7D7DA8FD09FFA8%A8FD06FFA8FF7DF8275300F87EFF92C3FD1EFF7DFF7DA8FFFFA8527D7DFD%06FFA8A8A8527DA8FF7D52FD0BFFF8F8FFFFFFCAFD05FF7D7DFD12FF2752%FD09FFA87DFD0BFFCF27F852282020C9A87DFD1AFFA8A8FF52A8FFFFFF7D%7D7DFD0DFFA87DFD0AFFA87DA8FD09FFA8F87DFD0FFFA852527DFD09FFA8%7DFD06FFA8FD08FFA8F8284C6E447DFF7D7DFD16FFA852FF7DA8FFFFA852%FF52A8FD0CFF7D52FD08FFA8A8F8FD05FFCAFD05FF7D2752FD0FFF52527D%FD0AFFA87DFD05FFA8FD0CFFAF4C924B28F8F87D52F8A8FFA8A8FD0FFFA8%7DA852A8FFFFA87DA87DA8FD0CFFA87DFD07FF7DF827277DFFFFFFCAFD18%FFA87DA8FD0AFFA8A8FD16FF77214DA827F8517DF827A8A852FD0DFF7DFF%7DA8FFA8FFA87DA8FFA8FD07FFA8FFFFFF7D52FD06FFA87DF87DFD04FF9A%CAFD08FFA87DFD0EFF7DA852A8FFFFA87DA8FF7DA8FFA8A8FD05FFA8FD11%FF939A7F5502A97D27277DF8F8277DF827A87D27A8FFA87DFFFF7DFF52A8%FFFF527D7D7D52FD05FF52FFA85252FFFFA87DFD05FF5227FD06FFCAC3CA%FD08FF52F8A8FD0FFF2752FFFF7D7D7DFF7D52FFA87DA8FD16FFCFC9C97E%797FA92579FFA852FFA82727A827F8277DF8F87D7DF8A87DA8FFFFFF7D7D%A8FD05FF7D27A852A87D7DFF7D7DA8FD04FF52F8A8FD05FFC393C3FD08FF%7D527DFD0DFFA87D7DFFFFFF527D52A87D52A8A852A8FD04FFA8A8FD13FF%C292CFFF7F79A3552B7FFF7EA9FFCF52A8A827277D27F8277D7DFD0CFF7D%FF52FF7DA8FFA852A8FFFFFFA8A8FD07FFCABBC3FD09FFA8A8FD0DFF7D52%A8FD04FF7DA8A8A87DFFA8A8FD08FF7DFFA8A8A8FFA8FD0BFFCACAC3CAC9%FFFFA97FA97F2B4FA9A379A9FFA9FFFFFF52A852A8FFFFFFA8A8A8FD06FF%7DA8A82752A8FF7D7DFFFFA8FF7DFD08FFCAA1FFCAFD09FFA8FD0DFFA87D%7DFD0AFFA87DFD07FF7D27F8525227F852A8FD0DFFCA9393CAFD04FFA9FF%A97F2B7F7F4F2BA9A854FF7C7DFFFFFD057DFD0CFFA852FFFF277DFD0AFF%C3CAFD0BFF7DFD19FFA8A8FD06FFA8FF7DA8A8A87D7DA8FD0FFFCAFFC9C3%99CFFD08FF7FA3A97F02A97CA8FFA8A8FFFFFFA8A8FD0BFF7D7DFF7DF827%FD0AFF92C2FD0AFF7DF87DFD18FFA852FD05FFA8FFFFA87D7D527D52FD13%FFA1BCA1C99ACAFD08FFA77DFF7DA8FD13FFA852FFFFFFA8FD0AFFBCA1FD%0AFFA8277DFD18FFA8A8FD06FFA8FF27275227F8F87DFD15FFCABC9ACAC3%C9FD06FF7DFF52A8FD05FF7D7DA8FD0BFF7D7DFD0EFF99C3FD0CFF7DFD18%FFA87DFD05FFA8FFFFFFA8FF7D7DA8FD19FFCAC392C3A7C3A1FFAF7DFF7D%A8FD05FF7D52A8FD06FFA87D7DFFFFA852FD0EFFCACAFD0DFFA8FD17FFA8%A8FD05FFA8A8FD22FFA8FFFFBCC2CACA6FCA52A8FD05FF7DA8A8FD06FF7D%2752A8FF7D7DA8FD0CFFC992C9FD0CFF7DF8A8FD16FFA827A87D7D7DA852%52FD067D52A8FD047D5252FD067D52A87D7D7DA87D52FD067D52FD057D52%6FA87D7DFFFFA8FFFF7DA8FD07FF7D7D52FFFFA852A8FD0CFFA0BBC2FD0C%FF7DF87DFD18FFA8FFA8FFA8FFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7D52A8FF%A8FD0452FD08FF52A852A8FF7DA8FD0DFFCAA1FFCAFD0DFF527DFD1AFFA8%7D7D7D52FD1FFF7D52A852A8FD06FF7D7DFFA87DA8FFFF7DA8FD06FFA87D%7DFFFFA852FD0EFFCACAFD0EFF27F8FD1BFFA87D277D7DFD1EFFA852A852%A8FD06FF52A8FFFFA8525252A8FD0CFF7D7DFD0EFF92C2A8FD0DFF7D527D%FD19FFA852527D52A8FD1EFF7D52A87D7DFD06FF7D7DFD13FFA852FD0EFF%C2C3FD10FF7D7DFD19FFA8FD09FFA8FD19FFA8FD09FF52A8FD13FF7D7DFD%0DFFCA99CAFD10FFF8F8FD21FFA8527D7DA8A8A8277DA8FFA8A8FFFF7DA8%7DA87DA87DA8FD0FFF7DA8FD0EFFA87D7DFFFFA852FD0DFFCABCC9FD10FF%A87DA8FD20FFA852527D52527D7D527D7D5252FFA87D7DA85252527D7DFD%0FFF52A8FD0EFF7D527DFFFF7D7DFD21FFA8F87DA8FD1EFFA87DA8275252%7D27FD0552A8A8527D7D7D527D527DFD0FFF7D7DFD0EFF527D52FFFFA852%A8FD20FF7D7D27F827527DA8FD1EFFA8FFA8FFFFFFA8FFA8FFFFA8A8FD04%FFA8A8FD0EFF7D52A8FD0EFF527D52A8FF7DA8FD10FFCFFD12FF7DFD05F8%2752A8FD3DFF7D7DFD0EFFA87D7DFFFFA852FD25FFA8A85227F8F8F8FF52%A8FD37FFA8A8FF52A8FD13FF7D7DFD10FFA8FD19FF527D52F8F8A8F852FD%2EFFA8FFFFA8A8A8F827FF7DA8FD13FFA852FD2DFFA8A87D5252FF7DA8F8%A8FFFF52A8FD07FF7D7DFD0BFFA8FD07FFA8FF27A8A8A8FFA8A8FF7DFFA8%FFA87D7DFF52A8FD13FF7D7DFD10FFCAFD23FF522752FF52F8F8A8FFA8A8%FF7DFFF827FD05A8FF7DFF7DA8A87DA8A87DFF7DFFA8A87DF852FFA8FFA8%FD0AFF7DA8FD13FFA852FD39FF7DA8FD06FFA8A87DFD15FFA8FD0FFF52A8%FD05FFA852A8FFFFFFA8FFFFFF5252FFFF7D7DFFA8A8FD1AFFA8A8FD1BFF%A8FD1AFFA87DFD12FF7D7DFD06FF527D527D527DFFFFA8527DFFFF7D27A8%527DA87D7DA852A87D7DA87D52A8527DA87D7DA852A8FD047D52A8527DA8%7D7DA852A87D7DA87D52A87D7DA87D7DA852A87D7D7DA852A85252A87D7D%A852FD047DA852A87D7DA87D7DA852A8A87D7DA852A85252A87D52A852FD%047DA852A87D7DA87D7D7D52A8FD05FF7D7D5227527D52FFFF522752FFFF%A87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA8%7DA87DA87DA87DA87DA87DA87DA87DA8527DA8FD04FFA87D7DFFA8FFA8FD%04FFA852FD07FFA8FF7DA8FD16FF7DA8FD1CFF52A8FD16FFA87DA8FF7DA8%FD16FFA8277D7D52527D52FD0AFFA8F8A87D7D52A8FD14FF7D7D52A8FD17%FFA8F8FF527D52FD16FF527D52527D52A8FD15FFA852527D277D5252A8FD%07FFA8FFFF7DA87DA8A87DFD14FF7DA8A87DFD18FF7DA87DFF7DA8FD16FF%A87D52FFA87DFD16FFA8FFA87D7D7DA8FD07FF7D7D52FF52A87D7D52A8FD%14FF7D7D52A8FD18FF52A8527D52FD16FF5252FF527D52A8FD28FFA8A8FF%7D7DFD16FF7D7DFD19FFA8A8FF52A8FD16FF7D7D7DFF7DA8FD55FFA8FD5C%FFA8FD08FFA8FD08FFA87D7DA8A8FD08FFA8527DA8FFFFFFA8FD0BFFA8A8%FD09FFA8A8FD05FFA8A8FFFFA8FFFFFFA8FD05FFA8FD2CFFA852FFFF7DA8%527D52A87D527DA87DA87DA8FF7D527D52A8A87D7DFF7D7DA8FF52A8A852%A8FD047DFFFFA827A87D7DFFFFFF5227FF7D7DA8FF52A8A87D27A87D7DA8%FF7D7D52A87D7DA852A87D277D7D7DA87DA8FD2CFF52FFFF7D527D527D52%7D527D27525252A8FF7D527D7D52A852527D5252FFFF7D527D7D7D27527D%A8FFFFA87D52A87D7DFFA852527D527D5252A852527D7D525227A8FF7DA8%A87D7D7D52A852527D7D7D52A87D7DFD2BFFA852A8A852527D7D7DFD0552%7D7D52FFFF7D7DFFFD045227527D527DFF527D7D5252FD047DFFFFFF5252%7D7D7DFFFD0552FF27527D7D27A85252527DA8FF52A8FF5252FF27A85252%527D7D527D7D7DFD2CFF7D7D7DA87DFFA8FF7DFD04A87DA8A8FFFFA87D52%A8A8A87DA87D7D7DFFFFA8A8FF7DFF7DFD04A8FFFFA8A87D7DFFFFA8FFFF%7DA8FFA8A87DA8FF7D7DA87D7DFFFFA87DFF7DA8FFA852A8A8A87DA87DFF%52FD71FFA8FD0CFFA8A8FDFCFFFD11FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-11T12:17:50-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWH/m3rnmrQvy+1&#xA;rVvLS236QsrSedri7dlEMccTO0sUYimWWVafCj8Vr1NBQqsU/MDzr5tt/MVxp+lz6jZWGkaJDq9/&#xA;fabaWF3xe4lmXndR3rxs8EaWrMY7akrVNCOOKs58zeeNN8vaHY6rLBc6kNRmt7Wwt9PjDzTzXQrG&#xA;EWR41AIBPxOPvxVKrb80JJ71rBfKWvJfJAlzJavFZK6xSO8aMf8AS6btE3fFVh/NeIaW+qf4X1z6&#xA;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&#xA;rsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>10.796604</stDim:w>
            <stDim:h>5.689602</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -407.3 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 407.3 li
776.583 407.3 li
776.583 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2 lw
0 lc
0 lj
10 ml
[7.67246 7.67246 7.67246 7.67246 ] 0 dsh
true sadj
137.313 189.417 mo
137.613 189.737 li
158.641 164.197 li
172.216 151.521 li
184.016 145.871 li
194.105 130.333 li
206.105 97.4419 li
218.775 51.3716 li
233.19 53.3696 li
249.13 112.491 li
264.288 138.477 li
274.652 161.962 li
288.189 193.234 li
299.806 218.76 li
310.447 233.998 li
321.542 251.502 li
331.022 265.734 li
341.932 272.332 li
349.781 274.369 li
357.34 276.033 li
365.901 278.295 li
374.06 280.434 li
382.587 283.707 li
399.029 287.814 li
417.24 290.822 li
445.795 297.965 li
472.349 300.074 li
527.329 300.34 li
665.087 298.77 li
744.926 289.152 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
130.684 193.245 mo
143.942 193.245 li
137.313 181.762 li
130.684 193.245 li
cp
f
143.942 193.245 mo
137.313 181.762 li
137.313 181.762 li
143.942 193.245 li
cp
f
1 lw
[] 0 dsh
137.313 181.762 mo
130.684 193.245 li
143.942 193.245 li
137.313 181.762 li
@
130.983 193.565 mo
144.242 193.565 li
137.613 182.082 li
130.983 193.565 li
cp
f
144.242 193.565 mo
137.613 182.082 li
137.613 182.082 li
144.242 193.565 li
cp
f
137.613 182.082 mo
130.983 193.565 li
144.242 193.565 li
137.613 182.082 li
@
152.011 168.025 mo
165.27 168.025 li
158.641 156.542 li
152.011 168.025 li
cp
f
165.27 168.025 mo
158.641 156.542 li
158.641 156.542 li
165.27 168.025 li
cp
f
158.641 156.542 mo
152.011 168.025 li
165.27 168.025 li
158.641 156.542 li
@
165.588 155.35 mo
178.845 155.35 li
172.216 143.867 li
165.588 155.35 li
cp
f
178.845 155.35 mo
172.216 143.867 li
172.216 143.867 li
178.845 155.35 li
cp
f
172.216 143.867 mo
165.588 155.35 li
178.845 155.35 li
172.216 143.867 li
@
177.386 149.699 mo
190.645 149.699 li
184.016 138.216 li
177.386 149.699 li
cp
f
190.645 149.699 mo
184.016 138.216 li
184.016 138.216 li
190.645 149.699 li
cp
f
184.016 138.216 mo
177.386 149.699 li
190.645 149.699 li
184.016 138.216 li
@
187.475 134.161 mo
200.734 134.161 li
194.105 122.678 li
187.475 134.161 li
cp
f
200.734 134.161 mo
194.105 122.678 li
194.105 122.678 li
200.734 134.161 li
cp
f
194.105 122.678 mo
187.475 134.161 li
200.734 134.161 li
194.105 122.678 li
@
199.476 101.268 mo
212.735 101.268 li
206.105 89.7866 li
199.476 101.268 li
cp
f
212.735 101.268 mo
206.105 89.7866 li
206.105 89.7866 li
212.735 101.268 li
cp
f
206.105 89.7866 mo
199.476 101.268 li
212.735 101.268 li
206.105 89.7866 li
@
212.146 55.1997 mo
225.404 55.1997 li
218.775 43.7168 li
212.146 55.1997 li
cp
f
225.404 55.1997 mo
218.775 43.7168 li
218.775 43.7168 li
225.404 55.1997 li
cp
f
218.775 43.7168 mo
212.146 55.1997 li
225.404 55.1997 li
218.775 43.7168 li
@
226.56 57.1963 mo
239.819 57.1963 li
233.19 45.7148 li
226.56 57.1963 li
cp
f
239.819 57.1963 mo
233.19 45.7148 li
233.19 45.7148 li
239.819 57.1963 li
cp
f
233.19 45.7148 mo
226.56 57.1963 li
239.819 57.1963 li
233.19 45.7148 li
@
242.501 116.317 mo
255.758 116.317 li
249.13 104.836 li
242.501 116.317 li
cp
f
255.758 116.317 mo
249.13 104.836 li
249.13 104.836 li
255.758 116.317 li
cp
f
249.13 104.836 mo
242.501 116.317 li
255.758 116.317 li
249.13 104.836 li
@
257.659 142.305 mo
270.917 142.305 li
264.288 130.822 li
257.659 142.305 li
cp
f
270.917 142.305 mo
264.288 130.822 li
264.288 130.822 li
270.917 142.305 li
cp
f
264.288 130.822 mo
257.659 142.305 li
270.917 142.305 li
264.288 130.822 li
@
268.023 165.791 mo
281.281 165.791 li
274.652 154.308 li
268.023 165.791 li
cp
f
281.281 165.791 mo
274.652 154.308 li
274.652 154.308 li
281.281 165.791 li
cp
f
274.652 154.308 mo
268.023 165.791 li
281.281 165.791 li
274.652 154.308 li
@
281.561 197.062 mo
294.819 197.062 li
288.189 185.579 li
281.561 197.062 li
cp
f
294.819 197.062 mo
288.189 185.579 li
288.189 185.579 li
294.819 197.062 li
cp
f
288.189 185.579 mo
281.561 197.062 li
294.819 197.062 li
288.189 185.579 li
@
293.178 222.586 mo
306.435 222.586 li
299.806 211.104 li
293.178 222.586 li
cp
f
306.435 222.586 mo
299.806 211.104 li
299.806 211.104 li
306.435 222.586 li
cp
f
299.806 211.104 mo
293.178 222.586 li
306.435 222.586 li
299.806 211.104 li
@
303.818 237.824 mo
317.078 237.824 li
310.447 226.342 li
303.818 237.824 li
cp
f
317.078 237.824 mo
310.447 226.342 li
310.447 226.342 li
317.078 237.824 li
cp
f
310.447 226.342 mo
303.818 237.824 li
317.078 237.824 li
310.447 226.342 li
@
314.913 255.33 mo
328.172 255.33 li
321.542 243.848 li
314.913 255.33 li
cp
f
328.172 255.33 mo
321.542 243.848 li
321.542 243.848 li
328.172 255.33 li
cp
f
321.542 243.848 mo
314.913 255.33 li
328.172 255.33 li
321.542 243.848 li
@
324.394 269.563 mo
337.651 269.563 li
331.022 258.078 li
324.394 269.563 li
cp
f
337.651 269.563 mo
331.022 258.078 li
331.022 258.078 li
337.651 269.563 li
cp
f
331.022 258.078 mo
324.394 269.563 li
337.651 269.563 li
331.022 258.078 li
@
335.301 276.16 mo
348.56 276.16 li
341.932 264.678 li
335.301 276.16 li
cp
f
348.56 276.16 mo
341.932 264.678 li
341.932 264.678 li
348.56 276.16 li
cp
f
341.932 264.678 mo
335.301 276.16 li
348.56 276.16 li
341.932 264.678 li
@
343.153 278.197 mo
356.412 278.197 li
349.781 266.715 li
343.153 278.197 li
cp
f
356.412 278.197 mo
349.781 266.715 li
349.781 266.715 li
356.412 278.197 li
cp
f
349.781 266.715 mo
343.153 278.197 li
356.412 278.197 li
349.781 266.715 li
@
350.711 279.861 mo
363.969 279.861 li
357.34 268.379 li
350.711 279.861 li
cp
f
363.969 279.861 mo
357.34 268.379 li
357.34 268.379 li
363.969 279.861 li
cp
f
357.34 268.379 mo
350.711 279.861 li
363.969 279.861 li
357.34 268.379 li
@
359.273 282.123 mo
372.53 282.123 li
365.901 270.641 li
359.273 282.123 li
cp
f
372.53 282.123 mo
365.901 270.641 li
365.901 270.641 li
372.53 282.123 li
cp
f
365.901 270.641 mo
359.273 282.123 li
372.53 282.123 li
365.901 270.641 li
@
367.431 284.26 mo
380.69 284.26 li
374.06 272.777 li
367.431 284.26 li
cp
f
380.69 284.26 mo
374.06 272.777 li
374.06 272.777 li
380.69 284.26 li
cp
f
374.06 272.777 mo
367.431 284.26 li
380.69 284.26 li
374.06 272.777 li
@
375.959 287.535 mo
389.216 287.535 li
382.587 276.053 li
375.959 287.535 li
cp
f
389.216 287.535 mo
382.587 276.053 li
382.587 276.053 li
389.216 287.535 li
cp
f
382.587 276.053 mo
375.959 287.535 li
389.216 287.535 li
382.587 276.053 li
@
392.399 291.643 mo
405.658 291.643 li
399.029 280.16 li
392.399 291.643 li
cp
f
405.658 291.643 mo
399.029 280.16 li
399.029 280.16 li
405.658 291.643 li
cp
f
399.029 280.16 mo
392.399 291.643 li
405.658 291.643 li
399.029 280.16 li
@
410.611 294.648 mo
423.871 294.648 li
417.24 283.166 li
410.611 294.648 li
cp
f
423.871 294.648 mo
417.24 283.166 li
417.24 283.166 li
423.871 294.648 li
cp
f
417.24 283.166 mo
410.611 294.648 li
423.871 294.648 li
417.24 283.166 li
@
439.167 301.791 mo
452.426 301.791 li
445.795 290.309 li
439.167 301.791 li
cp
f
452.426 301.791 mo
445.795 290.309 li
445.795 290.309 li
452.426 301.791 li
cp
f
445.795 290.309 mo
439.167 301.791 li
452.426 301.791 li
445.795 290.309 li
@
465.72 303.9 mo
478.979 303.9 li
472.349 292.418 li
465.72 303.9 li
cp
f
478.979 303.9 mo
472.349 292.418 li
472.349 292.418 li
478.979 303.9 li
cp
f
472.349 292.418 mo
465.72 303.9 li
478.979 303.9 li
472.349 292.418 li
@
520.698 304.168 mo
533.958 304.168 li
527.329 292.686 li
520.698 304.168 li
cp
f
533.958 304.168 mo
527.329 292.686 li
527.329 292.686 li
533.958 304.168 li
cp
f
527.329 292.686 mo
520.698 304.168 li
533.958 304.168 li
527.329 292.686 li
@
658.458 302.598 mo
671.716 302.598 li
665.087 291.115 li
658.458 302.598 li
cp
f
671.716 302.598 mo
665.087 291.115 li
665.087 291.115 li
671.716 302.598 li
cp
f
665.087 291.115 mo
658.458 302.598 li
671.716 302.598 li
665.087 291.115 li
@
738.297 292.98 mo
751.554 292.98 li
744.926 281.498 li
738.297 292.98 li
cp
f
751.554 292.98 mo
744.926 281.498 li
744.926 281.498 li
751.554 292.98 li
cp
f
744.926 281.498 mo
738.297 292.98 li
751.554 292.98 li
744.926 281.498 li
@
[7.67246 7.67246 7.67246 7.67246 ] 0 dsh
218.775 321.576 mo
218.775 17.5747 li
0 .993988 1 0 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 77 /M putdup 83 /S putdup 97 /a putdup 101 /e putdup 104 /h putdup 105 /i putdup 110 /n putdup 114 /r putdup 118 /v putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings12 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/space <1C60D8A8C9B854D00D> |-/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/M <1C60D8A8C9B6B41C9910B30BE12408A0CCE83CFCBF71D6A0AFED0B0C7E6B8742F00BF38074693AE67B7536DF8025FC27BB7165EE6A43D7B9497E065E42F0EE8DA1C58C8863D1E0F8290CD2A3925749EE5F186B> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IDULSA+Helvetica /Helvetica findfont ct_VMDictPut/IDULSA+Helvetica*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 11{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n 3{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [0 -16.6004 -16.5732 0 0 0 ]msf215.47 261.295 mo(Ave Shear Min)[-11.0723 -8.2998 -9.23242 -4.6123 -11.0723 -9.23242 -9.23242 -9.23242 -5.52783 -4.6123 -13.8281 -3.68799 0 ]ysh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/Z <1C60D8A8C9B7D8BE437B2DC77047C9D07D83E35A9BA879688093FC56DA40389D94824B037D3FB415> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/p <1C60D8A8C9B7EF322BA467487181334E955BE246DF5D0EF3A11E2BDC8B674F6546E88A741A6A22FD8101960B985F64CBBE95E02BBF21B77F9A8334BFBA9533492E7CA0F0DECFBF12D8467325B4174F987BBF353C73C5D70057F40D42361649961064C7B7F613D284310CB0B59908DA85F34298558C6B0DF453AED21873A379BC9BBE582E1040BDEC2230FBB52642> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 46 /period putdup 90 /Z putdup 111 /o putdup 112 /p putdup 117 /u putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A 11{/.notdef}rp /M 5{/.notdef}rp /S 6{/.notdef}rp /Z 6{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o /p /.notdef /r 2{/.notdef}rp /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [19.3671 0 0 -19.3354 0 0 ]msf27.0405 328.279 mo(Zer)sh56.0952 328.279 mo(o)sh21.6577 346.904 mo(Supp.)[12.9175 10.7715 10.771 10.771 0 ]xsh3.00001 lw
[] 0 dsh
746.539 321.576 mo
746.539 316.26 li
729.487 321.576 mo
729.487 316.26 li
712.435 321.576 mo
712.435 316.26 li
695.382 321.576 mo
695.382 316.26 li
678.333 321.576 mo
678.333 316.26 li
661.28 321.576 mo
661.28 316.26 li
644.228 321.576 mo
644.228 310.943 li
627.176 321.576 mo
627.176 316.26 li
610.125 321.576 mo
610.125 316.26 li
593.074 321.576 mo
593.074 316.26 li
576.021 321.576 mo
576.021 316.26 li
558.971 321.576 mo
558.971 316.26 li
541.919 321.576 mo
541.919 316.26 li
524.867 321.576 mo
524.867 316.26 li
507.815 321.576 mo
507.815 316.26 li
490.764 321.576 mo
490.764 316.26 li
473.712 321.576 mo
473.712 310.943 li
456.661 321.576 mo
456.661 316.26 li
439.608 321.576 mo
439.608 316.26 li
422.558 321.576 mo
422.558 316.26 li
405.505 321.576 mo
405.505 316.26 li
388.454 321.576 mo
388.454 316.26 li
371.403 321.576 mo
371.403 316.26 li
354.351 321.576 mo
354.351 316.26 li
337.299 321.576 mo
337.299 316.26 li
320.247 321.576 mo
320.247 316.26 li
303.197 321.576 mo
303.197 310.943 li
286.145 321.576 mo
286.145 316.26 li
269.093 321.576 mo
269.093 316.26 li
252.041 321.576 mo
252.041 316.26 li
234.99 321.576 mo
234.99 316.26 li
217.938 321.576 mo
217.938 316.26 li
200.886 321.576 mo
200.886 316.26 li
183.835 321.576 mo
183.835 316.26 li
166.784 321.576 mo
166.784 316.26 li
149.731 321.576 mo
149.731 316.26 li
132.68 321.576 mo
132.68 310.943 li
115.628 321.576 mo
115.628 316.26 li
115.628 321.576 mo
763.589 321.576 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/L <1C60D8A8C9B7EF320B5E1B1901757FD427860A5A6931496E07> |-/R <1C60D8A8C9B6079F62E4AB3BE2637412A7FA2BF1A87387986CC045CAB872B149BF5CA8B183616945E928E44276850B6ACD583D0202E4733E2391A44F4BCB738AB089D22707E0F4100F2BC6F35BD460D56FBB8A5713D4AF8760EB8EC1E1AE6F49A9B2B1066A8DA04011CCA29E2BB62A652880D30D80185E3336BD5BF6EB5D116E1FAF0793D4F86835A22CB564EFB5339E311318AE2981A0679F359C9E7A1FF6CE964A> |-/V <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 33 /minus putdup 40 /parenleft putdup 41 /parenright putdup 48 /zero putdup 49 /one putdup 50 /two putdup 66 /B putdup 76 /L putdup 82 /R putdup 86 /V putdup 100 /d putdup 108 /l putdup 109 /m putdup 115 /s putdup 116 /t putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two 14{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [34.5841 0 0 -34.5274 0 0 ]msf108.322 355.693 mo(!10)[20.1968 19.2339 0 ]xsh293.712 355.693 mo(01)[161.028 0 ]xsh473.962 355.693 mo(02)[151.311 0 ]xsh644.486 355.693 mo(0)sh186.15 390.693 mo(Limite)sh278.402 390.693 mo(r Bias Re)sh420.623 390.693 mo(l. to)sh476.366 390.693 mo( An)sh528.275 390.693 mo(ode )[19.2344 19.2344 19.2334 0 ]xsh595.572 390.693 mo(\()sh607.08 390.693 mo(Volts)[23.0674 19.2344 7.68262 9.60938 0 ]xsh683.97 390.693 mo(\))sh115.628 17.5747 mo
126.26 17.5747 li
115.628 30.2422 mo
120.944 30.2422 li
115.628 42.9082 mo
120.944 42.9082 li
115.628 55.5757 mo
120.944 55.5757 li
115.628 68.2417 mo
126.26 68.2417 li
115.628 80.9092 mo
120.944 80.9092 li
115.628 93.5752 mo
120.944 93.5752 li
115.628 106.241 mo
120.944 106.241 li
115.628 118.909 mo
126.26 118.909 li
115.628 131.575 mo
120.944 131.575 li
115.628 144.242 mo
120.944 144.242 li
115.628 156.908 mo
120.944 156.908 li
115.628 169.576 mo
126.26 169.576 li
115.628 182.242 mo
120.944 182.242 li
115.628 194.909 mo
120.944 194.909 li
115.628 207.574 mo
120.944 207.574 li
115.628 220.242 mo
126.26 220.242 li
115.628 232.908 mo
120.944 232.908 li
115.628 245.576 mo
120.944 245.576 li
115.628 258.242 mo
120.944 258.242 li
115.628 270.908 mo
126.26 270.908 li
115.628 283.576 mo
120.944 283.576 li
115.628 296.242 mo
120.944 296.242 li
115.628 308.908 mo
120.944 308.908 li
115.628 321.576 mo
126.26 321.576 li
115.628 321.576 mo
115.628 17.5747 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 52 /four putdup 54 /six putdup 56 /eight putdup 99 /c putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [34.5841 0 0 -34.5274 0 0 ]msf80.0015 333.295 mo(4)sh80.0015 282.982 mo(6)sh80.0015 232.311 mo(8)sh61.0171 181.639 mo(10)[19.2339 0 ]xsh61.0171 130.975 mo(12)[19.2339 0 ]xsh61.0171 80.3027 mo(14)[19.2339 0 ]xsh61.0171 29.6465 mo(16)[19.2339 0 ]xsh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 225 /uni3008 putdup 241 /uni3009 putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/uni3008 <1C60D8A8C9B82356E2B8CD2A1CDD298E14C4068471CC72806EAA3789CBB16DA7C812A876> |-/uni3009 <1C60D8A8C9B82356E2B8C33BA3875A3753B2F1BD8D6463BBCDE0FCB5CFF1E78D735CA7E7> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IDULSB+Symbol /Symbol findfont ct_VMDictPut/IDULSB+Symbol*1 [225{/.notdef}rp /uni3008 15{/.notdef}rp /uni3009 14{/.notdef}rp]IDULSB+Symbol nfIDULSB+Symbol*1 [0 -34.584 -34.5274 0 0 0 ]msf30.3843 243.279 mo(\341)shIDULSA+Helvetica*1 [0 -34.584 -34.5274 0 0 0 ]msf30.3843 229.92 mo(L)shIDULSA+Helvetica*1 [0 -21.4075 -21.3724 0 0 0 ]msf38.6343 211.412 mo(n)shIDULSA+Helvetica*1 [0 -34.584 -34.5274 0 0 0 ]msf30.3843 199.232 mo( )shIDULSB+Symbol*1 [0 -34.584 -34.5274 0 0 0 ]msf30.3843 189.764 mo(\361)shIDULSA+Helvetica*1 [0 -34.584 -34.5274 0 0 0 ]msf30.3843 176.404 mo( \(cm\))[-9.6084 -11.5171 -17.292 -28.8086 0 ]ysh752.958 17.5747 mo
763.589 17.5747 li
758.275 30.2422 mo
763.589 30.2422 li
758.275 42.9082 mo
763.589 42.9082 li
758.275 55.5757 mo
763.589 55.5757 li
752.958 68.2417 mo
763.589 68.2417 li
758.275 80.9092 mo
763.589 80.9092 li
758.275 93.5752 mo
763.589 93.5752 li
758.275 106.241 mo
763.589 106.241 li
752.958 118.909 mo
763.589 118.909 li
758.275 131.575 mo
763.589 131.575 li
758.275 144.242 mo
763.589 144.242 li
758.275 156.908 mo
763.589 156.908 li
752.958 169.576 mo
763.589 169.576 li
758.275 182.242 mo
763.589 182.242 li
758.275 194.909 mo
763.589 194.909 li
758.275 207.574 mo
763.589 207.574 li
752.958 220.242 mo
763.589 220.242 li
758.275 232.908 mo
763.589 232.908 li
758.275 245.576 mo
763.589 245.576 li
758.275 258.242 mo
763.589 258.242 li
752.958 270.908 mo
763.589 270.908 li
758.275 283.576 mo
763.589 283.576 li
758.275 296.242 mo
763.589 296.242 li
758.275 308.908 mo
763.589 308.908 li
752.958 321.576 mo
763.589 321.576 li
763.589 321.576 mo
763.589 17.5747 li
746.539 22.8911 mo
746.539 17.5747 li
729.487 22.8911 mo
729.487 17.5747 li
712.435 22.8911 mo
712.435 17.5747 li
695.382 22.8911 mo
695.382 17.5747 li
678.333 22.8911 mo
678.333 17.5747 li
661.28 22.8911 mo
661.28 17.5747 li
644.228 28.2075 mo
644.228 17.5747 li
627.176 22.8911 mo
627.176 17.5747 li
610.125 22.8911 mo
610.125 17.5747 li
593.074 22.8911 mo
593.074 17.5747 li
576.021 22.8911 mo
576.021 17.5747 li
558.971 22.8911 mo
558.971 17.5747 li
541.919 22.8911 mo
541.919 17.5747 li
524.867 22.8911 mo
524.867 17.5747 li
507.815 22.8911 mo
507.815 17.5747 li
490.764 22.8911 mo
490.764 17.5747 li
473.712 28.2075 mo
473.712 17.5747 li
456.661 22.8911 mo
456.661 17.5747 li
439.608 22.8911 mo
439.608 17.5747 li
422.558 22.8911 mo
422.558 17.5747 li
405.505 22.8911 mo
405.505 17.5747 li
388.454 22.8911 mo
388.454 17.5747 li
371.403 22.8911 mo
371.403 17.5747 li
354.351 22.8911 mo
354.351 17.5747 li
337.299 22.8911 mo
337.299 17.5747 li
320.247 22.8911 mo
320.247 17.5747 li
303.197 28.2075 mo
303.197 17.5747 li
286.145 22.8911 mo
286.145 17.5747 li
269.093 22.8911 mo
269.093 17.5747 li
252.041 22.8911 mo
252.041 17.5747 li
234.99 22.8911 mo
234.99 17.5747 li
217.938 22.8911 mo
217.938 17.5747 li
200.886 22.8911 mo
200.886 17.5747 li
183.835 22.8911 mo
183.835 17.5747 li
166.784 22.8911 mo
166.784 17.5747 li
149.731 22.8911 mo
149.731 17.5747 li
132.68 28.2075 mo
132.68 17.5747 li
115.628 22.8911 mo
115.628 17.5747 li
115.628 17.5747 mo
763.589 17.5747 li
@
2 lw
449.229 86.8794 mo
449.229 86.8794 li
470.658 96.1021 li
492.086 105.611 li
513.515 115.188 li
534.944 124.591 li
556.372 133.602 li
577.8 142.033 li
599.229 149.75 li
620.658 156.678 li
642.086 162.793 li
663.515 168.129 li
684.943 172.756 li
706.372 176.775 li
727.8 180.303 li
749.229 183.464 li
749.229 183.464 li
.883665 .769161 0 0 cmyk
@
444.256 89.75 mo
454.201 89.75 li
449.229 81.1377 li
444.256 89.75 li
cp
f
454.201 89.75 mo
449.229 81.1377 li
449.229 81.1377 li
454.201 89.75 li
cp
f
1 lw
449.229 81.1377 mo
444.256 89.75 li
454.201 89.75 li
449.229 81.1377 li
@
465.685 98.9731 mo
475.628 98.9731 li
470.658 90.3608 li
465.685 98.9731 li
cp
f
475.628 98.9731 mo
470.658 90.3608 li
470.658 90.3608 li
475.628 98.9731 li
cp
f
470.658 90.3608 mo
465.685 98.9731 li
475.628 98.9731 li
470.658 90.3608 li
@
487.114 108.482 mo
497.057 108.482 li
492.086 99.8711 li
487.114 108.482 li
cp
f
497.057 108.482 mo
492.086 99.8711 li
492.086 99.8711 li
497.057 108.482 li
cp
f
492.086 99.8711 mo
487.114 108.482 li
497.057 108.482 li
492.086 99.8711 li
@
508.542 118.058 mo
518.486 118.058 li
513.515 109.446 li
508.542 118.058 li
cp
f
518.486 118.058 mo
513.515 109.446 li
513.515 109.446 li
518.486 118.058 li
cp
f
513.515 109.446 mo
508.542 118.058 li
518.486 118.058 li
513.515 109.446 li
@
529.97 127.462 mo
539.915 127.462 li
534.944 118.85 li
529.97 127.462 li
cp
f
539.915 127.462 mo
534.944 118.85 li
534.944 118.85 li
539.915 127.462 li
cp
f
534.944 118.85 mo
529.97 127.462 li
539.915 127.462 li
534.944 118.85 li
@
551.401 136.472 mo
561.344 136.472 li
556.372 127.861 li
551.401 136.472 li
cp
f
561.344 136.472 mo
556.372 127.861 li
556.372 127.861 li
561.344 136.472 li
cp
f
556.372 127.861 mo
551.401 136.472 li
561.344 136.472 li
556.372 127.861 li
@
572.83 144.904 mo
582.773 144.904 li
577.8 136.292 li
572.83 144.904 li
cp
f
582.773 144.904 mo
577.8 136.292 li
577.8 136.292 li
582.773 144.904 li
cp
f
577.8 136.292 mo
572.83 144.904 li
582.773 144.904 li
577.8 136.292 li
@
594.258 152.621 mo
604.202 152.621 li
599.229 144.01 li
594.258 152.621 li
cp
f
604.202 152.621 mo
599.229 144.01 li
599.229 144.01 li
604.202 152.621 li
cp
f
599.229 144.01 mo
594.258 152.621 li
604.202 152.621 li
599.229 144.01 li
@
615.687 159.547 mo
625.63 159.547 li
620.658 150.937 li
615.687 159.547 li
cp
f
625.63 159.547 mo
620.658 150.937 li
620.658 150.937 li
625.63 159.547 li
cp
f
620.658 150.937 mo
615.687 159.547 li
625.63 159.547 li
620.658 150.937 li
@
637.115 165.663 mo
647.059 165.663 li
642.086 157.052 li
637.115 165.663 li
cp
f
647.059 165.663 mo
642.086 157.052 li
642.086 157.052 li
647.059 165.663 li
cp
f
642.086 157.052 mo
637.115 165.663 li
647.059 165.663 li
642.086 157.052 li
@
658.543 171 mo
668.488 171 li
663.515 162.388 li
658.543 171 li
cp
f
668.488 171 mo
663.515 162.388 li
663.515 162.388 li
668.488 171 li
cp
f
663.515 162.388 mo
658.543 171 li
668.488 171 li
663.515 162.388 li
@
679.972 175.627 mo
689.916 175.627 li
684.943 167.015 li
679.972 175.627 li
cp
f
689.916 175.627 mo
684.943 167.015 li
684.943 167.015 li
689.916 175.627 li
cp
f
684.943 167.015 mo
679.972 175.627 li
689.916 175.627 li
684.943 167.015 li
@
701.401 179.646 mo
711.344 179.646 li
706.372 171.033 li
701.401 179.646 li
cp
f
711.344 179.646 mo
706.372 171.033 li
706.372 171.033 li
711.344 179.646 li
cp
f
706.372 171.033 mo
701.401 179.646 li
711.344 179.646 li
706.372 171.033 li
@
722.83 183.173 mo
732.773 183.173 li
727.8 174.561 li
722.83 183.173 li
cp
f
732.773 183.173 mo
727.8 174.561 li
727.8 174.561 li
732.773 183.173 li
cp
f
727.8 174.561 mo
722.83 183.173 li
732.773 183.173 li
727.8 174.561 li
@
744.257 186.333 mo
754.202 186.333 li
749.229 177.723 li
744.257 186.333 li
cp
f
754.202 186.333 mo
749.229 177.723 li
749.229 177.723 li
754.202 186.333 li
cp
f
749.229 177.723 mo
744.257 186.333 li
754.202 186.333 li
749.229 177.723 li
@
3.00001 lw
449.229 99.71 mo
449.229 99.71 li
470.658 107.24 li
492.086 114.425 li
513.515 121.182 li
534.944 127.451 li
556.372 133.199 li
577.8 138.411 li
599.229 143.103 li
620.658 147.303 li
642.086 151.063 li
663.515 154.445 li
684.943 157.527 li
706.372 160.4 li
727.8 163.161 li
749.229 165.906 li
749.229 165.906 li
.75021 .679683 .670222 .90164 cmyk
@
450.348 94.0835 mo
451.422 94.4111 li
449.229 93.9683 li
450.348 94.0835 li
cp
f
451.422 94.4111 mo
452.415 94.9385 li
449.229 93.9683 li
451.422 94.4111 li
cp
f
452.415 94.9385 mo
453.288 95.6514 li
449.229 93.9683 li
452.415 94.9385 li
cp
f
453.288 95.6514 mo
454 96.5239 li
449.229 93.9683 li
453.288 95.6514 li
cp
f
454 96.5239 mo
454.528 97.5166 li
449.229 93.9683 li
454 96.5239 li
cp
f
454.528 97.5166 mo
454.856 98.5908 li
449.229 93.9683 li
454.528 97.5166 li
cp
f
454.856 98.5908 mo
454.971 99.71 li
449.229 93.9683 li
454.856 98.5908 li
cp
f
454.971 99.71 mo
454.856 100.829 li
449.229 93.9683 li
454.971 99.71 li
cp
f
454.856 100.829 mo
454.528 101.903 li
449.229 93.9683 li
454.856 100.829 li
cp
f
454.528 101.903 mo
454 102.896 li
449.229 93.9683 li
454.528 101.903 li
cp
f
454 102.896 mo
453.288 103.768 li
449.229 93.9683 li
454 102.896 li
cp
f
453.288 103.768 mo
452.415 104.481 li
449.229 93.9683 li
453.288 103.768 li
cp
f
452.415 104.481 mo
451.422 105.009 li
449.229 93.9683 li
452.415 104.481 li
cp
f
451.422 105.009 mo
450.348 105.336 li
449.229 93.9683 li
451.422 105.009 li
cp
f
450.348 105.336 mo
449.229 105.452 li
449.229 93.9683 li
450.348 105.336 li
cp
f
449.229 105.452 mo
448.109 105.336 li
449.229 93.9683 li
449.229 105.452 li
cp
f
448.109 105.336 mo
447.037 105.009 li
449.229 93.9683 li
448.109 105.336 li
cp
f
447.037 105.009 mo
446.042 104.481 li
449.229 93.9683 li
447.037 105.009 li
cp
f
446.042 104.481 mo
445.169 103.768 li
449.229 93.9683 li
446.042 104.481 li
cp
f
445.169 103.768 mo
444.458 102.896 li
449.229 93.9683 li
445.169 103.768 li
cp
f
444.458 102.896 mo
443.93 101.903 li
449.229 93.9683 li
444.458 102.896 li
cp
f
443.93 101.903 mo
443.603 100.829 li
449.229 93.9683 li
443.93 101.903 li
cp
f
443.603 100.829 mo
443.488 99.71 li
449.229 93.9683 li
443.603 100.829 li
cp
f
443.488 99.71 mo
443.603 98.5908 li
449.229 93.9683 li
443.488 99.71 li
cp
f
443.603 98.5908 mo
443.93 97.5166 li
449.229 93.9683 li
443.603 98.5908 li
cp
f
443.93 97.5166 mo
444.458 96.5239 li
449.229 93.9683 li
443.93 97.5166 li
cp
f
444.458 96.5239 mo
445.169 95.6514 li
449.229 93.9683 li
444.458 96.5239 li
cp
f
445.169 95.6514 mo
446.042 94.9385 li
449.229 93.9683 li
445.169 95.6514 li
cp
f
446.042 94.9385 mo
447.037 94.4111 li
449.229 93.9683 li
446.042 94.9385 li
cp
f
447.037 94.4111 mo
448.109 94.0835 li
449.229 93.9683 li
447.037 94.4111 li
cp
f
448.109 94.0835 mo
449.229 93.9683 li
449.229 93.9683 li
448.109 94.0835 li
cp
f
1 lw
449.229 93.9683 mo
450.348 94.0835 li
451.422 94.4111 li
452.415 94.9385 li
453.288 95.6514 li
454 96.5239 li
454.528 97.5166 li
454.856 98.5908 li
454.971 99.71 li
454.856 100.829 li
454.528 101.903 li
454 102.896 li
453.288 103.768 li
452.415 104.481 li
451.422 105.009 li
450.348 105.336 li
449.229 105.452 li
448.109 105.336 li
447.037 105.009 li
446.042 104.481 li
445.169 103.768 li
444.458 102.896 li
443.93 101.903 li
443.603 100.829 li
443.488 99.71 li
443.603 98.5908 li
443.93 97.5166 li
444.458 96.5239 li
445.169 95.6514 li
446.042 94.9385 li
447.037 94.4111 li
448.109 94.0835 li
449.229 93.9683 li
@
471.777 101.614 mo
472.851 101.941 li
470.658 101.499 li
471.777 101.614 li
cp
f
472.851 101.941 mo
473.843 102.469 li
470.658 101.499 li
472.851 101.941 li
cp
f
473.843 102.469 mo
474.716 103.18 li
470.658 101.499 li
473.843 102.469 li
cp
f
474.716 103.18 mo
475.429 104.053 li
470.658 101.499 li
474.716 103.18 li
cp
f
475.429 104.053 mo
475.957 105.047 li
470.658 101.499 li
475.429 104.053 li
cp
f
475.957 105.047 mo
476.285 106.12 li
470.658 101.499 li
475.957 105.047 li
cp
f
476.285 106.12 mo
476.399 107.24 li
470.658 101.499 li
476.285 106.12 li
cp
f
476.399 107.24 mo
476.285 108.359 li
470.658 101.499 li
476.399 107.24 li
cp
f
476.285 108.359 mo
475.957 109.433 li
470.658 101.499 li
476.285 108.359 li
cp
f
475.957 109.433 mo
475.429 110.426 li
470.658 101.499 li
475.957 109.433 li
cp
f
475.429 110.426 mo
474.716 111.298 li
470.658 101.499 li
475.429 110.426 li
cp
f
474.716 111.298 mo
473.843 112.011 li
470.658 101.499 li
474.716 111.298 li
cp
f
473.843 112.011 mo
472.851 112.539 li
470.658 101.499 li
473.843 112.011 li
cp
f
472.851 112.539 mo
471.777 112.867 li
470.658 101.499 li
472.851 112.539 li
cp
f
471.777 112.867 mo
470.658 112.981 li
470.658 101.499 li
471.777 112.867 li
cp
f
470.658 112.981 mo
469.538 112.867 li
470.658 101.499 li
470.658 112.981 li
cp
f
469.538 112.867 mo
468.464 112.539 li
470.658 101.499 li
469.538 112.867 li
cp
f
468.464 112.539 mo
467.47 112.011 li
470.658 101.499 li
468.464 112.539 li
cp
f
467.47 112.011 mo
466.598 111.298 li
470.658 101.499 li
467.47 112.011 li
cp
f
466.598 111.298 mo
465.886 110.426 li
470.658 101.499 li
466.598 111.298 li
cp
f
465.886 110.426 mo
465.359 109.433 li
470.658 101.499 li
465.886 110.426 li
cp
f
465.359 109.433 mo
465.032 108.359 li
470.658 101.499 li
465.359 109.433 li
cp
f
465.032 108.359 mo
464.917 107.24 li
470.658 101.499 li
465.032 108.359 li
cp
f
464.917 107.24 mo
465.032 106.12 li
470.658 101.499 li
464.917 107.24 li
cp
f
465.032 106.12 mo
465.359 105.047 li
470.658 101.499 li
465.032 106.12 li
cp
f
465.359 105.047 mo
465.886 104.053 li
470.658 101.499 li
465.359 105.047 li
cp
f
465.886 104.053 mo
466.598 103.18 li
470.658 101.499 li
465.886 104.053 li
cp
f
466.598 103.18 mo
467.47 102.469 li
470.658 101.499 li
466.598 103.18 li
cp
f
467.47 102.469 mo
468.464 101.941 li
470.658 101.499 li
467.47 102.469 li
cp
f
468.464 101.941 mo
469.538 101.614 li
470.658 101.499 li
468.464 101.941 li
cp
f
469.538 101.614 mo
470.658 101.499 li
470.658 101.499 li
469.538 101.614 li
cp
f
470.658 101.499 mo
471.777 101.614 li
472.851 101.941 li
473.843 102.469 li
474.716 103.18 li
475.429 104.053 li
475.957 105.047 li
476.285 106.12 li
476.399 107.24 li
476.285 108.359 li
475.957 109.433 li
475.429 110.426 li
474.716 111.298 li
473.843 112.011 li
472.851 112.539 li
471.777 112.867 li
470.658 112.981 li
469.538 112.867 li
468.464 112.539 li
467.47 112.011 li
466.598 111.298 li
465.886 110.426 li
465.359 109.433 li
465.032 108.359 li
464.917 107.24 li
465.032 106.12 li
465.359 105.047 li
465.886 104.053 li
466.598 103.18 li
467.47 102.469 li
468.464 101.941 li
469.538 101.614 li
470.658 101.499 li
@
493.206 108.798 mo
494.28 109.125 li
492.086 108.684 li
493.206 108.798 li
cp
f
494.28 109.125 mo
495.272 109.654 li
492.086 108.684 li
494.28 109.125 li
cp
f
495.272 109.654 mo
496.145 110.365 li
492.086 108.684 li
495.272 109.654 li
cp
f
496.145 110.365 mo
496.858 111.238 li
492.086 108.684 li
496.145 110.365 li
cp
f
496.858 111.238 mo
497.385 112.23 li
492.086 108.684 li
496.858 111.238 li
cp
f
497.385 112.23 mo
497.712 113.305 li
492.086 108.684 li
497.385 112.23 li
cp
f
497.712 113.305 mo
497.828 114.425 li
492.086 108.684 li
497.712 113.305 li
cp
f
497.828 114.425 mo
497.712 115.544 li
492.086 108.684 li
497.828 114.425 li
cp
f
497.712 115.544 mo
497.385 116.618 li
492.086 108.684 li
497.712 115.544 li
cp
f
497.385 116.618 mo
496.858 117.611 li
492.086 108.684 li
497.385 116.618 li
cp
f
496.858 117.611 mo
496.145 118.483 li
492.086 108.684 li
496.858 117.611 li
cp
f
496.145 118.483 mo
495.272 119.195 li
492.086 108.684 li
496.145 118.483 li
cp
f
495.272 119.195 mo
494.28 119.724 li
492.086 108.684 li
495.272 119.195 li
cp
f
494.28 119.724 mo
493.206 120.05 li
492.086 108.684 li
494.28 119.724 li
cp
f
493.206 120.05 mo
492.086 120.165 li
492.086 108.684 li
493.206 120.05 li
cp
f
492.086 120.165 mo
490.967 120.05 li
492.086 108.684 li
492.086 120.165 li
cp
f
490.967 120.05 mo
489.893 119.724 li
492.086 108.684 li
490.967 120.05 li
cp
f
489.893 119.724 mo
488.899 119.195 li
492.086 108.684 li
489.893 119.724 li
cp
f
488.899 119.195 mo
488.028 118.483 li
492.086 108.684 li
488.899 119.195 li
cp
f
488.028 118.483 mo
487.315 117.611 li
492.086 108.684 li
488.028 118.483 li
cp
f
487.315 117.611 mo
486.788 116.618 li
492.086 108.684 li
487.315 117.611 li
cp
f
486.788 116.618 mo
486.459 115.544 li
492.086 108.684 li
486.788 116.618 li
cp
f
486.459 115.544 mo
486.345 114.425 li
492.086 108.684 li
486.459 115.544 li
cp
f
486.345 114.425 mo
486.459 113.305 li
492.086 108.684 li
486.345 114.425 li
cp
f
486.459 113.305 mo
486.788 112.23 li
492.086 108.684 li
486.459 113.305 li
cp
f
486.788 112.23 mo
487.315 111.238 li
492.086 108.684 li
486.788 112.23 li
cp
f
487.315 111.238 mo
488.028 110.365 li
492.086 108.684 li
487.315 111.238 li
cp
f
488.028 110.365 mo
488.899 109.654 li
492.086 108.684 li
488.028 110.365 li
cp
f
488.899 109.654 mo
489.893 109.125 li
492.086 108.684 li
488.899 109.654 li
cp
f
489.893 109.125 mo
490.967 108.798 li
492.086 108.684 li
489.893 109.125 li
cp
f
490.967 108.798 mo
492.086 108.684 li
492.086 108.684 li
490.967 108.798 li
cp
f
492.086 108.684 mo
493.206 108.798 li
494.28 109.125 li
495.272 109.654 li
496.145 110.365 li
496.858 111.238 li
497.385 112.23 li
497.712 113.305 li
497.828 114.425 li
497.712 115.544 li
497.385 116.618 li
496.858 117.611 li
496.145 118.483 li
495.272 119.195 li
494.28 119.724 li
493.206 120.05 li
492.086 120.165 li
490.967 120.05 li
489.893 119.724 li
488.899 119.195 li
488.028 118.483 li
487.315 117.611 li
486.788 116.618 li
486.459 115.544 li
486.345 114.425 li
486.459 113.305 li
486.788 112.23 li
487.315 111.238 li
488.028 110.365 li
488.899 109.654 li
489.893 109.125 li
490.967 108.798 li
492.086 108.684 li
@
514.634 115.555 mo
515.708 115.883 li
513.515 115.44 li
514.634 115.555 li
cp
f
515.708 115.883 mo
516.701 116.41 li
513.515 115.44 li
515.708 115.883 li
cp
f
516.701 116.41 mo
517.574 117.122 li
513.515 115.44 li
516.701 116.41 li
cp
f
517.574 117.122 mo
518.287 117.994 li
513.515 115.44 li
517.574 117.122 li
cp
f
518.287 117.994 mo
518.814 118.989 li
513.515 115.44 li
518.287 117.994 li
cp
f
518.814 118.989 mo
519.141 120.061 li
513.515 115.44 li
518.814 118.989 li
cp
f
519.141 120.061 mo
519.256 121.182 li
513.515 115.44 li
519.141 120.061 li
cp
f
519.256 121.182 mo
519.141 122.3 li
513.515 115.44 li
519.256 121.182 li
cp
f
519.141 122.3 mo
518.814 123.375 li
513.515 115.44 li
519.141 122.3 li
cp
f
518.814 123.375 mo
518.287 124.367 li
513.515 115.44 li
518.814 123.375 li
cp
f
518.287 124.367 mo
517.574 125.24 li
513.515 115.44 li
518.287 124.367 li
cp
f
517.574 125.24 mo
516.701 125.953 li
513.515 115.44 li
517.574 125.24 li
cp
f
516.701 125.953 mo
515.708 126.48 li
513.515 115.44 li
516.701 125.953 li
cp
f
515.708 126.48 mo
514.634 126.808 li
513.515 115.44 li
515.708 126.48 li
cp
f
514.634 126.808 mo
513.515 126.923 li
513.515 115.44 li
514.634 126.808 li
cp
f
513.515 126.923 mo
512.396 126.808 li
513.515 115.44 li
513.515 126.923 li
cp
f
512.396 126.808 mo
511.322 126.48 li
513.515 115.44 li
512.396 126.808 li
cp
f
511.322 126.48 mo
510.33 125.953 li
513.515 115.44 li
511.322 126.48 li
cp
f
510.33 125.953 mo
509.457 125.24 li
513.515 115.44 li
510.33 125.953 li
cp
f
509.457 125.24 mo
508.744 124.367 li
513.515 115.44 li
509.457 125.24 li
cp
f
508.744 124.367 mo
508.216 123.375 li
513.515 115.44 li
508.744 124.367 li
cp
f
508.216 123.375 mo
507.888 122.3 li
513.515 115.44 li
508.216 123.375 li
cp
f
507.888 122.3 mo
507.773 121.182 li
513.515 115.44 li
507.888 122.3 li
cp
f
507.773 121.182 mo
507.888 120.061 li
513.515 115.44 li
507.773 121.182 li
cp
f
507.888 120.061 mo
508.216 118.989 li
513.515 115.44 li
507.888 120.061 li
cp
f
508.216 118.989 mo
508.744 117.994 li
513.515 115.44 li
508.216 118.989 li
cp
f
508.744 117.994 mo
509.457 117.122 li
513.515 115.44 li
508.744 117.994 li
cp
f
509.457 117.122 mo
510.33 116.41 li
513.515 115.44 li
509.457 117.122 li
cp
f
510.33 116.41 mo
511.322 115.883 li
513.515 115.44 li
510.33 116.41 li
cp
f
511.322 115.883 mo
512.396 115.555 li
513.515 115.44 li
511.322 115.883 li
cp
f
512.396 115.555 mo
513.515 115.44 li
513.515 115.44 li
512.396 115.555 li
cp
f
513.515 115.44 mo
514.634 115.555 li
515.708 115.883 li
516.701 116.41 li
517.574 117.122 li
518.287 117.994 li
518.814 118.989 li
519.141 120.061 li
519.256 121.182 li
519.141 122.3 li
518.814 123.375 li
518.287 124.367 li
517.574 125.24 li
516.701 125.953 li
515.708 126.48 li
514.634 126.808 li
513.515 126.923 li
512.396 126.808 li
511.322 126.48 li
510.33 125.953 li
509.457 125.24 li
508.744 124.367 li
508.216 123.375 li
507.888 122.3 li
507.773 121.182 li
507.888 120.061 li
508.216 118.989 li
508.744 117.994 li
509.457 117.122 li
510.33 116.41 li
511.322 115.883 li
512.396 115.555 li
513.515 115.44 li
@
536.062 121.824 mo
537.136 122.152 li
534.944 121.709 li
536.062 121.824 li
cp
f
537.136 122.152 mo
538.129 122.679 li
534.944 121.709 li
537.136 122.152 li
cp
f
538.129 122.679 mo
539.001 123.392 li
534.944 121.709 li
538.129 122.679 li
cp
f
539.001 123.392 mo
539.714 124.265 li
534.944 121.709 li
539.001 123.392 li
cp
f
539.714 124.265 mo
540.242 125.257 li
534.944 121.709 li
539.714 124.265 li
cp
f
540.242 125.257 mo
540.57 126.332 li
534.944 121.709 li
540.242 125.257 li
cp
f
540.57 126.332 mo
540.685 127.451 li
534.944 121.709 li
540.57 126.332 li
cp
f
540.685 127.451 mo
540.57 128.571 li
534.944 121.709 li
540.685 127.451 li
cp
f
540.57 128.571 mo
540.242 129.644 li
534.944 121.709 li
540.57 128.571 li
cp
f
540.242 129.644 mo
539.714 130.638 li
534.944 121.709 li
540.242 129.644 li
cp
f
539.714 130.638 mo
539.001 131.511 li
534.944 121.709 li
539.714 130.638 li
cp
f
539.001 131.511 mo
538.129 132.222 li
534.944 121.709 li
539.001 131.511 li
cp
f
538.129 132.222 mo
537.136 132.75 li
534.944 121.709 li
538.129 132.222 li
cp
f
537.136 132.75 mo
536.062 133.077 li
534.944 121.709 li
537.136 132.75 li
cp
f
536.062 133.077 mo
534.944 133.192 li
534.944 121.709 li
536.062 133.077 li
cp
f
534.944 133.192 mo
533.825 133.077 li
534.944 121.709 li
534.944 133.192 li
cp
f
533.825 133.077 mo
532.75 132.75 li
534.944 121.709 li
533.825 133.077 li
cp
f
532.75 132.75 mo
531.757 132.222 li
534.944 121.709 li
532.75 132.75 li
cp
f
531.757 132.222 mo
530.885 131.511 li
534.944 121.709 li
531.757 132.222 li
cp
f
530.885 131.511 mo
530.172 130.638 li
534.944 121.709 li
530.885 131.511 li
cp
f
530.172 130.638 mo
529.645 129.644 li
534.944 121.709 li
530.172 130.638 li
cp
f
529.645 129.644 mo
529.317 128.571 li
534.944 121.709 li
529.645 129.644 li
cp
f
529.317 128.571 mo
529.202 127.451 li
534.944 121.709 li
529.317 128.571 li
cp
f
529.202 127.451 mo
529.317 126.332 li
534.944 121.709 li
529.202 127.451 li
cp
f
529.317 126.332 mo
529.645 125.257 li
534.944 121.709 li
529.317 126.332 li
cp
f
529.645 125.257 mo
530.172 124.265 li
534.944 121.709 li
529.645 125.257 li
cp
f
530.172 124.265 mo
530.885 123.392 li
534.944 121.709 li
530.172 124.265 li
cp
f
530.885 123.392 mo
531.757 122.679 li
534.944 121.709 li
530.885 123.392 li
cp
f
531.757 122.679 mo
532.75 122.152 li
534.944 121.709 li
531.757 122.679 li
cp
f
532.75 122.152 mo
533.825 121.824 li
534.944 121.709 li
532.75 122.152 li
cp
f
533.825 121.824 mo
534.944 121.709 li
534.944 121.709 li
533.825 121.824 li
cp
f
534.944 121.709 mo
536.062 121.824 li
537.136 122.152 li
538.129 122.679 li
539.001 123.392 li
539.714 124.265 li
540.242 125.257 li
540.57 126.332 li
540.685 127.451 li
540.57 128.571 li
540.242 129.644 li
539.714 130.638 li
539.001 131.511 li
538.129 132.222 li
537.136 132.75 li
536.062 133.077 li
534.944 133.192 li
533.825 133.077 li
532.75 132.75 li
531.757 132.222 li
530.885 131.511 li
530.172 130.638 li
529.645 129.644 li
529.317 128.571 li
529.202 127.451 li
529.317 126.332 li
529.645 125.257 li
530.172 124.265 li
530.885 123.392 li
531.757 122.679 li
532.75 122.152 li
533.825 121.824 li
534.944 121.709 li
@
557.491 127.572 mo
558.565 127.898 li
556.372 127.457 li
557.491 127.572 li
cp
f
558.565 127.898 mo
559.558 128.427 li
556.372 127.457 li
558.565 127.898 li
cp
f
559.558 128.427 mo
560.43 129.139 li
556.372 127.457 li
559.558 128.427 li
cp
f
560.43 129.139 mo
561.143 130.011 li
556.372 127.457 li
560.43 129.139 li
cp
f
561.143 130.011 mo
561.67 131.004 li
556.372 127.457 li
561.143 130.011 li
cp
f
561.67 131.004 mo
561.999 132.078 li
556.372 127.457 li
561.67 131.004 li
cp
f
561.999 132.078 mo
562.114 133.199 li
556.372 127.457 li
561.999 132.078 li
cp
f
562.114 133.199 mo
561.999 134.317 li
556.372 127.457 li
562.114 133.199 li
cp
f
561.999 134.317 mo
561.67 135.392 li
556.372 127.457 li
561.999 134.317 li
cp
f
561.67 135.392 mo
561.143 136.384 li
556.372 127.457 li
561.67 135.392 li
cp
f
561.143 136.384 mo
560.43 137.257 li
556.372 127.457 li
561.143 136.384 li
cp
f
560.43 137.257 mo
559.558 137.968 li
556.372 127.457 li
560.43 137.257 li
cp
f
559.558 137.968 mo
558.565 138.498 li
556.372 127.457 li
559.558 137.968 li
cp
f
558.565 138.498 mo
557.491 138.823 li
556.372 127.457 li
558.565 138.498 li
cp
f
557.491 138.823 mo
556.372 138.938 li
556.372 127.457 li
557.491 138.823 li
cp
f
556.372 138.938 mo
555.253 138.823 li
556.372 127.457 li
556.372 138.938 li
cp
f
555.253 138.823 mo
554.179 138.498 li
556.372 127.457 li
555.253 138.823 li
cp
f
554.179 138.498 mo
553.186 137.968 li
556.372 127.457 li
554.179 138.498 li
cp
f
553.186 137.968 mo
552.314 137.257 li
556.372 127.457 li
553.186 137.968 li
cp
f
552.314 137.257 mo
551.601 136.384 li
556.372 127.457 li
552.314 137.257 li
cp
f
551.601 136.384 mo
551.073 135.392 li
556.372 127.457 li
551.601 136.384 li
cp
f
551.073 135.392 mo
550.746 134.317 li
556.372 127.457 li
551.073 135.392 li
cp
f
550.746 134.317 mo
550.63 133.199 li
556.372 127.457 li
550.746 134.317 li
cp
f
550.63 133.199 mo
550.746 132.078 li
556.372 127.457 li
550.63 133.199 li
cp
f
550.746 132.078 mo
551.073 131.004 li
556.372 127.457 li
550.746 132.078 li
cp
f
551.073 131.004 mo
551.601 130.011 li
556.372 127.457 li
551.073 131.004 li
cp
f
551.601 130.011 mo
552.314 129.139 li
556.372 127.457 li
551.601 130.011 li
cp
f
552.314 129.139 mo
553.186 128.427 li
556.372 127.457 li
552.314 129.139 li
cp
f
553.186 128.427 mo
554.179 127.898 li
556.372 127.457 li
553.186 128.427 li
cp
f
554.179 127.898 mo
555.253 127.572 li
556.372 127.457 li
554.179 127.898 li
cp
f
555.253 127.572 mo
556.372 127.457 li
556.372 127.457 li
555.253 127.572 li
cp
f
556.372 127.457 mo
557.491 127.572 li
558.565 127.898 li
559.558 128.427 li
560.43 129.139 li
561.143 130.011 li
561.67 131.004 li
561.999 132.078 li
562.114 133.199 li
561.999 134.317 li
561.67 135.392 li
561.143 136.384 li
560.43 137.257 li
559.558 137.968 li
558.565 138.498 li
557.491 138.823 li
556.372 138.938 li
555.253 138.823 li
554.179 138.498 li
553.186 137.968 li
552.314 137.257 li
551.601 136.384 li
551.073 135.392 li
550.746 134.317 li
550.63 133.199 li
550.746 132.078 li
551.073 131.004 li
551.601 130.011 li
552.314 129.139 li
553.186 128.427 li
554.179 127.898 li
555.253 127.572 li
556.372 127.457 li
@
578.919 132.785 mo
579.994 133.112 li
577.8 132.669 li
578.919 132.785 li
cp
f
579.994 133.112 mo
580.986 133.64 li
577.8 132.669 li
579.994 133.112 li
cp
f
580.986 133.64 mo
581.859 134.353 li
577.8 132.669 li
580.986 133.64 li
cp
f
581.859 134.353 mo
582.572 135.224 li
577.8 132.669 li
581.859 134.353 li
cp
f
582.572 135.224 mo
583.099 136.218 li
577.8 132.669 li
582.572 135.224 li
cp
f
583.099 136.218 mo
583.427 137.291 li
577.8 132.669 li
583.099 136.218 li
cp
f
583.427 137.291 mo
583.542 138.411 li
577.8 132.669 li
583.427 137.291 li
cp
f
583.542 138.411 mo
583.427 139.53 li
577.8 132.669 li
583.542 138.411 li
cp
f
583.427 139.53 mo
583.099 140.604 li
577.8 132.669 li
583.427 139.53 li
cp
f
583.099 140.604 mo
582.572 141.597 li
577.8 132.669 li
583.099 140.604 li
cp
f
582.572 141.597 mo
581.859 142.469 li
577.8 132.669 li
582.572 141.597 li
cp
f
581.859 142.469 mo
580.986 143.182 li
577.8 132.669 li
581.859 142.469 li
cp
f
580.986 143.182 mo
579.994 143.71 li
577.8 132.669 li
580.986 143.182 li
cp
f
579.994 143.71 mo
578.919 144.038 li
577.8 132.669 li
579.994 143.71 li
cp
f
578.919 144.038 mo
577.8 144.153 li
577.8 132.669 li
578.919 144.038 li
cp
f
577.8 144.153 mo
576.681 144.038 li
577.8 132.669 li
577.8 144.153 li
cp
f
576.681 144.038 mo
575.608 143.71 li
577.8 132.669 li
576.681 144.038 li
cp
f
575.608 143.71 mo
574.615 143.182 li
577.8 132.669 li
575.608 143.71 li
cp
f
574.615 143.182 mo
573.742 142.469 li
577.8 132.669 li
574.615 143.182 li
cp
f
573.742 142.469 mo
573.029 141.597 li
577.8 132.669 li
573.742 142.469 li
cp
f
573.029 141.597 mo
572.501 140.604 li
577.8 132.669 li
573.029 141.597 li
cp
f
572.501 140.604 mo
572.174 139.53 li
577.8 132.669 li
572.501 140.604 li
cp
f
572.174 139.53 mo
572.059 138.411 li
577.8 132.669 li
572.174 139.53 li
cp
f
572.059 138.411 mo
572.174 137.291 li
577.8 132.669 li
572.059 138.411 li
cp
f
572.174 137.291 mo
572.501 136.218 li
577.8 132.669 li
572.174 137.291 li
cp
f
572.501 136.218 mo
573.029 135.224 li
577.8 132.669 li
572.501 136.218 li
cp
f
573.029 135.224 mo
573.742 134.353 li
577.8 132.669 li
573.029 135.224 li
cp
f
573.742 134.353 mo
574.615 133.64 li
577.8 132.669 li
573.742 134.353 li
cp
f
574.615 133.64 mo
575.608 133.112 li
577.8 132.669 li
574.615 133.64 li
cp
f
575.608 133.112 mo
576.681 132.785 li
577.8 132.669 li
575.608 133.112 li
cp
f
576.681 132.785 mo
577.8 132.669 li
577.8 132.669 li
576.681 132.785 li
cp
f
577.8 132.669 mo
578.919 132.785 li
579.994 133.112 li
580.986 133.64 li
581.859 134.353 li
582.572 135.224 li
583.099 136.218 li
583.427 137.291 li
583.542 138.411 li
583.427 139.53 li
583.099 140.604 li
582.572 141.597 li
581.859 142.469 li
580.986 143.182 li
579.994 143.71 li
578.919 144.038 li
577.8 144.153 li
576.681 144.038 li
575.608 143.71 li
574.615 143.182 li
573.742 142.469 li
573.029 141.597 li
572.501 140.604 li
572.174 139.53 li
572.059 138.411 li
572.174 137.291 li
572.501 136.218 li
573.029 135.224 li
573.742 134.353 li
574.615 133.64 li
575.608 133.112 li
576.681 132.785 li
577.8 132.669 li
@
600.348 137.476 mo
601.422 137.802 li
599.229 137.361 li
600.348 137.476 li
cp
f
601.422 137.802 mo
602.417 138.331 li
599.229 137.361 li
601.422 137.802 li
cp
f
602.417 138.331 mo
603.288 139.042 li
599.229 137.361 li
602.417 138.331 li
cp
f
603.288 139.042 mo
604 139.915 li
599.229 137.361 li
603.288 139.042 li
cp
f
604 139.915 mo
604.528 140.909 li
599.229 137.361 li
604 139.915 li
cp
f
604.528 140.909 mo
604.856 141.982 li
599.229 137.361 li
604.528 140.909 li
cp
f
604.856 141.982 mo
604.97 143.103 li
599.229 137.361 li
604.856 141.982 li
cp
f
604.97 143.103 mo
604.856 144.221 li
599.229 137.361 li
604.97 143.103 li
cp
f
604.856 144.221 mo
604.528 145.295 li
599.229 137.361 li
604.856 144.221 li
cp
f
604.528 145.295 mo
604 146.288 li
599.229 137.361 li
604.528 145.295 li
cp
f
604 146.288 mo
603.288 147.161 li
599.229 137.361 li
604 146.288 li
cp
f
603.288 147.161 mo
602.417 147.872 li
599.229 137.361 li
603.288 147.161 li
cp
f
602.417 147.872 mo
601.422 148.401 li
599.229 137.361 li
602.417 147.872 li
cp
f
601.422 148.401 mo
600.348 148.729 li
599.229 137.361 li
601.422 148.401 li
cp
f
600.348 148.729 mo
599.229 148.842 li
599.229 137.361 li
600.348 148.729 li
cp
f
599.229 148.842 mo
598.11 148.729 li
599.229 137.361 li
599.229 148.842 li
cp
f
598.11 148.729 mo
597.036 148.401 li
599.229 137.361 li
598.11 148.729 li
cp
f
597.036 148.401 mo
596.043 147.872 li
599.229 137.361 li
597.036 148.401 li
cp
f
596.043 147.872 mo
595.17 147.161 li
599.229 137.361 li
596.043 147.872 li
cp
f
595.17 147.161 mo
594.458 146.288 li
599.229 137.361 li
595.17 147.161 li
cp
f
594.458 146.288 mo
593.93 145.295 li
599.229 137.361 li
594.458 146.288 li
cp
f
593.93 145.295 mo
593.603 144.221 li
599.229 137.361 li
593.93 145.295 li
cp
f
593.603 144.221 mo
593.488 143.103 li
599.229 137.361 li
593.603 144.221 li
cp
f
593.488 143.103 mo
593.603 141.982 li
599.229 137.361 li
593.488 143.103 li
cp
f
593.603 141.982 mo
593.93 140.909 li
599.229 137.361 li
593.603 141.982 li
cp
f
593.93 140.909 mo
594.458 139.915 li
599.229 137.361 li
593.93 140.909 li
cp
f
594.458 139.915 mo
595.17 139.042 li
599.229 137.361 li
594.458 139.915 li
cp
f
595.17 139.042 mo
596.043 138.331 li
599.229 137.361 li
595.17 139.042 li
cp
f
596.043 138.331 mo
597.036 137.802 li
599.229 137.361 li
596.043 138.331 li
cp
f
597.036 137.802 mo
598.11 137.476 li
599.229 137.361 li
597.036 137.802 li
cp
f
598.11 137.476 mo
599.229 137.361 li
599.229 137.361 li
598.11 137.476 li
cp
f
599.229 137.361 mo
600.348 137.476 li
601.422 137.802 li
602.417 138.331 li
603.288 139.042 li
604 139.915 li
604.528 140.909 li
604.856 141.982 li
604.97 143.103 li
604.856 144.221 li
604.528 145.295 li
604 146.288 li
603.288 147.161 li
602.417 147.872 li
601.422 148.401 li
600.348 148.729 li
599.229 148.842 li
598.11 148.729 li
597.036 148.401 li
596.043 147.872 li
595.17 147.161 li
594.458 146.288 li
593.93 145.295 li
593.603 144.221 li
593.488 143.103 li
593.603 141.982 li
593.93 140.909 li
594.458 139.915 li
595.17 139.042 li
596.043 138.331 li
597.036 137.802 li
598.11 137.476 li
599.229 137.361 li
@
621.778 141.677 mo
622.851 142.003 li
620.658 141.562 li
621.778 141.677 li
cp
f
622.851 142.003 mo
623.845 142.532 li
620.658 141.562 li
622.851 142.003 li
cp
f
623.845 142.532 mo
624.717 143.243 li
620.658 141.562 li
623.845 142.532 li
cp
f
624.717 143.243 mo
625.429 144.116 li
620.658 141.562 li
624.717 143.243 li
cp
f
625.429 144.116 mo
625.957 145.11 li
620.658 141.562 li
625.429 144.116 li
cp
f
625.957 145.11 mo
626.284 146.183 li
620.658 141.562 li
625.957 145.11 li
cp
f
626.284 146.183 mo
626.399 147.303 li
620.658 141.562 li
626.284 146.183 li
cp
f
626.399 147.303 mo
626.284 148.422 li
620.658 141.562 li
626.399 147.303 li
cp
f
626.284 148.422 mo
625.957 149.496 li
620.658 141.562 li
626.284 148.422 li
cp
f
625.957 149.496 mo
625.429 150.489 li
620.658 141.562 li
625.957 149.496 li
cp
f
625.429 150.489 mo
624.717 151.361 li
620.658 141.562 li
625.429 150.489 li
cp
f
624.717 151.361 mo
623.845 152.073 li
620.658 141.562 li
624.717 151.361 li
cp
f
623.845 152.073 mo
622.851 152.602 li
620.658 141.562 li
623.845 152.073 li
cp
f
622.851 152.602 mo
621.778 152.93 li
620.658 141.562 li
622.851 152.602 li
cp
f
621.778 152.93 mo
620.658 153.043 li
620.658 141.562 li
621.778 152.93 li
cp
f
620.658 153.043 mo
619.539 152.93 li
620.658 141.562 li
620.658 153.043 li
cp
f
619.539 152.93 mo
618.464 152.602 li
620.658 141.562 li
619.539 152.93 li
cp
f
618.464 152.602 mo
617.472 152.073 li
620.658 141.562 li
618.464 152.602 li
cp
f
617.472 152.073 mo
616.599 151.361 li
620.658 141.562 li
617.472 152.073 li
cp
f
616.599 151.361 mo
615.886 150.489 li
620.658 141.562 li
616.599 151.361 li
cp
f
615.886 150.489 mo
615.359 149.496 li
620.658 141.562 li
615.886 150.489 li
cp
f
615.359 149.496 mo
615.031 148.422 li
620.658 141.562 li
615.359 149.496 li
cp
f
615.031 148.422 mo
614.917 147.303 li
620.658 141.562 li
615.031 148.422 li
cp
f
614.917 147.303 mo
615.031 146.183 li
620.658 141.562 li
614.917 147.303 li
cp
f
615.031 146.183 mo
615.359 145.11 li
620.658 141.562 li
615.031 146.183 li
cp
f
615.359 145.11 mo
615.886 144.116 li
620.658 141.562 li
615.359 145.11 li
cp
f
615.886 144.116 mo
616.599 143.243 li
620.658 141.562 li
615.886 144.116 li
cp
f
616.599 143.243 mo
617.472 142.532 li
620.658 141.562 li
616.599 143.243 li
cp
f
617.472 142.532 mo
618.464 142.003 li
620.658 141.562 li
617.472 142.532 li
cp
f
618.464 142.003 mo
619.539 141.677 li
620.658 141.562 li
618.464 142.003 li
cp
f
619.539 141.677 mo
620.658 141.562 li
620.658 141.562 li
619.539 141.677 li
cp
f
620.658 141.562 mo
621.778 141.677 li
622.851 142.003 li
623.845 142.532 li
624.717 143.243 li
625.429 144.116 li
625.957 145.11 li
626.284 146.183 li
626.399 147.303 li
626.284 148.422 li
625.957 149.496 li
625.429 150.489 li
624.717 151.361 li
623.845 152.073 li
622.851 152.602 li
621.778 152.93 li
620.658 153.043 li
619.539 152.93 li
618.464 152.602 li
617.472 152.073 li
616.599 151.361 li
615.886 150.489 li
615.359 149.496 li
615.031 148.422 li
614.917 147.303 li
615.031 146.183 li
615.359 145.11 li
615.886 144.116 li
616.599 143.243 li
617.472 142.532 li
618.464 142.003 li
619.539 141.677 li
620.658 141.562 li
@
643.207 145.436 mo
644.279 145.762 li
642.086 145.321 li
643.207 145.436 li
cp
f
644.279 145.762 mo
645.274 146.292 li
642.086 145.321 li
644.279 145.762 li
cp
f
645.274 146.292 mo
646.146 147.002 li
642.086 145.321 li
645.274 146.292 li
cp
f
646.146 147.002 mo
646.858 147.875 li
642.086 145.321 li
646.146 147.002 li
cp
f
646.858 147.875 mo
647.385 148.868 li
642.086 145.321 li
646.858 147.875 li
cp
f
647.385 148.868 mo
647.712 149.942 li
642.086 145.321 li
647.385 148.868 li
cp
f
647.712 149.942 mo
647.828 151.063 li
642.086 145.321 li
647.712 149.942 li
cp
f
647.828 151.063 mo
647.712 152.182 li
642.086 145.321 li
647.828 151.063 li
cp
f
647.712 152.182 mo
647.385 153.256 li
642.086 145.321 li
647.712 152.182 li
cp
f
647.385 153.256 mo
646.858 154.248 li
642.086 145.321 li
647.385 153.256 li
cp
f
646.858 154.248 mo
646.146 155.121 li
642.086 145.321 li
646.858 154.248 li
cp
f
646.146 155.121 mo
645.274 155.833 li
642.086 145.321 li
646.146 155.121 li
cp
f
645.274 155.833 mo
644.279 156.361 li
642.086 145.321 li
645.274 155.833 li
cp
f
644.279 156.361 mo
643.207 156.689 li
642.086 145.321 li
644.279 156.361 li
cp
f
643.207 156.689 mo
642.086 156.803 li
642.086 145.321 li
643.207 156.689 li
cp
f
642.086 156.803 mo
640.967 156.689 li
642.086 145.321 li
642.086 156.803 li
cp
f
640.967 156.689 mo
639.893 156.361 li
642.086 145.321 li
640.967 156.689 li
cp
f
639.893 156.361 mo
638.901 155.833 li
642.086 145.321 li
639.893 156.361 li
cp
f
638.901 155.833 mo
638.028 155.121 li
642.086 145.321 li
638.901 155.833 li
cp
f
638.028 155.121 mo
637.315 154.248 li
642.086 145.321 li
638.028 155.121 li
cp
f
637.315 154.248 mo
636.788 153.256 li
642.086 145.321 li
637.315 154.248 li
cp
f
636.788 153.256 mo
636.459 152.182 li
642.086 145.321 li
636.788 153.256 li
cp
f
636.459 152.182 mo
636.344 151.063 li
642.086 145.321 li
636.459 152.182 li
cp
f
636.344 151.063 mo
636.459 149.942 li
642.086 145.321 li
636.344 151.063 li
cp
f
636.459 149.942 mo
636.788 148.868 li
642.086 145.321 li
636.459 149.942 li
cp
f
636.788 148.868 mo
637.315 147.875 li
642.086 145.321 li
636.788 148.868 li
cp
f
637.315 147.875 mo
638.028 147.002 li
642.086 145.321 li
637.315 147.875 li
cp
f
638.028 147.002 mo
638.901 146.292 li
642.086 145.321 li
638.028 147.002 li
cp
f
638.901 146.292 mo
639.893 145.762 li
642.086 145.321 li
638.901 146.292 li
cp
f
639.893 145.762 mo
640.967 145.436 li
642.086 145.321 li
639.893 145.762 li
cp
f
640.967 145.436 mo
642.086 145.321 li
642.086 145.321 li
640.967 145.436 li
cp
f
642.086 145.321 mo
643.207 145.436 li
644.279 145.762 li
645.274 146.292 li
646.146 147.002 li
646.858 147.875 li
647.385 148.868 li
647.712 149.942 li
647.828 151.063 li
647.712 152.182 li
647.385 153.256 li
646.858 154.248 li
646.146 155.121 li
645.274 155.833 li
644.279 156.361 li
643.207 156.689 li
642.086 156.803 li
640.967 156.689 li
639.893 156.361 li
638.901 155.833 li
638.028 155.121 li
637.315 154.248 li
636.788 153.256 li
636.459 152.182 li
636.344 151.063 li
636.459 149.942 li
636.788 148.868 li
637.315 147.875 li
638.028 147.002 li
638.901 146.292 li
639.893 145.762 li
640.967 145.436 li
642.086 145.321 li
@
664.635 148.818 mo
665.708 149.145 li
663.515 148.703 li
664.635 148.818 li
cp
f
665.708 149.145 mo
666.702 149.673 li
663.515 148.703 li
665.708 149.145 li
cp
f
666.702 149.673 mo
667.575 150.385 li
663.515 148.703 li
666.702 149.673 li
cp
f
667.575 150.385 mo
668.287 151.258 li
663.515 148.703 li
667.575 150.385 li
cp
f
668.287 151.258 mo
668.814 152.252 li
663.515 148.703 li
668.287 151.258 li
cp
f
668.814 152.252 mo
669.141 153.324 li
663.515 148.703 li
668.814 152.252 li
cp
f
669.141 153.324 mo
669.256 154.445 li
663.515 148.703 li
669.141 153.324 li
cp
f
669.256 154.445 mo
669.141 155.564 li
663.515 148.703 li
669.256 154.445 li
cp
f
669.141 155.564 mo
668.814 156.638 li
663.515 148.703 li
669.141 155.564 li
cp
f
668.814 156.638 mo
668.287 157.63 li
663.515 148.703 li
668.814 156.638 li
cp
f
668.287 157.63 mo
667.575 158.503 li
663.515 148.703 li
668.287 157.63 li
cp
f
667.575 158.503 mo
666.702 159.214 li
663.515 148.703 li
667.575 158.503 li
cp
f
666.702 159.214 mo
665.708 159.744 li
663.515 148.703 li
666.702 159.214 li
cp
f
665.708 159.744 mo
664.635 160.071 li
663.515 148.703 li
665.708 159.744 li
cp
f
664.635 160.071 mo
663.515 160.185 li
663.515 148.703 li
664.635 160.071 li
cp
f
663.515 160.185 mo
662.396 160.071 li
663.515 148.703 li
663.515 160.185 li
cp
f
662.396 160.071 mo
661.322 159.744 li
663.515 148.703 li
662.396 160.071 li
cp
f
661.322 159.744 mo
660.33 159.214 li
663.515 148.703 li
661.322 159.744 li
cp
f
660.33 159.214 mo
659.457 158.503 li
663.515 148.703 li
660.33 159.214 li
cp
f
659.457 158.503 mo
658.744 157.63 li
663.515 148.703 li
659.457 158.503 li
cp
f
658.744 157.63 mo
658.216 156.638 li
663.515 148.703 li
658.744 157.63 li
cp
f
658.216 156.638 mo
657.888 155.564 li
663.515 148.703 li
658.216 156.638 li
cp
f
657.888 155.564 mo
657.773 154.445 li
663.515 148.703 li
657.888 155.564 li
cp
f
657.773 154.445 mo
657.888 153.324 li
663.515 148.703 li
657.773 154.445 li
cp
f
657.888 153.324 mo
658.216 152.252 li
663.515 148.703 li
657.888 153.324 li
cp
f
658.216 152.252 mo
658.744 151.258 li
663.515 148.703 li
658.216 152.252 li
cp
f
658.744 151.258 mo
659.457 150.385 li
663.515 148.703 li
658.744 151.258 li
cp
f
659.457 150.385 mo
660.33 149.673 li
663.515 148.703 li
659.457 150.385 li
cp
f
660.33 149.673 mo
661.322 149.145 li
663.515 148.703 li
660.33 149.673 li
cp
f
661.322 149.145 mo
662.396 148.818 li
663.515 148.703 li
661.322 149.145 li
cp
f
662.396 148.818 mo
663.515 148.703 li
663.515 148.703 li
662.396 148.818 li
cp
f
663.515 148.703 mo
664.635 148.818 li
665.708 149.145 li
666.702 149.673 li
667.575 150.385 li
668.287 151.258 li
668.814 152.252 li
669.141 153.324 li
669.256 154.445 li
669.141 155.564 li
668.814 156.638 li
668.287 157.63 li
667.575 158.503 li
666.702 159.214 li
665.708 159.744 li
664.635 160.071 li
663.515 160.185 li
662.396 160.071 li
661.322 159.744 li
660.33 159.214 li
659.457 158.503 li
658.744 157.63 li
658.216 156.638 li
657.888 155.564 li
657.773 154.445 li
657.888 153.324 li
658.216 152.252 li
658.744 151.258 li
659.457 150.385 li
660.33 149.673 li
661.322 149.145 li
662.396 148.818 li
663.515 148.703 li
@
686.064 151.902 mo
687.136 152.228 li
684.943 151.787 li
686.064 151.902 li
cp
f
687.136 152.228 mo
688.13 152.757 li
684.943 151.787 li
687.136 152.228 li
cp
f
688.13 152.757 mo
689.003 153.468 li
684.943 151.787 li
688.13 152.757 li
cp
f
689.003 153.468 mo
689.714 154.341 li
684.943 151.787 li
689.003 153.468 li
cp
f
689.714 154.341 mo
690.242 155.333 li
684.943 151.787 li
689.714 154.341 li
cp
f
690.242 155.333 mo
690.57 156.408 li
684.943 151.787 li
690.242 155.333 li
cp
f
690.57 156.408 mo
690.685 157.527 li
684.943 151.787 li
690.57 156.408 li
cp
f
690.685 157.527 mo
690.57 158.647 li
684.943 151.787 li
690.685 157.527 li
cp
f
690.57 158.647 mo
690.242 159.721 li
684.943 151.787 li
690.57 158.647 li
cp
f
690.242 159.721 mo
689.714 160.714 li
684.943 151.787 li
690.242 159.721 li
cp
f
689.714 160.714 mo
689.003 161.586 li
684.943 151.787 li
689.714 160.714 li
cp
f
689.003 161.586 mo
688.13 162.298 li
684.943 151.787 li
689.003 161.586 li
cp
f
688.13 162.298 mo
687.136 162.827 li
684.943 151.787 li
688.13 162.298 li
cp
f
687.136 162.827 mo
686.064 163.153 li
684.943 151.787 li
687.136 162.827 li
cp
f
686.064 163.153 mo
684.943 163.268 li
684.943 151.787 li
686.064 163.153 li
cp
f
684.943 163.268 mo
683.825 163.153 li
684.943 151.787 li
684.943 163.268 li
cp
f
683.825 163.153 mo
682.75 162.827 li
684.943 151.787 li
683.825 163.153 li
cp
f
682.75 162.827 mo
681.757 162.298 li
684.943 151.787 li
682.75 162.827 li
cp
f
681.757 162.298 mo
680.885 161.586 li
684.943 151.787 li
681.757 162.298 li
cp
f
680.885 161.586 mo
680.172 160.714 li
684.943 151.787 li
680.885 161.586 li
cp
f
680.172 160.714 mo
679.644 159.721 li
684.943 151.787 li
680.172 160.714 li
cp
f
679.644 159.721 mo
679.317 158.647 li
684.943 151.787 li
679.644 159.721 li
cp
f
679.317 158.647 mo
679.202 157.527 li
684.943 151.787 li
679.317 158.647 li
cp
f
679.202 157.527 mo
679.317 156.408 li
684.943 151.787 li
679.202 157.527 li
cp
f
679.317 156.408 mo
679.644 155.333 li
684.943 151.787 li
679.317 156.408 li
cp
f
679.644 155.333 mo
680.172 154.341 li
684.943 151.787 li
679.644 155.333 li
cp
f
680.172 154.341 mo
680.885 153.468 li
684.943 151.787 li
680.172 154.341 li
cp
f
680.885 153.468 mo
681.757 152.757 li
684.943 151.787 li
680.885 153.468 li
cp
f
681.757 152.757 mo
682.75 152.228 li
684.943 151.787 li
681.757 152.757 li
cp
f
682.75 152.228 mo
683.825 151.902 li
684.943 151.787 li
682.75 152.228 li
cp
f
683.825 151.902 mo
684.943 151.787 li
684.943 151.787 li
683.825 151.902 li
cp
f
684.943 151.787 mo
686.064 151.902 li
687.136 152.228 li
688.13 152.757 li
689.003 153.468 li
689.714 154.341 li
690.242 155.333 li
690.57 156.408 li
690.685 157.527 li
690.57 158.647 li
690.242 159.721 li
689.714 160.714 li
689.003 161.586 li
688.13 162.298 li
687.136 162.827 li
686.064 163.153 li
684.943 163.268 li
683.825 163.153 li
682.75 162.827 li
681.757 162.298 li
680.885 161.586 li
680.172 160.714 li
679.644 159.721 li
679.317 158.647 li
679.202 157.527 li
679.317 156.408 li
679.644 155.333 li
680.172 154.341 li
680.885 153.468 li
681.757 152.757 li
682.75 152.228 li
683.825 151.902 li
684.943 151.787 li
@
707.493 154.774 mo
708.565 155.102 li
706.372 154.659 li
707.493 154.774 li
cp
f
708.565 155.102 mo
709.559 155.629 li
706.372 154.659 li
708.565 155.102 li
cp
f
709.559 155.629 mo
710.432 156.342 li
706.372 154.659 li
709.559 155.629 li
cp
f
710.432 156.342 mo
711.143 157.215 li
706.372 154.659 li
710.432 156.342 li
cp
f
711.143 157.215 mo
711.672 158.208 li
706.372 154.659 li
711.143 157.215 li
cp
f
711.672 158.208 mo
711.999 159.282 li
706.372 154.659 li
711.672 158.208 li
cp
f
711.999 159.282 mo
712.114 160.4 li
706.372 154.659 li
711.999 159.282 li
cp
f
712.114 160.4 mo
711.999 161.52 li
706.372 154.659 li
712.114 160.4 li
cp
f
711.999 161.52 mo
711.672 162.594 li
706.372 154.659 li
711.999 161.52 li
cp
f
711.672 162.594 mo
711.143 163.586 li
706.372 154.659 li
711.672 162.594 li
cp
f
711.143 163.586 mo
710.432 164.459 li
706.372 154.659 li
711.143 163.586 li
cp
f
710.432 164.459 mo
709.559 165.172 li
706.372 154.659 li
710.432 164.459 li
cp
f
709.559 165.172 mo
708.565 165.699 li
706.372 154.659 li
709.559 165.172 li
cp
f
708.565 165.699 mo
707.493 166.027 li
706.372 154.659 li
708.565 165.699 li
cp
f
707.493 166.027 mo
706.372 166.142 li
706.372 154.659 li
707.493 166.027 li
cp
f
706.372 166.142 mo
705.253 166.027 li
706.372 154.659 li
706.372 166.142 li
cp
f
705.253 166.027 mo
704.179 165.699 li
706.372 154.659 li
705.253 166.027 li
cp
f
704.179 165.699 mo
703.186 165.172 li
706.372 154.659 li
704.179 165.699 li
cp
f
703.186 165.172 mo
702.314 164.459 li
706.372 154.659 li
703.186 165.172 li
cp
f
702.314 164.459 mo
701.602 163.586 li
706.372 154.659 li
702.314 164.459 li
cp
f
701.602 163.586 mo
701.073 162.594 li
706.372 154.659 li
701.602 163.586 li
cp
f
701.073 162.594 mo
700.746 161.52 li
706.372 154.659 li
701.073 162.594 li
cp
f
700.746 161.52 mo
700.632 160.4 li
706.372 154.659 li
700.746 161.52 li
cp
f
700.632 160.4 mo
700.746 159.282 li
706.372 154.659 li
700.632 160.4 li
cp
f
700.746 159.282 mo
701.073 158.208 li
706.372 154.659 li
700.746 159.282 li
cp
f
701.073 158.208 mo
701.602 157.215 li
706.372 154.659 li
701.073 158.208 li
cp
f
701.602 157.215 mo
702.314 156.342 li
706.372 154.659 li
701.602 157.215 li
cp
f
702.314 156.342 mo
703.186 155.629 li
706.372 154.659 li
702.314 156.342 li
cp
f
703.186 155.629 mo
704.179 155.102 li
706.372 154.659 li
703.186 155.629 li
cp
f
704.179 155.102 mo
705.253 154.774 li
706.372 154.659 li
704.179 155.102 li
cp
f
705.253 154.774 mo
706.372 154.659 li
706.372 154.659 li
705.253 154.774 li
cp
f
706.372 154.659 mo
707.493 154.774 li
708.565 155.102 li
709.559 155.629 li
710.432 156.342 li
711.143 157.215 li
711.672 158.208 li
711.999 159.282 li
712.114 160.4 li
711.999 161.52 li
711.672 162.594 li
711.143 163.586 li
710.432 164.459 li
709.559 165.172 li
708.565 165.699 li
707.493 166.027 li
706.372 166.142 li
705.253 166.027 li
704.179 165.699 li
703.186 165.172 li
702.314 164.459 li
701.602 163.586 li
701.073 162.594 li
700.746 161.52 li
700.632 160.4 li
700.746 159.282 li
701.073 158.208 li
701.602 157.215 li
702.314 156.342 li
703.186 155.629 li
704.179 155.102 li
705.253 154.774 li
706.372 154.659 li
@
728.921 157.535 mo
729.994 157.861 li
727.8 157.419 li
728.921 157.535 li
cp
f
729.994 157.861 mo
730.988 158.39 li
727.8 157.419 li
729.994 157.861 li
cp
f
730.988 158.39 mo
731.861 159.101 li
727.8 157.419 li
730.988 158.39 li
cp
f
731.861 159.101 mo
732.572 159.974 li
727.8 157.419 li
731.861 159.101 li
cp
f
732.572 159.974 mo
733.101 160.966 li
727.8 157.419 li
732.572 159.974 li
cp
f
733.101 160.966 mo
733.427 162.041 li
727.8 157.419 li
733.101 160.966 li
cp
f
733.427 162.041 mo
733.542 163.161 li
727.8 157.419 li
733.427 162.041 li
cp
f
733.542 163.161 mo
733.427 164.28 li
727.8 157.419 li
733.542 163.161 li
cp
f
733.427 164.28 mo
733.101 165.354 li
727.8 157.419 li
733.427 164.28 li
cp
f
733.101 165.354 mo
732.572 166.347 li
727.8 157.419 li
733.101 165.354 li
cp
f
732.572 166.347 mo
731.861 167.22 li
727.8 157.419 li
732.572 166.347 li
cp
f
731.861 167.22 mo
730.988 167.931 li
727.8 157.419 li
731.861 167.22 li
cp
f
730.988 167.931 mo
729.994 168.46 li
727.8 157.419 li
730.988 167.931 li
cp
f
729.994 168.46 mo
728.921 168.786 li
727.8 157.419 li
729.994 168.46 li
cp
f
728.921 168.786 mo
727.8 168.901 li
727.8 157.419 li
728.921 168.786 li
cp
f
727.8 168.901 mo
726.681 168.786 li
727.8 157.419 li
727.8 168.901 li
cp
f
726.681 168.786 mo
725.607 168.46 li
727.8 157.419 li
726.681 168.786 li
cp
f
725.607 168.46 mo
724.615 167.931 li
727.8 157.419 li
725.607 168.46 li
cp
f
724.615 167.931 mo
723.742 167.22 li
727.8 157.419 li
724.615 167.931 li
cp
f
723.742 167.22 mo
723.031 166.347 li
727.8 157.419 li
723.742 167.22 li
cp
f
723.031 166.347 mo
722.501 165.354 li
727.8 157.419 li
723.031 166.347 li
cp
f
722.501 165.354 mo
722.174 164.28 li
727.8 157.419 li
722.501 165.354 li
cp
f
722.174 164.28 mo
722.06 163.161 li
727.8 157.419 li
722.174 164.28 li
cp
f
722.06 163.161 mo
722.174 162.041 li
727.8 157.419 li
722.06 163.161 li
cp
f
722.174 162.041 mo
722.501 160.966 li
727.8 157.419 li
722.174 162.041 li
cp
f
722.501 160.966 mo
723.031 159.974 li
727.8 157.419 li
722.501 160.966 li
cp
f
723.031 159.974 mo
723.742 159.101 li
727.8 157.419 li
723.031 159.974 li
cp
f
723.742 159.101 mo
724.615 158.39 li
727.8 157.419 li
723.742 159.101 li
cp
f
724.615 158.39 mo
725.607 157.861 li
727.8 157.419 li
724.615 158.39 li
cp
f
725.607 157.861 mo
726.681 157.535 li
727.8 157.419 li
725.607 157.861 li
cp
f
726.681 157.535 mo
727.8 157.419 li
727.8 157.419 li
726.681 157.535 li
cp
f
727.8 157.419 mo
728.921 157.535 li
729.994 157.861 li
730.988 158.39 li
731.861 159.101 li
732.572 159.974 li
733.101 160.966 li
733.427 162.041 li
733.542 163.161 li
733.427 164.28 li
733.101 165.354 li
732.572 166.347 li
731.861 167.22 li
730.988 167.931 li
729.994 168.46 li
728.921 168.786 li
727.8 168.901 li
726.681 168.786 li
725.607 168.46 li
724.615 167.931 li
723.742 167.22 li
723.031 166.347 li
722.501 165.354 li
722.174 164.28 li
722.06 163.161 li
722.174 162.041 li
722.501 160.966 li
723.031 159.974 li
723.742 159.101 li
724.615 158.39 li
725.607 157.861 li
726.681 157.535 li
727.8 157.419 li
@
750.349 160.279 mo
751.422 160.607 li
749.229 160.164 li
750.349 160.279 li
cp
f
751.422 160.607 mo
752.417 161.134 li
749.229 160.164 li
751.422 160.607 li
cp
f
752.417 161.134 mo
753.289 161.846 li
749.229 160.164 li
752.417 161.134 li
cp
f
753.289 161.846 mo
754 162.718 li
749.229 160.164 li
753.289 161.846 li
cp
f
754 162.718 mo
754.529 163.712 li
749.229 160.164 li
754 162.718 li
cp
f
754.529 163.712 mo
754.855 164.785 li
749.229 160.164 li
754.529 163.712 li
cp
f
754.855 164.785 mo
754.97 165.906 li
749.229 160.164 li
754.855 164.785 li
cp
f
754.97 165.906 mo
754.855 167.024 li
749.229 160.164 li
754.97 165.906 li
cp
f
754.855 167.024 mo
754.529 168.099 li
749.229 160.164 li
754.855 167.024 li
cp
f
754.529 168.099 mo
754 169.091 li
749.229 160.164 li
754.529 168.099 li
cp
f
754 169.091 mo
753.289 169.964 li
749.229 160.164 li
754 169.091 li
cp
f
753.289 169.964 mo
752.417 170.677 li
749.229 160.164 li
753.289 169.964 li
cp
f
752.417 170.677 mo
751.422 171.205 li
749.229 160.164 li
752.417 170.677 li
cp
f
751.422 171.205 mo
750.349 171.532 li
749.229 160.164 li
751.422 171.205 li
cp
f
750.349 171.532 mo
749.229 171.647 li
749.229 160.164 li
750.349 171.532 li
cp
f
749.229 171.647 mo
748.11 171.532 li
749.229 160.164 li
749.229 171.647 li
cp
f
748.11 171.532 mo
747.036 171.205 li
749.229 160.164 li
748.11 171.532 li
cp
f
747.036 171.205 mo
746.043 170.677 li
749.229 160.164 li
747.036 171.205 li
cp
f
746.043 170.677 mo
745.17 169.964 li
749.229 160.164 li
746.043 170.677 li
cp
f
745.17 169.964 mo
744.459 169.091 li
749.229 160.164 li
745.17 169.964 li
cp
f
744.459 169.091 mo
743.93 168.099 li
749.229 160.164 li
744.459 169.091 li
cp
f
743.93 168.099 mo
743.603 167.024 li
749.229 160.164 li
743.93 168.099 li
cp
f
743.603 167.024 mo
743.489 165.906 li
749.229 160.164 li
743.603 167.024 li
cp
f
743.489 165.906 mo
743.603 164.785 li
749.229 160.164 li
743.489 165.906 li
cp
f
743.603 164.785 mo
743.93 163.712 li
749.229 160.164 li
743.603 164.785 li
cp
f
743.93 163.712 mo
744.459 162.718 li
749.229 160.164 li
743.93 163.712 li
cp
f
744.459 162.718 mo
745.17 161.846 li
749.229 160.164 li
744.459 162.718 li
cp
f
745.17 161.846 mo
746.043 161.134 li
749.229 160.164 li
745.17 161.846 li
cp
f
746.043 161.134 mo
747.036 160.607 li
749.229 160.164 li
746.043 161.134 li
cp
f
747.036 160.607 mo
748.11 160.279 li
749.229 160.164 li
747.036 160.607 li
cp
f
748.11 160.279 mo
749.229 160.164 li
749.229 160.164 li
748.11 160.279 li
cp
f
749.229 160.164 mo
750.349 160.279 li
751.422 160.607 li
752.417 161.134 li
753.289 161.846 li
754 162.718 li
754.529 163.712 li
754.855 164.785 li
754.97 165.906 li
754.855 167.024 li
754.529 168.099 li
754 169.091 li
753.289 169.964 li
752.417 170.677 li
751.422 171.205 li
750.349 171.532 li
749.229 171.647 li
748.11 171.532 li
747.036 171.205 li
746.043 170.677 li
745.17 169.964 li
744.459 169.091 li
743.93 168.099 li
743.603 167.024 li
743.489 165.906 li
743.603 164.785 li
743.93 163.712 li
744.459 162.718 li
745.17 161.846 li
746.043 161.134 li
747.036 160.607 li
748.11 160.279 li
749.229 160.164 li
@
2 lw
449.229 29.085 mo
449.229 29.085 li
470.658 48.2261 li
492.086 67.8916 li
513.515 87.4355 li
534.944 106.288 li
556.372 123.982 li
577.8 140.184 li
599.229 154.689 li
620.658 167.421 li
642.086 178.396 li
663.515 187.711 li
684.943 195.51 li
706.372 201.959 li
727.8 207.223 li
749.229 211.475 li
749.229 211.475 li
0 .993988 1 0 cmyk
@
447.938 27.3105 mo
450.521 27.3105 li
449.229 23.3433 li
447.938 27.3105 li
cp
f
443.769 27.3105 mo
447.185 29.6411 li
447.938 27.3105 li
443.769 27.3105 li
cp
f
445.855 33.73 mo
449.229 31.0366 li
447.185 29.6411 li
445.855 33.73 li
cp
f
452.603 33.73 mo
451.274 29.6411 li
449.229 31.0366 li
452.603 33.73 li
cp
f
454.689 27.3105 mo
450.521 27.3105 li
451.274 29.6411 li
454.689 27.3105 li
cp
f
450.521 27.3105 mo
451.274 29.6411 li
447.938 27.3105 li
450.521 27.3105 li
cp
f
451.274 29.6411 mo
449.229 31.0366 li
447.938 27.3105 li
451.274 29.6411 li
cp
f
449.229 31.0366 mo
447.185 29.6411 li
447.938 27.3105 li
449.229 31.0366 li
cp
f
447.185 29.6411 mo
447.938 27.3105 li
447.938 27.3105 li
447.185 29.6411 li
cp
f
1 lw
449.229 23.3433 mo
447.938 27.3105 li
443.769 27.3105 li
447.185 29.6411 li
445.855 33.73 li
449.229 31.0366 li
452.603 33.73 li
451.274 29.6411 li
454.689 27.3105 li
450.521 27.3105 li
449.229 23.3433 li
@
469.367 46.4536 mo
471.95 46.4536 li
470.658 42.4858 li
469.367 46.4536 li
cp
f
465.198 46.4536 mo
468.614 48.7837 li
469.367 46.4536 li
465.198 46.4536 li
cp
f
467.284 52.8711 mo
470.658 50.1792 li
468.614 48.7837 li
467.284 52.8711 li
cp
f
474.032 52.8711 mo
472.703 48.7837 li
470.658 50.1792 li
474.032 52.8711 li
cp
f
476.118 46.4536 mo
471.95 46.4536 li
472.703 48.7837 li
476.118 46.4536 li
cp
f
471.95 46.4536 mo
472.703 48.7837 li
469.367 46.4536 li
471.95 46.4536 li
cp
f
472.703 48.7837 mo
470.658 50.1792 li
469.367 46.4536 li
472.703 48.7837 li
cp
f
470.658 50.1792 mo
468.614 48.7837 li
469.367 46.4536 li
470.658 50.1792 li
cp
f
468.614 48.7837 mo
469.367 46.4536 li
469.367 46.4536 li
468.614 48.7837 li
cp
f
470.658 42.4858 mo
469.367 46.4536 li
465.198 46.4536 li
468.614 48.7837 li
467.284 52.8711 li
470.658 50.1792 li
474.032 52.8711 li
472.703 48.7837 li
476.118 46.4536 li
471.95 46.4536 li
470.658 42.4858 li
@
490.794 66.1172 mo
493.377 66.1172 li
492.086 62.1499 li
490.794 66.1172 li
cp
f
486.626 66.1172 mo
490.042 68.4478 li
490.794 66.1172 li
486.626 66.1172 li
cp
f
488.712 72.5366 mo
492.086 69.8433 li
490.042 68.4478 li
488.712 72.5366 li
cp
f
495.46 72.5366 mo
494.13 68.4478 li
492.086 69.8433 li
495.46 72.5366 li
cp
f
497.546 66.1172 mo
493.377 66.1172 li
494.13 68.4478 li
497.546 66.1172 li
cp
f
493.377 66.1172 mo
494.13 68.4478 li
490.794 66.1172 li
493.377 66.1172 li
cp
f
494.13 68.4478 mo
492.086 69.8433 li
490.794 66.1172 li
494.13 68.4478 li
cp
f
492.086 69.8433 mo
490.042 68.4478 li
490.794 66.1172 li
492.086 69.8433 li
cp
f
490.042 68.4478 mo
490.794 66.1172 li
490.794 66.1172 li
490.042 68.4478 li
cp
f
492.086 62.1499 mo
490.794 66.1172 li
486.626 66.1172 li
490.042 68.4478 li
488.712 72.5366 li
492.086 69.8433 li
495.46 72.5366 li
494.13 68.4478 li
497.546 66.1172 li
493.377 66.1172 li
492.086 62.1499 li
@
512.223 85.6611 mo
514.806 85.6611 li
513.515 81.6938 li
512.223 85.6611 li
cp
f
508.054 85.6611 mo
511.47 87.9932 li
512.223 85.6611 li
508.054 85.6611 li
cp
f
510.14 92.0806 mo
513.515 89.3887 li
511.47 87.9932 li
510.14 92.0806 li
cp
f
516.889 92.0806 mo
515.559 87.9932 li
513.515 89.3887 li
516.889 92.0806 li
cp
f
518.975 85.6611 mo
514.806 85.6611 li
515.559 87.9932 li
518.975 85.6611 li
cp
f
514.806 85.6611 mo
515.559 87.9932 li
512.223 85.6611 li
514.806 85.6611 li
cp
f
515.559 87.9932 mo
513.515 89.3887 li
512.223 85.6611 li
515.559 87.9932 li
cp
f
513.515 89.3887 mo
511.47 87.9932 li
512.223 85.6611 li
513.515 89.3887 li
cp
f
511.47 87.9932 mo
512.223 85.6611 li
512.223 85.6611 li
511.47 87.9932 li
cp
f
513.515 81.6938 mo
512.223 85.6611 li
508.054 85.6611 li
511.47 87.9932 li
510.14 92.0806 li
513.515 89.3887 li
516.889 92.0806 li
515.559 87.9932 li
518.975 85.6611 li
514.806 85.6611 li
513.515 81.6938 li
@
533.652 104.515 mo
536.235 104.515 li
534.944 100.547 li
533.652 104.515 li
cp
f
529.483 104.515 mo
532.899 106.845 li
533.652 104.515 li
529.483 104.515 li
cp
f
531.569 110.933 mo
534.944 108.241 li
532.899 106.845 li
531.569 110.933 li
cp
f
538.318 110.933 mo
536.988 106.845 li
534.944 108.241 li
538.318 110.933 li
cp
f
540.404 104.515 mo
536.235 104.515 li
536.988 106.845 li
540.404 104.515 li
cp
f
536.235 104.515 mo
536.988 106.845 li
533.652 104.515 li
536.235 104.515 li
cp
f
536.988 106.845 mo
534.944 108.241 li
533.652 104.515 li
536.988 106.845 li
cp
f
534.944 108.241 mo
532.899 106.845 li
533.652 104.515 li
534.944 108.241 li
cp
f
532.899 106.845 mo
533.652 104.515 li
533.652 104.515 li
532.899 106.845 li
cp
f
534.944 100.547 mo
533.652 104.515 li
529.483 104.515 li
532.899 106.845 li
531.569 110.933 li
534.944 108.241 li
538.318 110.933 li
536.988 106.845 li
540.404 104.515 li
536.235 104.515 li
534.944 100.547 li
@
555.081 122.209 mo
557.664 122.209 li
556.372 118.242 li
555.081 122.209 li
cp
f
550.912 122.209 mo
554.328 124.54 li
555.081 122.209 li
550.912 122.209 li
cp
f
552.998 128.627 mo
556.372 125.935 li
554.328 124.54 li
552.998 128.627 li
cp
f
559.747 128.627 mo
558.417 124.54 li
556.372 125.935 li
559.747 128.627 li
cp
f
561.833 122.209 mo
557.664 122.209 li
558.417 124.54 li
561.833 122.209 li
cp
f
557.664 122.209 mo
558.417 124.54 li
555.081 122.209 li
557.664 122.209 li
cp
f
558.417 124.54 mo
556.372 125.935 li
555.081 122.209 li
558.417 124.54 li
cp
f
556.372 125.935 mo
554.328 124.54 li
555.081 122.209 li
556.372 125.935 li
cp
f
554.328 124.54 mo
555.081 122.209 li
555.081 122.209 li
554.328 124.54 li
cp
f
556.372 118.242 mo
555.081 122.209 li
550.912 122.209 li
554.328 124.54 li
552.998 128.627 li
556.372 125.935 li
559.747 128.627 li
558.417 124.54 li
561.833 122.209 li
557.664 122.209 li
556.372 118.242 li
@
576.509 138.41 mo
579.092 138.41 li
577.8 134.442 li
576.509 138.41 li
cp
f
572.34 138.41 mo
575.756 140.742 li
576.509 138.41 li
572.34 138.41 li
cp
f
574.426 144.829 mo
577.8 142.135 li
575.756 140.742 li
574.426 144.829 li
cp
f
581.175 144.829 mo
579.845 140.742 li
577.8 142.135 li
581.175 144.829 li
cp
f
583.261 138.41 mo
579.092 138.41 li
579.845 140.742 li
583.261 138.41 li
cp
f
579.092 138.41 mo
579.845 140.742 li
576.509 138.41 li
579.092 138.41 li
cp
f
579.845 140.742 mo
577.8 142.135 li
576.509 138.41 li
579.845 140.742 li
cp
f
577.8 142.135 mo
575.756 140.742 li
576.509 138.41 li
577.8 142.135 li
cp
f
575.756 140.742 mo
576.509 138.41 li
576.509 138.41 li
575.756 140.742 li
cp
f
577.8 134.442 mo
576.509 138.41 li
572.34 138.41 li
575.756 140.742 li
574.426 144.829 li
577.8 142.135 li
581.175 144.829 li
579.845 140.742 li
583.261 138.41 li
579.092 138.41 li
577.8 134.442 li
@
597.938 152.915 mo
600.521 152.915 li
599.229 148.948 li
597.938 152.915 li
cp
f
593.769 152.915 mo
597.185 155.247 li
597.938 152.915 li
593.769 152.915 li
cp
f
595.855 159.334 mo
599.229 156.641 li
597.185 155.247 li
595.855 159.334 li
cp
f
602.603 159.334 mo
601.274 155.247 li
599.229 156.641 li
602.603 159.334 li
cp
f
604.689 152.915 mo
600.521 152.915 li
601.274 155.247 li
604.689 152.915 li
cp
f
600.521 152.915 mo
601.274 155.247 li
597.938 152.915 li
600.521 152.915 li
cp
f
601.274 155.247 mo
599.229 156.641 li
597.938 152.915 li
601.274 155.247 li
cp
f
599.229 156.641 mo
597.185 155.247 li
597.938 152.915 li
599.229 156.641 li
cp
f
597.185 155.247 mo
597.938 152.915 li
597.938 152.915 li
597.185 155.247 li
cp
f
599.229 148.948 mo
597.938 152.915 li
593.769 152.915 li
597.185 155.247 li
595.855 159.334 li
599.229 156.641 li
602.603 159.334 li
601.274 155.247 li
604.689 152.915 li
600.521 152.915 li
599.229 148.948 li
@
619.366 165.646 mo
621.949 165.646 li
620.658 161.679 li
619.366 165.646 li
cp
f
615.198 165.646 mo
618.613 167.977 li
619.366 165.646 li
615.198 165.646 li
cp
f
617.284 172.064 mo
620.658 169.373 li
618.613 167.977 li
617.284 172.064 li
cp
f
624.032 172.064 mo
622.702 167.977 li
620.658 169.373 li
624.032 172.064 li
cp
f
626.118 165.646 mo
621.949 165.646 li
622.702 167.977 li
626.118 165.646 li
cp
f
621.949 165.646 mo
622.702 167.977 li
619.366 165.646 li
621.949 165.646 li
cp
f
622.702 167.977 mo
620.658 169.373 li
619.366 165.646 li
622.702 167.977 li
cp
f
620.658 169.373 mo
618.613 167.977 li
619.366 165.646 li
620.658 169.373 li
cp
f
618.613 167.977 mo
619.366 165.646 li
619.366 165.646 li
618.613 167.977 li
cp
f
620.658 161.679 mo
619.366 165.646 li
615.198 165.646 li
618.613 167.977 li
617.284 172.064 li
620.658 169.373 li
624.032 172.064 li
622.702 167.977 li
626.118 165.646 li
621.949 165.646 li
620.658 161.679 li
@
640.794 176.622 mo
643.377 176.622 li
642.086 172.654 li
640.794 176.622 li
cp
f
636.625 176.622 mo
640.043 178.954 li
640.794 176.622 li
636.625 176.622 li
cp
f
638.712 183.041 mo
642.086 180.348 li
640.043 178.954 li
638.712 183.041 li
cp
f
645.46 183.041 mo
644.13 178.954 li
642.086 180.348 li
645.46 183.041 li
cp
f
647.546 176.622 mo
643.377 176.622 li
644.13 178.954 li
647.546 176.622 li
cp
f
643.377 176.622 mo
644.13 178.954 li
640.794 176.622 li
643.377 176.622 li
cp
f
644.13 178.954 mo
642.086 180.348 li
640.794 176.622 li
644.13 178.954 li
cp
f
642.086 180.348 mo
640.043 178.954 li
640.794 176.622 li
642.086 180.348 li
cp
f
640.043 178.954 mo
640.794 176.622 li
640.794 176.622 li
640.043 178.954 li
cp
f
642.086 172.654 mo
640.794 176.622 li
636.625 176.622 li
640.043 178.954 li
638.712 183.041 li
642.086 180.348 li
645.46 183.041 li
644.13 178.954 li
647.546 176.622 li
643.377 176.622 li
642.086 172.654 li
@
662.223 185.939 mo
664.806 185.939 li
663.515 181.972 li
662.223 185.939 li
cp
f
658.054 185.939 mo
661.472 188.269 li
662.223 185.939 li
658.054 185.939 li
cp
f
660.14 192.356 mo
663.515 189.665 li
661.472 188.269 li
660.14 192.356 li
cp
f
666.889 192.356 mo
665.559 188.269 li
663.515 189.665 li
666.889 192.356 li
cp
f
668.975 185.939 mo
664.806 185.939 li
665.559 188.269 li
668.975 185.939 li
cp
f
664.806 185.939 mo
665.559 188.269 li
662.223 185.939 li
664.806 185.939 li
cp
f
665.559 188.269 mo
663.515 189.665 li
662.223 185.939 li
665.559 188.269 li
cp
f
663.515 189.665 mo
661.472 188.269 li
662.223 185.939 li
663.515 189.665 li
cp
f
661.472 188.269 mo
662.223 185.939 li
662.223 185.939 li
661.472 188.269 li
cp
f
663.515 181.972 mo
662.223 185.939 li
658.054 185.939 li
661.472 188.269 li
660.14 192.356 li
663.515 189.665 li
666.889 192.356 li
665.559 188.269 li
668.975 185.939 li
664.806 185.939 li
663.515 181.972 li
@
683.652 193.737 mo
686.235 193.737 li
684.943 189.77 li
683.652 193.737 li
cp
f
679.483 193.737 mo
682.901 196.068 li
683.652 193.737 li
679.483 193.737 li
cp
f
681.569 200.155 mo
684.943 197.463 li
682.901 196.068 li
681.569 200.155 li
cp
f
688.318 200.155 mo
686.988 196.068 li
684.943 197.463 li
688.318 200.155 li
cp
f
690.404 193.737 mo
686.235 193.737 li
686.988 196.068 li
690.404 193.737 li
cp
f
686.235 193.737 mo
686.988 196.068 li
683.652 193.737 li
686.235 193.737 li
cp
f
686.988 196.068 mo
684.943 197.463 li
683.652 193.737 li
686.988 196.068 li
cp
f
684.943 197.463 mo
682.901 196.068 li
683.652 193.737 li
684.943 197.463 li
cp
f
682.901 196.068 mo
683.652 193.737 li
683.652 193.737 li
682.901 196.068 li
cp
f
684.943 189.77 mo
683.652 193.737 li
679.483 193.737 li
682.901 196.068 li
681.569 200.155 li
684.943 197.463 li
688.318 200.155 li
686.988 196.068 li
690.404 193.737 li
686.235 193.737 li
684.943 189.77 li
@
705.081 200.184 mo
707.664 200.184 li
706.372 196.217 li
705.081 200.184 li
cp
f
700.912 200.184 mo
704.33 202.514 li
705.081 200.184 li
700.912 200.184 li
cp
f
702.998 206.602 mo
706.372 203.91 li
704.33 202.514 li
702.998 206.602 li
cp
f
709.748 206.602 mo
708.417 202.514 li
706.372 203.91 li
709.748 206.602 li
cp
f
711.832 200.184 mo
707.664 200.184 li
708.417 202.514 li
711.832 200.184 li
cp
f
707.664 200.184 mo
708.417 202.514 li
705.081 200.184 li
707.664 200.184 li
cp
f
708.417 202.514 mo
706.372 203.91 li
705.081 200.184 li
708.417 202.514 li
cp
f
706.372 203.91 mo
704.33 202.514 li
705.081 200.184 li
706.372 203.91 li
cp
f
704.33 202.514 mo
705.081 200.184 li
705.081 200.184 li
704.33 202.514 li
cp
f
706.372 196.217 mo
705.081 200.184 li
700.912 200.184 li
704.33 202.514 li
702.998 206.602 li
706.372 203.91 li
709.748 206.602 li
708.417 202.514 li
711.832 200.184 li
707.664 200.184 li
706.372 196.217 li
@
726.509 205.449 mo
729.092 205.449 li
727.8 201.484 li
726.509 205.449 li
cp
f
722.341 205.449 mo
725.757 207.781 li
726.509 205.449 li
722.341 205.449 li
cp
f
724.426 211.869 mo
727.8 209.176 li
725.757 207.781 li
724.426 211.869 li
cp
f
731.176 211.869 mo
729.845 207.781 li
727.8 209.176 li
731.176 211.869 li
cp
f
733.26 205.449 mo
729.092 205.449 li
729.845 207.781 li
733.26 205.449 li
cp
f
729.092 205.449 mo
729.845 207.781 li
726.509 205.449 li
729.092 205.449 li
cp
f
729.845 207.781 mo
727.8 209.176 li
726.509 205.449 li
729.845 207.781 li
cp
f
727.8 209.176 mo
725.757 207.781 li
726.509 205.449 li
727.8 209.176 li
cp
f
725.757 207.781 mo
726.509 205.449 li
726.509 205.449 li
725.757 207.781 li
cp
f
727.8 201.484 mo
726.509 205.449 li
722.341 205.449 li
725.757 207.781 li
724.426 211.869 li
727.8 209.176 li
731.176 211.869 li
729.845 207.781 li
733.26 205.449 li
729.092 205.449 li
727.8 201.484 li
@
747.937 209.701 mo
750.522 209.701 li
749.229 205.734 li
747.937 209.701 li
cp
f
743.77 209.701 mo
747.186 212.033 li
747.937 209.701 li
743.77 209.701 li
cp
f
745.855 216.121 mo
749.229 213.428 li
747.186 212.033 li
745.855 216.121 li
cp
f
752.605 216.121 mo
751.273 212.033 li
749.229 213.428 li
752.605 216.121 li
cp
f
754.689 209.701 mo
750.522 209.701 li
751.273 212.033 li
754.689 209.701 li
cp
f
750.522 209.701 mo
751.273 212.033 li
747.937 209.701 li
750.522 209.701 li
cp
f
751.273 212.033 mo
749.229 213.428 li
747.937 209.701 li
751.273 212.033 li
cp
f
749.229 213.428 mo
747.186 212.033 li
747.937 209.701 li
749.229 213.428 li
cp
f
747.186 212.033 mo
747.937 209.701 li
747.937 209.701 li
747.186 212.033 li
cp
f
749.229 205.734 mo
747.937 209.701 li
743.77 209.701 li
747.186 212.033 li
745.855 216.121 li
749.229 213.428 li
752.605 216.121 li
751.273 212.033 li
754.689 209.701 li
750.522 209.701 li
749.229 205.734 li
@
.75021 .679683 .670222 .90164 cmyk
IDULSA+Helvetica*1 [16.6004 0 0 -16.5732 0 0 ]msf502.134 183.889 mo(limiter)[3.68848 3.6875 13.8281 3.68848 4.6123 9.23242 0 ]xsh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 103 /g putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [16.6004 0 0 -16.5732 0 0 ]msf505.455 199.85 mo(edge)sh2 lw
[7.67246 7.67246 7.67246 7.67246 ] 0 dsh
492.086 217.574 mo
492.086 22.5742 li
.519524 .434333 .434333 .0791333 cmyk
@
[] 0 dsh
706.372 217.574 mo
706.372 206.943 li
663.515 217.574 mo
663.515 212.26 li
620.658 217.574 mo
620.658 212.26 li
577.8 217.574 mo
577.8 212.26 li
534.944 217.574 mo
534.944 212.26 li
492.086 217.574 mo
492.086 206.943 li
449.229 217.574 mo
449.229 212.26 li
449.229 217.574 mo
749.229 217.574 li
.75021 .679683 .670222 .90164 cmyk
@
IDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf478.423 242.139 mo(26)[13.8486 0 ]xsh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf692.705 242.139 mo(31)[13.8486 0 ]xshIDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf531.783 267.342 mo(Radi)sh582.994 267.342 mo(us \()sh624.503 267.342 mo(cm)[12.4502 0 ]xshIDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf657.673 267.342 mo(\))sh449.229 31.4395 mo
454.545 31.4395 li
449.229 58.0293 mo
459.861 58.0293 li
449.229 84.6206 mo
454.545 84.6206 li
449.229 111.212 mo
454.545 111.212 li
449.229 137.802 mo
454.545 137.802 li
449.229 164.394 mo
459.861 164.394 li
449.229 190.985 mo
454.545 190.985 li
449.229 217.574 mo
454.545 217.574 li
449.229 217.574 mo
449.229 22.5742 li
@
IDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf403.095 173.092 mo(0.3)shIDULSA+Helvetica*1 [24.9005 0 0 -24.8597 0 0 ]msf403.095 66.7246 mo(0.6)shIDULSA+Helvetica*1 [0 -24.9005 -24.8597 0 0 0 ]msf381.025 179.49 mo(n)shIDULSA+Helvetica*1 [0 -15.4134 -15.3881 0 0 0 ]msf385.97 165.326 mo(e)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 47 /slash putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /three /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [0 -24.9005 -24.8597 0 0 0 ]msf381.025 156.889 mo(/n)[-6.91797 0 ]yshIDULSA+Helvetica*1 [0 -15.4134 -15.3881 0 0 0 ]msf385.97 135.248 mo(e)shIDULSA+Helvetica*1 [0 -24.9005 -24.8597 0 0 0 ]msf381.025 126.803 mo(\(core\))[-8.29199 -12.4502 -13.8486 -8.29199 -13.8486 0 ]ysh743.915 31.4395 mo
749.229 31.4395 li
738.598 58.0293 mo
749.229 58.0293 li
743.915 84.6206 mo
749.229 84.6206 li
743.915 111.212 mo
749.229 111.212 li
743.915 137.802 mo
749.229 137.802 li
738.598 164.394 mo
749.229 164.394 li
743.915 190.985 mo
749.229 190.985 li
743.915 217.574 mo
749.229 217.574 li
749.229 217.574 mo
749.229 22.5742 li
706.372 33.207 mo
706.372 22.5742 li
663.515 27.8906 mo
663.515 22.5742 li
620.658 27.8906 mo
620.658 22.5742 li
577.8 27.8906 mo
577.8 22.5742 li
534.944 27.8906 mo
534.944 22.5742 li
492.086 33.207 mo
492.086 22.5742 li
449.229 27.8906 mo
449.229 22.5742 li
449.229 22.5742 mo
749.229 22.5742 li
@
738.933 121.848 mo
738.933 30.0356 li
559.097 121.848 li
738.933 121.848 li
cp
0 0 0 0 cmyk
f
738.933 30.0356 mo
559.097 30.0356 li
559.097 121.848 li
738.933 30.0356 li
cp
f
559.097 30.0356 mo
559.097 121.848 li
559.097 121.848 li
559.097 30.0356 li
cp
f
1 lw
564.097 104.87 mo
563.083 107.98 li
559.818 107.98 li
562.496 109.807 li
561.452 113.01 li
564.097 110.9 li
566.743 113.01 li
565.699 109.807 li
568.376 107.98 li
565.109 107.98 li
564.097 104.87 li
563.597 104.87 mo
562.585 107.98 li
559.318 107.98 li
561.996 109.807 li
560.952 113.01 li
563.597 110.9 li
566.243 113.01 li
565.199 109.807 li
567.875 107.98 li
564.609 107.98 li
563.597 104.87 li
563.096 104.87 mo
562.084 107.98 li
558.818 107.98 li
561.495 109.807 li
560.451 113.01 li
563.096 110.9 li
565.742 113.01 li
564.698 109.807 li
567.377 107.98 li
564.11 107.98 li
563.096 104.87 li
0 .993988 1 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
IDULSA+Helvetica*1 [20.7504 0 0 -20.7164 0 0 ]msf568.08 50.9824 mo(Lim Rel. Anode \(V\))[11.54 4.61035 17.2852 5.76563 14.9854 11.54 4.61035 5.76465 5.76563 13.8398 11.541 11.54 11.54 11.541 5.76465 6.91016 13.8408 0 ]xshIDULSA+Helvetica*1 [20.7504 0 0 -20.7164 0 0 ]msf568.08 75.9355 mo( !10V)[5.76465 12.1182 11.541 11.54 0 ]xsh2 lw
563.096 67.4585 mo
563.597 67.4585 li
564.097 67.4585 li
.883665 .769161 0 0 cmyk
@
559.2 69.709 mo
566.994 69.709 li
563.096 62.959 li
559.2 69.709 li
cp
f
566.994 69.709 mo
563.096 62.959 li
563.096 62.959 li
566.994 69.709 li
cp
f
1 lw
563.096 62.959 mo
559.2 69.709 li
566.994 69.709 li
563.096 62.959 li
@
559.7 69.709 mo
567.494 69.709 li
563.597 62.959 li
559.7 69.709 li
cp
f
567.494 69.709 mo
563.597 62.959 li
563.597 62.959 li
567.494 69.709 li
cp
f
563.597 62.959 mo
559.7 69.709 li
567.494 69.709 li
563.597 62.959 li
@
560.201 69.709 mo
567.995 69.709 li
564.097 62.959 li
560.201 69.709 li
cp
f
567.995 69.709 mo
564.097 62.959 li
564.097 62.959 li
567.995 69.709 li
cp
f
564.097 62.959 mo
560.201 69.709 li
567.995 69.709 li
564.097 62.959 li
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginIDULSA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendIDULSA+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/IDULSA+Helvetica*1 [32{/.notdef}rp /space /minus 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /.notdef /eight 8{/.notdef}rp /A /B 9{/.notdef}rp /L /M 4{/.notdef}rp /R /S 2{/.notdef}rp /V 3{/.notdef}rp /Z 6{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]IDULSA+Helvetica nfIDULSA+Helvetica*1 [20.7504 0 0 -20.7164 0 0 ]msf568.08 96.8965 mo( !5V)[5.76465 12.1182 11.541 0 ]xsh3.00001 lw
563.096 88.4155 mo
563.597 88.4155 li
564.097 88.4155 li
@
563.974 84.0054 mo
564.817 84.2612 li
563.096 83.9141 li
563.974 84.0054 li
cp
f
564.817 84.2612 mo
565.595 84.6748 li
563.096 83.9141 li
564.817 84.2612 li
cp
f
565.595 84.6748 mo
566.279 85.2329 li
563.096 83.9141 li
565.595 84.6748 li
cp
f
566.279 85.2329 mo
566.837 85.917 li
563.096 83.9141 li
566.279 85.2329 li
cp
f
566.837 85.917 mo
567.25 86.6953 li
563.096 83.9141 li
566.837 85.917 li
cp
f
567.25 86.6953 mo
567.506 87.5376 li
563.096 83.9141 li
567.25 86.6953 li
cp
f
567.506 87.5376 mo
567.596 88.4155 li
563.096 83.9141 li
567.506 87.5376 li
cp
f
567.596 88.4155 mo
567.506 89.293 li
563.096 83.9141 li
567.596 88.4155 li
cp
f
567.506 89.293 mo
567.25 90.1338 li
563.096 83.9141 li
567.506 89.293 li
cp
f
567.25 90.1338 mo
566.837 90.9121 li
563.096 83.9141 li
567.25 90.1338 li
cp
f
566.837 90.9121 mo
566.279 91.5962 li
563.096 83.9141 li
566.837 90.9121 li
cp
f
566.279 91.5962 mo
565.595 92.1538 li
563.096 83.9141 li
566.279 91.5962 li
cp
f
565.595 92.1538 mo
564.817 92.5679 li
563.096 83.9141 li
565.595 92.1538 li
cp
f
564.817 92.5679 mo
563.974 92.8252 li
563.096 83.9141 li
564.817 92.5679 li
cp
f
563.974 92.8252 mo
563.096 92.915 li
563.096 83.9141 li
563.974 92.8252 li
cp
f
563.096 92.915 mo
562.219 92.8252 li
563.096 83.9141 li
563.096 92.915 li
cp
f
562.219 92.8252 mo
561.378 92.5679 li
563.096 83.9141 li
562.219 92.8252 li
cp
f
561.378 92.5679 mo
560.6 92.1538 li
563.096 83.9141 li
561.378 92.5679 li
cp
f
560.6 92.1538 mo
559.916 91.5962 li
563.096 83.9141 li
560.6 92.1538 li
cp
f
559.916 91.5962 mo
559.358 90.9121 li
563.096 83.9141 li
559.916 91.5962 li
cp
f
559.358 90.9121 mo
558.944 90.1338 li
563.096 83.9141 li
559.358 90.9121 li
cp
f
558.944 90.1338 mo
558.687 89.293 li
563.096 83.9141 li
558.944 90.1338 li
cp
f
558.687 89.293 mo
558.597 88.4155 li
563.096 83.9141 li
558.687 89.293 li
cp
f
558.597 88.4155 mo
558.687 87.5376 li
563.096 83.9141 li
558.597 88.4155 li
cp
f
558.687 87.5376 mo
558.944 86.6953 li
563.096 83.9141 li
558.687 87.5376 li
cp
f
558.944 86.6953 mo
559.358 85.917 li
563.096 83.9141 li
558.944 86.6953 li
cp
f
559.358 85.917 mo
559.916 85.2329 li
563.096 83.9141 li
559.358 85.917 li
cp
f
559.916 85.2329 mo
560.6 84.6748 li
563.096 83.9141 li
559.916 85.2329 li
cp
f
560.6 84.6748 mo
561.378 84.2612 li
563.096 83.9141 li
560.6 84.6748 li
cp
f
561.378 84.2612 mo
562.219 84.0054 li
563.096 83.9141 li
561.378 84.2612 li
cp
f
562.219 84.0054 mo
563.096 83.9141 li
563.096 83.9141 li
562.219 84.0054 li
cp
f
564.474 84.0054 mo
565.315 84.2612 li
563.597 83.9141 li
564.474 84.0054 li
cp
f
565.315 84.2612 mo
566.095 84.6748 li
563.597 83.9141 li
565.315 84.2612 li
cp
f
566.095 84.6748 mo
566.778 85.2329 li
563.597 83.9141 li
566.095 84.6748 li
cp
f
566.778 85.2329 mo
567.337 85.917 li
563.597 83.9141 li
566.778 85.2329 li
cp
f
567.337 85.917 mo
567.751 86.6953 li
563.597 83.9141 li
567.337 85.917 li
cp
f
567.751 86.6953 mo
568.007 87.5376 li
563.597 83.9141 li
567.751 86.6953 li
cp
f
568.007 87.5376 mo
568.096 88.4155 li
563.597 83.9141 li
568.007 87.5376 li
cp
f
568.096 88.4155 mo
568.007 89.293 li
563.597 83.9141 li
568.096 88.4155 li
cp
f
568.007 89.293 mo
567.751 90.1338 li
563.597 83.9141 li
568.007 89.293 li
cp
f
567.751 90.1338 mo
567.337 90.9121 li
563.597 83.9141 li
567.751 90.1338 li
cp
f
567.337 90.9121 mo
566.778 91.5962 li
563.597 83.9141 li
567.337 90.9121 li
cp
f
566.778 91.5962 mo
566.095 92.1538 li
563.597 83.9141 li
566.778 91.5962 li
cp
f
566.095 92.1538 mo
565.315 92.5679 li
563.597 83.9141 li
566.095 92.1538 li
cp
f
565.315 92.5679 mo
564.474 92.8252 li
563.597 83.9141 li
565.315 92.5679 li
cp
f
564.474 92.8252 mo
563.597 92.915 li
563.597 83.9141 li
564.474 92.8252 li
cp
f
563.597 92.915 mo
562.719 92.8252 li
563.597 83.9141 li
563.597 92.915 li
cp
f
562.719 92.8252 mo
561.878 92.5679 li
563.597 83.9141 li
562.719 92.8252 li
cp
f
561.878 92.5679 mo
561.1 92.1538 li
563.597 83.9141 li
561.878 92.5679 li
cp
f
561.1 92.1538 mo
560.416 91.5962 li
563.597 83.9141 li
561.1 92.1538 li
cp
f
560.416 91.5962 mo
559.858 90.9121 li
563.597 83.9141 li
560.416 91.5962 li
cp
f
559.858 90.9121 mo
559.444 90.1338 li
563.597 83.9141 li
559.858 90.9121 li
cp
f
559.444 90.1338 mo
559.187 89.293 li
563.597 83.9141 li
559.444 90.1338 li
cp
f
559.187 89.293 mo
559.097 88.4155 li
563.597 83.9141 li
559.187 89.293 li
cp
f
559.097 88.4155 mo
559.187 87.5376 li
563.597 83.9141 li
559.097 88.4155 li
cp
f
559.187 87.5376 mo
559.444 86.6953 li
563.597 83.9141 li
559.187 87.5376 li
cp
f
559.444 86.6953 mo
559.858 85.917 li
563.597 83.9141 li
559.444 86.6953 li
cp
f
559.858 85.917 mo
560.416 85.2329 li
563.597 83.9141 li
559.858 85.917 li
cp
f
560.416 85.2329 mo
561.1 84.6748 li
563.597 83.9141 li
560.416 85.2329 li
cp
f
561.1 84.6748 mo
561.878 84.2612 li
563.597 83.9141 li
561.1 84.6748 li
cp
f
561.878 84.2612 mo
562.719 84.0054 li
563.597 83.9141 li
561.878 84.2612 li
cp
f
562.719 84.0054 mo
563.597 83.9141 li
563.597 83.9141 li
562.719 84.0054 li
cp
f
564.975 84.0054 mo
565.816 84.2612 li
564.097 83.9141 li
564.975 84.0054 li
cp
f
565.816 84.2612 mo
566.594 84.6748 li
564.097 83.9141 li
565.816 84.2612 li
cp
f
566.594 84.6748 mo
567.278 85.2329 li
564.097 83.9141 li
566.594 84.6748 li
cp
f
567.278 85.2329 mo
567.835 85.917 li
564.097 83.9141 li
567.278 85.2329 li
cp
f
567.835 85.917 mo
568.25 86.6953 li
564.097 83.9141 li
567.835 85.917 li
cp
f
568.25 86.6953 mo
568.507 87.5376 li
564.097 83.9141 li
568.25 86.6953 li
cp
f
568.507 87.5376 mo
568.597 88.4155 li
564.097 83.9141 li
568.507 87.5376 li
cp
f
568.597 88.4155 mo
568.507 89.293 li
564.097 83.9141 li
568.597 88.4155 li
cp
f
568.507 89.293 mo
568.25 90.1338 li
564.097 83.9141 li
568.507 89.293 li
cp
f
568.25 90.1338 mo
567.835 90.9121 li
564.097 83.9141 li
568.25 90.1338 li
cp
f
567.835 90.9121 mo
567.278 91.5962 li
564.097 83.9141 li
567.835 90.9121 li
cp
f
567.278 91.5962 mo
566.594 92.1538 li
564.097 83.9141 li
567.278 91.5962 li
cp
f
566.594 92.1538 mo
565.816 92.5679 li
564.097 83.9141 li
566.594 92.1538 li
cp
f
565.816 92.5679 mo
564.975 92.8252 li
564.097 83.9141 li
565.816 92.5679 li
cp
f
564.975 92.8252 mo
564.097 92.915 li
564.097 83.9141 li
564.975 92.8252 li
cp
f
564.097 92.915 mo
563.219 92.8252 li
564.097 83.9141 li
564.097 92.915 li
cp
f
563.219 92.8252 mo
562.377 92.5679 li
564.097 83.9141 li
563.219 92.8252 li
cp
f
562.377 92.5679 mo
561.599 92.1538 li
564.097 83.9141 li
562.377 92.5679 li
cp
f
561.599 92.1538 mo
560.915 91.5962 li
564.097 83.9141 li
561.599 92.1538 li
cp
f
560.915 91.5962 mo
560.357 90.9121 li
564.097 83.9141 li
560.915 91.5962 li
cp
f
560.357 90.9121 mo
559.943 90.1338 li
564.097 83.9141 li
560.357 90.9121 li
cp
f
559.943 90.1338 mo
559.687 89.293 li
564.097 83.9141 li
559.943 90.1338 li
cp
f
559.687 89.293 mo
559.597 88.4155 li
564.097 83.9141 li
559.687 89.293 li
cp
f
559.597 88.4155 mo
559.687 87.5376 li
564.097 83.9141 li
559.597 88.4155 li
cp
f
559.687 87.5376 mo
559.943 86.6953 li
564.097 83.9141 li
559.687 87.5376 li
cp
f
559.943 86.6953 mo
560.357 85.917 li
564.097 83.9141 li
559.943 86.6953 li
cp
f
560.357 85.917 mo
560.915 85.2329 li
564.097 83.9141 li
560.357 85.917 li
cp
f
560.915 85.2329 mo
561.599 84.6748 li
564.097 83.9141 li
560.915 85.2329 li
cp
f
561.599 84.6748 mo
562.377 84.2612 li
564.097 83.9141 li
561.599 84.6748 li
cp
f
562.377 84.2612 mo
563.219 84.0054 li
564.097 83.9141 li
562.377 84.2612 li
cp
f
563.219 84.0054 mo
564.097 83.9141 li
564.097 83.9141 li
563.219 84.0054 li
cp
f
IDULSA+Helvetica*1 [20.7504 0 0 -20.7164 0 0 ]msf568.08 117.842 mo( 13V)[5.76465 11.541 11.54 0 ]xsh2 lw
563.096 109.371 mo
563.597 109.371 li
564.097 109.371 li
0 .993988 1 0 cmyk
@
562.084 107.98 mo
564.11 107.98 li
563.096 104.87 li
562.084 107.98 li
cp
f
558.818 107.98 mo
561.495 109.807 li
562.084 107.98 li
558.818 107.98 li
cp
f
560.451 113.01 mo
563.096 110.9 li
561.495 109.807 li
560.451 113.01 li
cp
f
565.742 113.01 mo
564.698 109.807 li
563.096 110.9 li
565.742 113.01 li
cp
f
567.377 107.98 mo
564.11 107.98 li
564.698 109.807 li
567.377 107.98 li
cp
f
564.11 107.98 mo
564.698 109.807 li
562.084 107.98 li
564.11 107.98 li
cp
f
564.698 109.807 mo
563.096 110.9 li
562.084 107.98 li
564.698 109.807 li
cp
f
563.096 110.9 mo
561.495 109.807 li
562.084 107.98 li
563.096 110.9 li
cp
f
561.495 109.807 mo
562.084 107.98 li
562.084 107.98 li
561.495 109.807 li
cp
f
562.585 107.98 mo
564.609 107.98 li
563.597 104.87 li
562.585 107.98 li
cp
f
559.318 107.98 mo
561.996 109.807 li
562.585 107.98 li
559.318 107.98 li
cp
f
560.952 113.01 mo
563.597 110.9 li
561.996 109.807 li
560.952 113.01 li
cp
f
566.243 113.01 mo
565.199 109.807 li
563.597 110.9 li
566.243 113.01 li
cp
f
567.875 107.98 mo
564.609 107.98 li
565.199 109.807 li
567.875 107.98 li
cp
f
564.609 107.98 mo
565.199 109.807 li
562.585 107.98 li
564.609 107.98 li
cp
f
565.199 109.807 mo
563.597 110.9 li
562.585 107.98 li
565.199 109.807 li
cp
f
563.597 110.9 mo
561.996 109.807 li
562.585 107.98 li
563.597 110.9 li
cp
f
561.996 109.807 mo
562.585 107.98 li
562.585 107.98 li
561.996 109.807 li
cp
f
563.083 107.98 mo
565.109 107.98 li
564.097 104.87 li
563.083 107.98 li
cp
f
559.818 107.98 mo
562.496 109.807 li
563.083 107.98 li
559.818 107.98 li
cp
f
561.452 113.01 mo
564.097 110.9 li
562.496 109.807 li
561.452 113.01 li
cp
f
566.743 113.01 mo
565.699 109.807 li
564.097 110.9 li
566.743 113.01 li
cp
f
568.376 107.98 mo
565.109 107.98 li
565.699 109.807 li
568.376 107.98 li
cp
f
565.109 107.98 mo
565.699 109.807 li
563.083 107.98 li
565.109 107.98 li
cp
f
565.699 109.807 mo
564.097 110.9 li
563.083 107.98 li
565.699 109.807 li
cp
f
564.097 110.9 mo
562.496 109.807 li
563.083 107.98 li
564.097 110.9 li
cp
f
562.496 109.807 mo
563.083 107.98 li
563.083 107.98 li
562.496 109.807 li
cp
f
1 lw
564.097 83.9141 mo
564.975 84.0054 li
565.816 84.2612 li
566.594 84.6748 li
567.278 85.2329 li
567.835 85.917 li
568.25 86.6953 li
568.507 87.5376 li
568.597 88.4155 li
568.507 89.293 li
568.25 90.1338 li
567.835 90.9121 li
567.278 91.5962 li
566.594 92.1538 li
565.816 92.5679 li
564.975 92.8252 li
564.097 92.915 li
563.219 92.8252 li
562.377 92.5679 li
561.599 92.1538 li
560.915 91.5962 li
560.357 90.9121 li
559.943 90.1338 li
559.687 89.293 li
559.597 88.4155 li
559.687 87.5376 li
559.943 86.6953 li
560.357 85.917 li
560.915 85.2329 li
561.599 84.6748 li
562.377 84.2612 li
563.219 84.0054 li
564.097 83.9141 li
563.597 83.9141 mo
564.474 84.0054 li
565.315 84.2612 li
566.095 84.6748 li
566.778 85.2329 li
567.337 85.917 li
567.751 86.6953 li
568.007 87.5376 li
568.096 88.4155 li
568.007 89.293 li
567.751 90.1338 li
567.337 90.9121 li
566.778 91.5962 li
566.095 92.1538 li
565.315 92.5679 li
564.474 92.8252 li
563.597 92.915 li
562.719 92.8252 li
561.878 92.5679 li
561.1 92.1538 li
560.416 91.5962 li
559.858 90.9121 li
559.444 90.1338 li
559.187 89.293 li
559.097 88.4155 li
559.187 87.5376 li
559.444 86.6953 li
559.858 85.917 li
560.416 85.2329 li
561.1 84.6748 li
561.878 84.2612 li
562.719 84.0054 li
563.597 83.9141 li
563.096 83.9141 mo
563.974 84.0054 li
564.817 84.2612 li
565.595 84.6748 li
566.279 85.2329 li
566.837 85.917 li
567.25 86.6953 li
567.506 87.5376 li
567.596 88.4155 li
567.506 89.293 li
567.25 90.1338 li
566.837 90.9121 li
566.279 91.5962 li
565.595 92.1538 li
564.817 92.5679 li
563.974 92.8252 li
563.096 92.915 li
562.219 92.8252 li
561.378 92.5679 li
560.6 92.1538 li
559.916 91.5962 li
559.358 90.9121 li
558.944 90.1338 li
558.687 89.293 li
558.597 88.4155 li
558.687 87.5376 li
558.944 86.6953 li
559.358 85.917 li
559.916 85.2329 li
560.6 84.6748 li
561.378 84.2612 li
562.219 84.0054 li
563.096 83.9141 li
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IDULSB+Symbol*1 uf/IDULSB+Symbol uf/Symbol uf/IDULSA+Helvetica*1 uf/IDULSA+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.2%%For: (Troy Carter) ()%%Title: (figure2.eps)%%CreationDate: 6/11/12 12:17 PM%%Canvassize: 16383%AI9_DataStream%Gb!Q;#@B5JoB?,SHj<N2%U8-4Uk?@)7>+Z<R[!E8kPb$3PAGEKb?!Qs?iTj\^SAYXPK[Pm/Me9:Y;i$]3o.VBEVOHi/Lk<+[:hJ)%QH5rT7%X#FI.co]1sn8A@U]DJ9ZL%&5(T0#@Y0t@XGL1?Q:b[#kf*+s4mPanl.L=6Q6qgDYW!OtEbhL9Xhi_2lN9:aXkcX`hXEaF%`EoVDc+Hpp%]61=?0_A59tTd.H5'\tr6p-7p6\mIZdG`'Prb55$]S]'g?hJ^iOId6Y46muK.hMD=e'V]SWd4V9cE3G`,$4'(7TQ;%f+Tu*1fa=?I,,XHHaA`SL*eBm)L_7&!Y<^Rr:d$ESKdEn8apE_ddd8Z$Zp9GMkuW-^n]edF>fBrnK48D#j@=#a/9PcJ]A/_UH=m(%>LW"Zn/RZ?1EMSQXmu.=XA"Qh3('M5!bm-1ogc^H<5QhsF6Qd>rQO2lb2754KG&Pbdp+Gd&/&bU*\D.s8-s'gPSd%?dj]s8A;j;3%7.QALT[H&1ks'^g<_"&A*#HWDbO0ildeH4^j2b$ejC6](`n,hqX:bF]99=N`lps9u1&:c_Y6??8n:/+IP;KdaNBa3fU;^PZ"usc-%A`sD5&W^+FV"$k@/_`B.8V=)&%A%,f,G`qS)$KpWT1KE+fn?RVUi?(-2'/HP%`k\88\`U[oKbQ7UW#A`bC)G>IWPfTH"uSUD;=NW%,_1WjO<8`@Ymg5RQMs[WM'/BbV1CaG7$FHW[3(Ee*FFs1Y!*Gc%U*.'Q]P?CA_&VM.Rc`[K5tb]b,o6=.1RrM^MCeQ;kQeor=_Wp%R7b<AC_hJc9(Z=bK\rL0:IPkeMB[=LXhriRX],X2V,He3Q%E&9'XUK/W`@bc2@FB-=_O#D_CgGtcmkN=<q$q'KN=o^Zmq@!bu+k>%PY0<">(rm)C+9C*=0(i'=s`X!)3alZq2c31;g=Ki(D3(P:M9nc_,"_J0MtB_1Ooa[65tF\IKJ:='BEGL$%B`=J-^Tj:BXIhB7L8:%!o38a^'0m39S,to5-tC$i$Yn2<oH-O4tq&0@tI.$-2:'g,`n5CPIZmfOjRV"FH'rAnden)I..eq+tH3W-I9bj_/EujnBhst=<[,7%I..e5!H_lNi?t$RHilU,'u1&=aXRoQ+a><n_haN]@-3]&kaIY0&Ze>MJiAQ'!]cZ3bacn8N(\JolU>"(J'\CmUQc)3_:o*-neC#7%T?rJB2o%q&6JdEgcj$07paB_&]gFJD7Ng2TBpd<UV)F]$TbKg$FC3BP-$UfD,?Q>R'"l')l&&<iaP<I(*M)gthC$Xk5;I;c1C5q&%2(,mW4]Lr96GMf'-gu;-FLS83MrI=)I6ubSmT'+9[oF?@4'c-'MIgoN?q(ion@"2`3`e@L3\KZ`]ZKabrWg1E=6/ImJj>p+^WA^%%>OYGe:&]EcaX$[OrD!9fe)[k3S,CH?aQH6ONh)=4'aj#YqO@C5(<L4^2u2Y,Q-85-of)\JWK>HkDt8rfrXjShCBm)G\rtD3'D[XG%',%-0Z<Du9$CPWh?%Cg(Toahtkq`5j$f;9TC,IHUGN@R*;ErNT(".gQa_uh<o",1BXoA(iaC"EYqaCJ;r,(.#r^.p)H,4-\+oV\l%(-[qSGZKZC)?(guPBY,)pg3og4A-%.a*]roShm/aq@<HQUkLXa-`#^>ne_3Ns-%@`55!D&;t?g=1\s"t&V?n`1PF:%ZR(*`Q/mko%DmXEH<'!V%)qL:_,44?=N11MqcR%[kWpFZp[\eJ9p*8TuBa<r(ZP0#9T.$!4J9g]DSro]D`Mr=1IIX'0RIlVm'e>-f%s\9V,AR?j%d1rR@d:[Rg@HM+6KJXR#dO][5bai,Q`Y8OZO$)Dn"W;3:D:1@G'gc?53n4Y,$2P%g"[A3kJsjNFdeRRMK5o#u<q0g/fmRs+FN"f8%/!NHSDfcHl$S(T.b$l3fj>3WRqO-8r_TrtiUTsRo=sL9"RF-FNkafGE3%gYf$5`Q`_f*>Z649#IMNj=g-s#:kI"ok%E!PqRcR;*C%Rd=K#1Ku9sk\i;]F>f\d4:->13u%@R:pE=;O6fi]\Onr:GJNB>6(W@i:Qh-p=jXiIkCh_b_Q%-$ll;GpOpY3SYL0o=H&-RmA3?)e%N"G4&*\5AcO`<m!+?1aqZFdN/`I"XVpEdIHi2$u%d!A.#1s?g.'H)fDO9WM:jV?n!hdl]Lr8i-FH_2)\V5h&$lQkq?OfUWu+dinI%W,%fV^j$o-0o8C'8Y2nn.#$"_;Fd70VbH0=O='9pV3E6?nHLQPLf/n8Rc.3OLLB?:A1g:<;)uIQX&?PZ/''cWE0FR'W*#0T"Tf9^%"'PTeCdCIbS#'(8O.B;&7"J4gk;!dPpoI@B9_]Of9QW4nH\(Zi6AP+]bBsk5MT3pK=eS)n;_2J`nh0&^b&3C:Oq&.Y;O&7j<\d$d%Qm-)qrPEf$/d*[q5:NPZ$7H"$+Mq#&>tn9+7$E6D?A3[@Dp!?]r19[>.ck7,CfJ]Wg$;)49=3>Lesf_h]r]EhpSZ/PKY%ZHl*-&q%!iOJ:Wk#(7USH:65V7Z3PCbhSAXjs0SU?"&+g6<[lu,?k"/R-a,sa1SGXJMYJ:ui2/.Kui+QGRQV5I#'F:T,NY*3jW+dQab!:7#"%QXsf5_X!*Q<CYmLY*:Ll15o&/b/];hU"k4<XpSI"OT^ni;Rl8S<'qgV(p--!Pc>uA"Bmp2MK2Z3H<>*Nn&c2?4\""5<1%6W=Ja_(%L0I"OMCq_"TH04E$5p.aJV"d<W(L^*jW+]P-)JpE>t`BbPr7JUFH>DS$L\3JdqOA/PfZZqo&OYnY#H&]gk!U!\JI$q1omV72cB3O%aF"W9!Kb<$TQhZdM;?p$O0i7o-\Pb.1XCs365iEa:-a39/40[.QDX8-DcqLQ8ee!]:q[@b0M+--bf_gu)"W1b"3<'qYMjcMlQL%H%<50SSN+a<UDM<;88=F-V$6jm"m;=(=llOT8BFKQ4&h%]`)2\UO\%G(>8lG$_ns"07AS+2Q@TLF9SYE$fqa@j##d5@8<I9IcY\:ue%3sWY_>m36@'N$FIdM:\>-!@gAFeFgm.g"1F<S]\#3\,!(j_M,WkF,DbQ#S7jSY2Dujm7*(dSC2Z(@c.uodXOpH5A9ldoE(I&tgAE%$&;N&48kZt0-kWLOASbK2&;nmE>^6!0La0jQ=<tY/HtNZ,b0j-nhRAk=R1Xj.`e"'@d/qdN%g:QQ;C!@c6NDu-$eV!)H.VS>u0"'%W)Z4[5*>j`CQ-*,9Kf]*6F9@4=]H?S<R<8E<P6pUb)U#aO3/6+f2029-q;SnA1N>uV2B`!atg7AH0geFn0",l=emWG:6F+BBG=nn%irrSO/(.e5/bCr7Q.irP=XNX*6R2O4;[gNHQF(3SM^5XH'IaAO$fOXP1sYYk(-7=gH0/8H8O/j_dT@/P]UhC.mVdC3'Y@:T]N#5[%/!^@I_A2l@/Ss+g,W\[lJ2^Bi4Vf4V0/,:WiDbOSr!O>`"@>OD:huEo/nF?5V9D#pk_1J.>8Y\Ar%4ULGWVaQP41QU(M#/#k[60Z%F,4%.m8UMe)!Y$!Vj(rq^Zp#^rkGI;;9hS+^</t,q3NtoTr_qQ"Y.9d%-!OYeWm$j&X<E<T.,N((f<^jd><dW-0<*nL#PqfW@:i2%,1;P&AJ?Ua]9q^#6uV%jW\,T%C)%).r%<[hh64=QO<n"ujHShlD_ea.rN'1RMP`tTAX<1/Y]a.bGZ>h3Hqd-fqLa_kC-aA=O,@#X%qnZ[J9R$[+!M6([(uAO<$U#AmrhRu7lj`e*cb-:IP_rod<%2>\Jh#:i.Wk'WD4p`UW0XRV9rd$LX![F:78Kbd-@Qc4h$`R?>(4HW%*fYZ/X"`>.U?W3qB*Q\.Q.f`8dps0L;ARIB%/&6gADTbcF#?<I7JP+a>t7%@aF6>+k<NlI^a&K.`icPm'X3TW-V)=2X@(A-_p8Wb%<S&e(beC%+G):[LdMgfJ<#TFu)=";SIK`U=PZ3p9=,DEdoRl=bn4<FV]ku7cV),<tqP66^/9eL@MHMMQ@I7uJRE0;&G-8uSM<1JY%/Cb;3qk6Qk,-PZCe2F6&L8!9Mh6WnI^a$o5]jI:%%Vf4Jc`2l[SNNTP8c=#-5'cg>lA$JpR!JnCIF-=,ht0)&2r<ErmjYjp8S&dm%Gm'%Im3usnE^!oTB!L!XMn`!Nd/In$Vj1)&"P)'(CC7gNX.$#(MithIapq%C&s8-TC*]&@b.:#mE)XbT,5Z2A:MEu.B,&XBqbh^N%gb,SsHK%XChkQSieujlDlBbsDAa"1N14%BDm#i(%$0.F^oH-\*FDMsKMY=m'5u3n>)aWFYe76@r&t2u/%%^IG(;<A_4<dp+c7Ca;%D^otqBBfXu2"[NZf2rtfF!AQ0Q:DT*gP2dgCTV>^H'Rq8\k<cD[Rqhme^l54Tis#/CdM>*%cL"?42R+_IR=#XPc*d\Jp_U9cA6/E%j=__%=hc-A+I)<D2sGULC`CI(P%s`lDc*N6FV3u(<d"emMeF&1<tghi)YQ2=2@-^p>bC5mP`MZae=RrNr!=+5oPOE+A5`-r&]drM%8>//6C?[O[hC:DhG#`ogIK?4l*N7tSS8_=D;7-j5QBM"+[os_=ol6rF7XLk>BRLfc3>f#Xd_&9"e;IW;on`BpToH62kWm'$q5Z@=%6Tj.W`aYKuLV;XOH)CM!T3P";fuWdK&[V#"fl/E8\q?'8[$FG*5K9gT,`(`C(HPi9N1N`&Ke[ln0=@WO\(>E7/$8M].`G2\h-NU/%T@.>CppKZ^M_o/,hVtY\GMJe_hg<ednWqm`]\gSs[qY"<Ia\ssaK#sFWhd;]-/Ec:RkE0eX0`c&mQL(`BfdSWLJ6HrdWS0Y1*]M+%V!1QilA<iO[[l!iLGY$8cibXDhF@:#:SuRM#>e*i2M;.Ohe'Qn1l[Q"A&,nD1QL>U[g&D4*l?>B#?ISU3q;o_oOltXpmf@%j&S[%%d)n>9K/-\J0V!<^pNWAE5FqFMP>@81eYkEroXfaDg5,b-,7WZ2RJq!J>W_e/3:=FPW2o>OK"q2b8UK$@&%"V1I4pZ\1Qs-cA7t\0%6!X8qh.u]RT8:(im8ab2TY0sS)kt<BT>nn[/[a(M:4(Fd<;f3=+n^0;&O8Mt[G"Nk5Sg+;':\p#&g%17$p&&oEN,"K@7!F3`gtNg%Uegn[rLSDil2K-8!`>&Vi;?pWl[@P4.pA@#LNo\@V^V/VT5]"Gpj3eX/<^;W3Bfdi$p-]sGcfMEp=>['aoq5>e9(OIS4sQOGiAm]%6n?L="[X(AATAN;RKiT%_3/S$C"+8b:._3ZVEYF^.;<cr>$SDi>a%Yu=K0E<)e\"S$din#a$B*'M)9"UnV//jRd=]`r,XdkBT6['%?>DGfqf"NV^>nSrHI$Y4_1A`1KBC]pesCDm-g2][m_s"B12%1AbWE;b<2-@[\E_,EqK6%[5iQF[*_8eWpX*m0Y/W9^lH`"A4=Z3A%VSV##4RuQYrnbI^O*lhORDg):(?5\bda,#F6Q]4rmbf+&]'1;K.g)Mc"2p%m(6B#RnF.;:Fu82,dr)5<l+XpQdG4UY3]fMD%m.*U%i\t/mitOI#l9:DkTD#+Bes_B?-KBoq_!YIfZfu^MKO4FTSjbON02&umCJE_#ns2OFq7kA96Wt-9*&R)W9d0\r1kIh]d+1Tu4@:V0%iPM1M&Nn/lc[%D>W&>^B7ZG7]ck@gLL2R\k&!@5)9rDo:Lh-eB!qI/m?^J+e</S)pUS)0geR!#BXc\D&Ac.\i[XYn?]ar/3ol]hB%Aakc1)ig;'Q#G"R?+Xs58+p5\oid"!GR]/+oR,.WZLt;QE2<30IcmA&Bfm8aN;86(:,d\l"6P_uJQgOK[:0Y$fSS$8q5BiDq9H^h%b;KKhO4T9Lg#R5AC,kQ/h.e#\]usdCDk[-u(ul%>0K:'a"O2uQ2pdUb(f,Y;.&aQL#jC5cm_.+:=oqa,\o"2C%%\soO_8P;$a[M6%Up&2[o?A/WjE=>1r.C6F^/]*%%E.]sL_):b;eJ2YO!(-1mIIS@P&R&BcRNgXWH=L1q82^TB[iLHB#t]WKUMg*@`9!F*$@ZZIosl;%i!)Q%Nqc2H0<IZ*n]PelEI.JG><DN1B*f/!E7a[-r##(b&,L6qrqJferF_,QerJ?'T=M?>qYKU]2nVLM%UjtDSi%dAhU-7o\Y45X%?Tp^RQd8J&jms.8q>:l?H@@<4l+o3^@Q'F41WfX]>`ui@<N4k=^%Ccb?KQH-0DhfJQi>f=/H*27=Sd6bYk7B"@HlZ$_:$)&C8??g%e4BUWWKI29;Bu.PV+0Tk99%0aQ5Z1K/N#;u>A@\t\(&LsDQ/coh,5Kh];8!ZG>!q>n!4mFh^p^k^KYG`J%*qKrbe]trS:?rqn&[o%p30/hm-g5Yg#"A=ZG0FT4JHauZek?-cBX@gj7.VD)Ag\3?#VuChIP4433+guW/"Na-Xp_jSi!!1Gj]3_Nb>E-p^TZ>pKu8%Km76I%cWO,5"s(t5M;/^.Na72r-ujl.NrF9`4<isQd*;TQ^IB7.^,5(ZSh%KaNs$=Yj7G,O%/A>kd8@%9+8e,J,_XBF]R_+/:_.?Dnap\N%)L'cdE517uYVqe.5t#.qAh'2_PNFHB[:T:(pul8@Omi@%NK-+b,1k!eKGglqrpBFaW'M,H$kN`/pPbaEe*>3=#$H4rp@7e$8:DI1%N5mLOQ$*@[C"hhpA1TqGI^'4Wdi*F7D`tVjEUk%qnc*tHs-$R;<njuG]=lKl)TZc;>CgM@R\IXUAlG(1"@&?Ql[Nr=(,0%HB)faV%lPLo7N8^=!mN:2?#.=`"-<dFk[RjD0cGKVJ18lnN0*m$f%(Q"I1*-(<.sRLYk2a#p(%d7JDrB,gGX>#ao_T1fB5b!r>@Y#L:G;cl%Ye>2L<Q+h(K9(`GDc2.Ec17>aJO:\s@@t44kPpqQSFjD[s"D;4#39ea)n.,@ZhLYV8NZ$0$)7E9kF(8V0d3#T>4I<rlMVWIVmE"&%MZ7c[dna2Pdcj^^R/n'%=+MYnhE[Uc6DRp3s1:Pmf*Im2p>F:jfmaepIuL%G)buLsFX4Xra[P@#^nEV8%Yqe(Wd+SnM6o^gl$p7J%?(Jo:dGu/UKHitk,lYjeft'\@[N$T5BK0adV"*07gRn/CpIS\"4rNBi!jfVuKgp49lVSbKNAR6"f''+2_W.oNl-B-@C=**%qcs`D%D$2EWUsS&q29!gm'1LO6\c?CVB4GX":"N@8;IBKnNa%.XW.cq[re#acG0lcZ/%60PNq+B-H9.OUB%+/G(1]aTs,4^&k,$hqi4<*=%=!l>_F[l^O?nhVm#3h@>8l%R.,0rdNaqtX'rC:Tu&ZX_l^"/i..B(7)5]M_!=DARiNm,0$V'?Yp=<Pf-cQc<+:HHB"YtR3J>t[O1%/k3\1YWJ5(&ei'g-s3?4-WBG.7_RBFj4=!0LPs0*%P0[O:KY>%0RQp2:o'ObV*j;IB(-2-G;[#U"656.%4>G3%R9&dh1aGOcjCEk%*=0697q[dc.F0jtAjg44.(tmLK7@'g98.,JeXRl,UXn@5f(tKZcA!RbE7.Yn:Pa/kO0j'VrB";cFLorP>IW4TrimfR&UeNkO#.o/%=*-4,.5`aeB2cm;?(7QsS@+k\a2;i<<Tk3-1:3^+8+T@3_*V&Q4ShP?+kf,t6(Lm:7+9.%WRk(2b9sFGQ&m2m6=\fRg)COBVsj'f%8T&6+:FmMVXgWh0i1)-E6e_u`QmX]C$uaOtW62B0!&SHEZGs+X)j&^/MF'@h2X)!d<i0Wd;OqSIR7Wmm'fT\OS$BnHjkm$]N\$W*%!.h@k3KrEq1_/=a]UiQr)dg$X4iJa5/1/8I"hStddPn9oGOgT8-#Q15_!bkJ#tH"$IO-`b61NBIOj:Q%ibCG^hD`?/deot(kn5%X%3GhJ:laQ@M\po\O$B7>AqR>0!:Mf0kJ)sRC%gOjiVR&jI<fp0>`X-I2Q;TK;['Q%:1q(o^iZ=Cj>I>"/i]<Y6X:Z1YnocnJ=&=tb%!K.*S<7NE1VQ:Mo>]$mF!aN6Df,-lLCMcZF$IjgKQ:ZnXW'K`?:BoTX1eG)7Mt\Mo;ZDk5nJfl-3UapScO#H('u11F[7#qqGHFt(%DT_HS>M]9QkuOu-.e:@3R`Gh@RYppdW#LpJPG4E][5o>!;DK+!ou]\'f9K>?.QYpM`enJ.BWMq\e"NL8lTAVI+?22N<&"-D7Ys?q%-D*1G4Ju&tW9ptC7BI,8U95g/4L]/)4W(WBOlh<jMBQ!l[UC6EiOC+TjqhDWIPRG)GoW4'i8^j)(]PDf`@+cKM=[FqM>F(TD`q[h%nKs5Bhqc[!g1B0mIDNl@j,!n;*F!`D("F'<=e=hFmjO`R!U7l<1j8gQA;4*"#gbOJ^-QN*)IQWBCoC4mluMJmVaG7d5e5,OW5Oc2%%bE4=?/:BsP,][Ef)8\8Tl'][[InlXNi.@:s&8B0oH'g=AqS[UJC`h=f&.GU(`4SlW8HB@c)qM1WX5r]*FP'GbU!-4Pl=<`fTp'c%p4>/<9l,$5d1/<A=R+,Y#]#5t=K`-N@_XV]Ujg,d5D\2.9=q./ZulA@b4a2I@QD[XKsnO&D'nZ8i5s\+%QdhkMSlt;FBM@=dmQ8r%IB-op)0]Jn`\r4iBTJ3<qVO$GLS`;crB3'.88*2^iT%kH1U[*7C*X=fT2qJ=C"_qSq:6Is\qZ"T,t1H4>fSI,CU__265<t,S[GB2%jmD<c;fM+G_4"Tg+c#OBScrUkD>HWB%#e=7@eGp%3SP'*&JDU%CG6U*e3W;>Xq>d]9Iqkk)U8P(RjQP`6=;il*.2QEs,LQgbLgJ>%e6k9$b\S1km!<=Uc.<"S!/I.gKAcfMX!r%X=H4]:<*_5G;])q?)!fh,aI0CTlWYit7+Y8q=#;1Q&QsSK`CGp7[aqls\?ip6-WIdE%XS_>R+FI?kb=2b];]M`Efqo9!HGYPOUNQb(US[fa%2mJ;p=9CB,m.g9EMNU-bXZt$9Oj:>S)-?[2sKs(j7f5klAVT-R]0O8AVb53%QFHuO0M?HSj1+neFjW3_4WTP&[tX_CFKRZG(=1:[6$$Yh%U(BhG0j8GCLao.9ouj8fS[24h3a&D[:ot_D\jk)FsE%c81]Fkga4?n%9`aZQn":FMLXTkhr`aU#DiODE`^]IU1!n\(mZ`Sk-Z9RDVM[rD0IIEhCstiuL('E_4mp6R)=Fn%Z%!b%ZbR>5Rs'.9l"DL+;4C.h%4g8B*Us5jiVIotMCmHnnocuSBgNK340TJBanUT?7r>5h\BJPa3?*#2;oJcUdNrMa8&SCEb@o/h8G#>k1N[\QL11AoQ-7lO#Z?nEu%>,dabV940+)!'7oMe]dtaJO")PgLA.1fU=-RiJ/5eR:t:F?]tQQlM+*0mmYL70q9(F3#?,QoFo'ZY"%GO%!\2^C$4%GJq<YCN"^R%b$u^Ia#4>1^!6`g,m?ZmL`1F5L`:+T;DO`GDTp0H5%EDJ&OppQ<CrG#Ra.2;>)G7U`h:RQlTn6+jP\U@VkQX59TR<&-T<-,3p&ds%1O3Z1SV*M2>M,<+-FUk/9<_9hnR0Z>?oB1VT%Ynm<g&`E2sg4YNQ[b-=2mO+TT'g*'k>p([f2DLd5YEBM\iaLZgE&(=\V93B#VQ1%,[1J#"8&!/%c=VMJ43eS/2\?6A6Au$T\&[>nhhH5hn6q=Gka62c@8SXpe+0ESEE<%_7B+QI]tEdYGT;0Ha`WRhmh<UQ/B.L4lrXS%hRuI.H@t$[aW%d9WHrsKaQM/D9K^ID_g=90<am7jT&ZLWq:!qYY5Wa/LP]QYH`>@]=W/)hQ14=kD>CEp]qeHIhm)r%=jKLLib%HN%i9%aM:VEA8?]T+uqh^l71QRS-'lq3f[hLrk#B2n=Z+fO``r-]eT&2Wdi5n>%9tcH+]Y;G!iE>R]?obqOH_]B$^r:Nd!uMGl:gnC'%-]4T1M]"75H:[]NG+u1j@JX$c3pKYHhNUXmn_W\<+Yl)=fK[STp+l<3gK8UnOLXiU.c[E3Y5D,0^T-];G2!;0oO']+`o@3'7`-1i%6o3\=3sMo3\2*Pj`>`N7P%_tOHf!\ffEKWR/80m]"oM@g'6u'80_VgFbqC)&'CW9B/GStjbA%\a@sIN!2'K_3ImG/l4g),6?`%3N%9uc5\aj'U[QT=-dM9>ll)piH!k.;<$cN=4?)NXE-We*-X/qs!^5"&_FR7pq/+n2.]iPjooCs\O=F7]"OAC0/ajA0I-WIoMEbcib"%LGQ8&lPmOHpk/+045S$"`m+IMnY#'WIZJD#=*ct_Ji13s:@+>VRbHE(GrSA6&":"Xi2XcGWB)GZ73-QbqN]_RLtcQ3K6#N:G278e%/Ko+@0cRL[nSttjptck=lHck7\pEtA(DF]s<V?*-nt9WE^MZcbnP/op%uLY`Xb(4[Z`9)HkOK'OE,^8+'@2MLloJlDkbrr<3iL)c%3oRM+e7#b;[`:$=rm#c8P=fNK-T*tD)K`8>.TY(cdCO!_.5),)#NJ)`_>E_Fn+stAd.M-(Bf[YAo/\ueR_YBGn0Km4]ZHi@9s-Oi%\hY>6[^j"m,^j"Z5s7Cp.Fl^"2eE>uDah>oGuZ@jhc7pu=V":*qiM0n)U])[nP.U#bs'sal&gGAUW1E^4Qq2MTS#(lN5Zis#>I;p%\YK.L)@m03VLu:]50Fr%[kibkT(\tkl(Eg:T2EO?:lc+rq\\HJO+(\1YYNa[`L!?72=ECBoW$;UQk"FfS@X$cK-FGY#O>lf]A[)%%`e,=$2m,3dd'ho+2_VcVUHoJfL1,!%;KHB#i5]?q2OZ:f$sEtpmUsNc_a,@g="eepO>$40I]Zrt'hnm\8o`1Zf<Fe<-eI2CSF7_t%)\e9`LOFHYCRQGl.-1OQAqM.GYEblgnY"EJIf4/1hXL<!?lb;(U)WZrDdlPPBu8P"73mMoeu(C-UreU/@Yo_',O1q8'Jf%>DW']S%Ejq)6h&Yf-9l>1tOU(j1L3/(EhB1A,nXr5=So8;q_Za+%GspF#L5jKb_NQC51o71#<@a?<(`>.PW'iIp-9qI"Yfr<Lc!9KE%go)Q%XAB8mAkjCUd.mO3.Gt!iID(XF4n._@oa8[e:O1=BGt\J-f5S4iNHH'pD#X:p8;gl_?,&RY=M,eGorQ(q'rHD_O;kj#4Ip>7`D1oY%51N916kF4(]qf3:Fs8n8`,OKhH&Ateb0F^T4Oo=#b[DQ9\YFRM^sD0]r'R&;]#Z8CSeei2c=+l^Bo+qFhIajo)a1BDVsVKXg!_9l%=o+_Y4FN0-QT#jior/F2O"p';s#=E[G*9K2rksbfmWc;4baXoj)Y)lLGB<0---u6'/V1::Ru_7>m-,++]9t7<4[%bA;jA!7f_k=s%mU7@=D"dLZHbOh4R65miF3e4^&bW+5@o$7qja(,fH[DB#VOCYOVp-q<$QURRSmmYd!ds]A3&Z'ZD1aKZ]i<7J?Lim7lN\b4gI(u$%>NhMbX:s[`^CI`3T-dnL=5,gc#NM`!jNQp#*ajsWJ1R*R?&LFG;Xh]kqg7D7T(`Q?Sp)Q%n7DMS&UXrS#Tr5!:GKk@cf(G^rWVo+%'Fe?Hf(.ZGd('K"LQ`Cg^%QV>5/oF[4@qt?dqh.lo0/4R5<eb,W`T#g4Z4q9&!`\&qMqVBMQq?(</_oRd>O>9C7+mE0H6.5a,IYS%qGFkW4u%5`8%hDnm`1AE"$a(7mq15-6-T"M8$Q2Uin`G"+PMD4'kHanc8<ak]Iru'c_AqA3B^uA2*5IaBs8c<Nd%E3b79uN^G?sR%^"S=4%a%eTMWYngcOPjIj4!F9bA>O,Ma;.+/2LsPCMQ9X'Wq?[(S3%mME1kfmQQ]?l(GGU#/0='G0n1hVE3pcp<(E4EaLmZVDaW(%OYqu3LF;+J'DIQbK7Z!fm0feq@b\_@:p:s$AqN_@TOdM0ZD;S_IV1hmBI'J="b!1\1aq4GpZHUu\rhol_rJLB3mTg&\#jG$p5<A&%`7'jD*YZ@GdZ/8Si@(Pq&!;iEI2@7\)7%cjO!U4j>8K`0rt4B[(KB5\qg@InO!m46=]8]$%ums-j_K)@?!K)?_nECY+\WDgq9+2P%28Sbe8Y6OnJE=FT'khlC;e7juYT'XK5,Rik!o'b]T:q<M55@_7NmY=Y5!%3gZ-6:@-T)*5B#8m0+,kf#L%ce36\6>QoBVp5#QdDF%,n0oYbST<3;V;:>&4,HhL2KVb]oOP;1btR8RS>(pI`V<FN?!QfjYIY5Z5:dll1g#B+1B9#iB-Yb_hToM^Fj>'&8Bh<G3dbML$7TS%4iG-kFafaWPXRJrQK.Ym%dW=WnW0(^bG)>!;du(Bfn/!ppS.m@Mj;ANZFG+-rI,X.X*?QI;Is-=@\.Y[)&1uI4S(iM`.i?7k<:ZL%%%ok(`Hl'5O*3B1!(Mt46CG-6o`V`X<>soc4u1[Ub.7=UhN!*,\2-0$!Sg\HDS0RtgMBq(_oDba4F_U_$u!QiZf(o7S9,P$g)C3>%7`IEjSb5^N,-]uI>6HEchYpF3UriAuJcI6aN+b^3,=H#O;`id_l0=^K.`[Oq!j^5p@[cFWRZjW#ELCh]8u<Ar@:sKlpRR`=3dsKh%1!RFZ'7Sa*4+k(E_#`)JpV-0$2J7K7lQ&J0Y%2c.LDmY%_XjjRBYBp8m`Uei(nE)gpp=:&doiI`OJg%B.r6^0>?1+)'RMY[f[Fmd%/^.s$&jLV,<9k8Goplt)o3/&n#=3LQO:U"tJfC7X?/M*BX6RY:?!WN;G'uG0^:!4/0;CZZHiH1n[6rO5>JS(>K]5Am^e@cYo5UMQ%I:kK4Vkbr9\pcodjt$5?BrP3N3*ebA0l*'"nc%n)32tH@2X1Y80WmM7P&=OLMrBunSS88M&jW2AJ+ruuXU&EK>2;L^Hd;j:<e`=L%7rnp2m+5/60[m]WS`)%4mp7>6CWC*H+*B-sM%m9R-&`"L*DU84%b,9TcW!t2!.D&SA636TAY=)-`_[/6@Ro5/5!1U;NFF-eA&j;V%VoOdu.3\%7@ucNP1K[>=K!JabVP6c&\^dFFLhqp3WRu.j7hZJn-8MK'g>Kn]gZpH/glJ2IkX<pBDdk!\/1a/9UoCr81&8n/6tNJr%F_IQGHo2HOBN:Q5@,fZISgOWD\IN,f50Pq+=2Rf#TMtF6GZrIiVAi/a!(:=qH"1Coi2^;)!%dMc;u!4u^Di1R1mK_M%a9"u'<3q;%jR[rn'VYhj?e&-feYhA\`(rN[6c6s_-:]simHMY+ZK0(Z6Y*a_iYKVP)r.-gS4AlgMoY=O1`O)WTPe`.[5P;$D7rU%Ao<%QhF"S;%4XA%#ej$CCo3Ae9JWb<<.'W<)fXkZ+BY<4.1pZk6cJ0]D"#5:HFmRtu_0SVjc0PtMXP`1@NH-i)!CY6bg]4.:WV1e5Gq#'B%q]"*%^4>)Gd#td-p$#V1`hM'oa4t%>YQDg6%^RS3.+:^%4.GM7Beb,)F5T_;]S>d$1M(lS\?sQjbm$qD/a).n'0ap(5qPNMHnGQ\kYNc8%(Y^V=leS39Y%0uaUI2`a@nq:hH_Z]qma]HC-NIj*+_BA!/B\#'Fja#0?X+aD-g1sV!#9VN9O-.\NNf2.ASpOjM(VFX,sN;p_p:_J%TYF+_]7@H(gP#r\G=apd9:er/cMH,?cK!mi&j!An[i0Nr%4hn:fn,]STgc>&GXjmLP#c#AJcVb`%t)TqT?sl*#PSl)pf>g=`4?bG%dse%ZI/dB\a2i\a=_rr?Zu5DA:t7L)DL$H&ShVdA_LT5GMAscJN4,D^E<Gg<3:npej"jOV!.fa\8X+r*WSqLt--Q22O%bmN:rgt&%)V-Y`NEMV6<H,=7Tb0fD>-ErH)X>NU8+ZN"9e#:B"WVCM/ZrLM_a1pE-ZZTgkG',(cA't)\0!(\`-sV!ber8i/++d&C=^EiLZ)N2%6`_o58?o]O$X5U4fV:fF:lUJZ#C7iH*FSJloKcdH4!tDEIfN\>%iSpsD;8GR]=W'uAAN_7`+Eqh[<cU8X#kZ^cBaE<^i;Cr>?ZCI%l>Si&WbI*SCm]e\NBoes<I;ViF=/:@pLA,<H^s_<(E[:dP&'bTmVHIKC-N?C[BM+g.3E?-+8r9/^V;XhKl/J+Yd)u1ZP8Ip6"c,?%pI8G6I*51#GCD]c$7XP05@00\6iAuA?L;C3Jd<RUcN9+f9bo,DLNbB\bn_jFktcIQ%Dht'bfR_,+K"F6b=P&XOiOGDk`f^DON&"6%>_"b=&e->@%;C:fL5^i:po6neYda![^Q[L0**_lKK32msN27;s#NmKQXlYO`9@\\Mhs"CtHI%k/E&ug>S5=mZZ!\3%GP=t*OZ""9%@IHuM'hn@&7[fO^23#;1B(fs(Lt86I_<*5d`)T7\6>&3NKp==BV`2uUU-rgJZ2=2G2_%;L@O3nJ\)okVd[A3hJ"'ODhm*s4S0h?5%lH*"ZEZD.&HJuAY[:r1Wnf!V%=\_1s]pi'/][<-IWnGYqQg3,X=iEFScJr,'%\7_HS]A4.*'3Bo3ddjJ$?G@31[)4!JrAg==_H*T%rN_S+3pR3c\ST(cF6K\]khtlh<TMM0B@+n7$SIf6B:V>djM!466YDrUa&q=ojj;-1Cm%(smNHS:6YDrUa81uO"-P7ahX!U8F><:I%R6X!6G(>2oWR`SgP[35@n^(-ZT[q'b;(c#kfs)q)Z)k?M9q2<G4M>BV=0^iK98@=oNK\'r4R'.f1nd>Z.cVD1b9@hJ;*<\t2&Y%"%W&$NpF:=e32ok95I3b@^p`,Bma'%i1mP)]KPh=2M43s/qSnq<en2[d[d[W+FIArTgJnQBaD%`dB9au!0:_:=Z='<O[X922)BJ$"/%Cd<@$E9^L`NJ)sq\+sDCQ]=@&Fb?g*S>R0dh4-I;4SHm7juU8p",E3MS;`g?K?P2W<b;WSYuuMkNZ5Ir9H/SkpEg;k8qaUQfF:W*%'4uF"f>QmDMsWfoC,uWoFHBs8<S="]P8C^q_$;Dk]1Ir*<@f,FT]nqQDNYn\VP7!:(-Jkee1;l7D&/L&O)Jd2:,pPZH^WR*^cTgD%1X`tDa9lWki6<VqR3oa0:+[_4pmP1kr98o$MPg4GfuLlicf=W->!M=85+Mq"@:I$:Ht/@Jj+=RS$r>+#1CH.4g#Unt_jL8a`<$l4%O8!i-UpqDa[#SL6_5&EbrhFA2X0WjlHX4'tT<oOmap2GSQF?U0-=*hrQnTL,o+CG/hKF*me6Nr=S9hg3r9g0=D0IqhS]s3'Op$_^%DR&S<Do114NM<M\W[Bl'Q#jZ+F!i1J2NMR0S*bCL+N$/hc*;c7N'MKb,`Wg&6\grh!WXO:!bC4.f7ic#b%#j#m.9:JlGCb%V.:i4%?+DP'dc2l7L9t4+4<r!D`Gho>I5TgKGS>K6iG!'bGg\Tr$mLLtilT?VUE]dicP<7&\b!n09aOI'S%FXOFD3obZd!;1`@UN>as1C7%SZ\d-/VYXT7qNQEJ?$;p"&b:_iK<@HkWCVY7&c$4\\P'mNsqm?6aP`ZAKI9=_$VBB&86oN[CtmGP_QWJ7g<T6*mBq1iI`sDd?J\(%N)\R0]S/L(WWsU9o3A*S==!&PgusoBbUD.APXKn*=WSSuQ"@kCE@8p"U&-6]!tLMV[u'[!C1rG!la5R)&*(g3F6F`ef&Ik^/\#p!%(mZfj2hsE>X0]Ar9[+?[c)Y%m#?&#*+Ks'^aGFb?ST,!n5#^)t5Qm89bV,qNhRsi`;AZ?gGbe\rP)?u[+U0/WB4Sd4?*641cHOVL%g3bl8pQ$no%nF;?g5NP\BZrR\c=M[oK)'A,EIBekDUnQ%94\JlN\[ChJsn$+XX"u`a[aom`$mc\7JUoT%l9Oa\*A?#_cm1CSe(!=%b_TIp5+LIF1HX0eh$fXqX9\82\'#S/*#"/i1M7aIh9nS_,jNVO7)q`<HDkfIjO+R^>bu5VOc];8b[##Cre)*^UG\VZSIOX_XJ-eX%]3,pPD]A4_I0[!!3e<5ErAL`>m=k2eYjtc!7\KS1Wn+I@$aKUfI.ttCR50!H[.DXTs,WqGUZ#^[Tuh`kHdSh6_m_Ha%rF!F[%#V$%#)rG!^(!f==5;-mg[N5(Q?Ic0%IV8.FuZ8LRrasd\LV:YDOWEU8n2)ll";W'&\^%TWEgImOF_L.=e:]1Xth6pG*NrE\#[S@IJR)<%7Ol.o>tIL8l=U8<WR/g<1/ag<<FhmlrgL0/TT-;01d35<+;U<@\dgJ^lp9H\l6spIC:9g5.NH@Hgh,l^8;0u"=;1_m8lFVMN3+YY%FY4ESV;G1/0umEbG';t^;W7+o0pf6t8qiJB$4\gcQUum@r+"$hmZ@@R:^g'9KK#7=p\Fjrf6MM?4uRVmnA6!A!QKQsO+6dC70a<5%k\TNLO?:m!me)nT06ju,.gZff%ZYM0DW_1(*k)]+La!Q#_FcpEH$-^1^)_s7.c+$*4K'`V&`;ta0HOF[4E.QnL(`p@:_s!8$A^XS%Tu1a()_#.L6M^+D-m*p"nTdK'KbXH5"t`L)k[?9h`UCOiZ8gPYI^;tM*[bg1>JQt<gf^/re_t*2c6iP8+^7'/S*Uo8gV!;>8TkJ*%=_66f='q]!KAs2j-A/0R1hfh`%(d>!%(hreBg*pZeQ)n)k@3\]cLgf)Sh3jUcM&uZ6$::e:hn]p:gB'"s#)\h9*)Z68p:*i9F'[Z%cZQ8s45Y8[k07_hQGoLS/n[3neDpEcfJ%k6[GcPf86q_G&pbd'O>aPS*dG&lY[O;O!r+F;M`9tc<o:FCl%Wa)%W42EA"W18*V;=_%28<:d$G\d%Lsh9@hMhZB3+_]DXc+b,OB\7[Ha_I+:P`Pl5NbmL343C0jE?tVZXB;ik&md!XflKj:WY/6n8-:V7Z4TP0d_@n/0JMd%8odC"ni1g`g/jGYl@h=kYHJ.+3\bOpfB8laS@o_VnKMu`i)ApTfbGHG$D1aG\2HP(+jt5nN9I0MlrA"$5L0(hNY5-RPpMF->o+nS%BAi#[17QS"+(gpW3j%[BEp5Ct>=g`D&SN45:7\4ec?R+*1n/CIbXY1VF@Nuh7O##aS'EF&9D+:J.\"`B%3\AVe%(U^MeCN'QP4E(%S9V0lA^_Om=ho>hD)Rq^/tGFIc[shl7Z*m:CsR.TFDPHU94rOR_Eupt7`l1g``J[)B/Co8^8rZNc7##SV^\_jS'FPb<B\$rb,-su%5?_K1FkLk+\TA4On=!t<)0P$`^X?[OSINS>PYGeT9=GVT%(#2g@r.QL3hp1!IHBJMZg$*PW2j$[lrmCISP_![OiXTIVDF'[?Z@up%Z1Y]nCcWf"J4*^\2P%+#=`lWn&ManDY;i#s#T4C:*,5LpS5!XlP%s=Q+VSfd"#)[])h=`ufSU=+1^9TomiE:%:JPtLkIikom:%C7%lH#2@[>PdLX#$JGH7EZe-elePk'1>[+e^NYXT3Q7!iC*RRB1$KPHlf@B0%?Fl>e4?BO+C_@BYYP`05'2=WN:&QrIf$QDrM(15?H#%Zeoc)7<G33M!!`YS9X18RCf;jTcB?.UN`_?X5qHi\^OTG1F[G/$8eM5G6[^jm1SYaE-o$%Tf_uKl$U(><G!f2Ph_S81\N6^$Jh*o%`bCi&-^<sC$IQH/SU'XmUVe<%(H*8KCidqQi<o0-7Y`K$;*pqX+ID9<;(T^LI;6*[F6?k2Z%j\%N]qkZo:0+N/<S4hm&uPQKH*&E%+:dRWqs:Z;S->#UG1)C!fjTT:^q??LR<[![S_^gn\E9,Rm)$>F_T"\(1`?_er2Y^0_V+r^dhosr@[g/[?`5$!d/C7`5?9ePC+gX#%9g>dr],L>D[fS1o"3GA\1>.pd@41#Gd$`Y,=s\(A.'`J=$HsgIIRuG18Z'50\Q]*.1Io$<PI.MH.AW#)Ya8XmW4X*PUXHC'X(;_4%c2<\VHtO<_4`?1HVD@?[7i'9A\R&PF_s:<'0YDRtaC)^UDh\W8Wb)QSnf@H!Q<#AP5LtZ"N_ZWH5Khps5l+Wl=u@a$B2Dc)Z'(WR%1,'Zc9d55g#qs`?k-lN1c:oL8\He_U\6D7.(YXP.&J<<tThU5&=*:P[Y&H=dq7->\1oPB&E2>Zuq*\8KnlCn!):@>^[V.l8.bm&T%NA"SrDSFu.[`0?4`H)o1@?LMqJq`.7X`?m9-J%bRNcJPC2$_^O1pN?R?b/ij?sD>i8`lf8AN:7g\\e:rkKP2p7,4pjZ1ca*cq//6%g%T!Chen[s`+5b/b2o$Qg>+,2iA3ZGE"+'c?!@[jLIk1aZ"8B\8K*d1.dsI&R$`+8-YZ7fco9G5@-2(5n[bC=4ro:a3_ElPms[@P%Pn&[jh-&M#Y3a<nGekXPNIMA:-X*E&\PN^^PSEH<aK+5_a7X<;`"dd".#+V.2EAs#/`(V^Adced!r9P<4,I4"/J)Q-WfOhf<`\W#%FeuU//NntdEa7KK%^)[LW5Fj/:>D$C/*5SES_ouKZ9Rf;7%RQ4Z[IiaRZ^$q@(`6=i^)D8Hcb<!iHXo3*)4F_@CdnckT+4&+h-nI%IdDF!mF[!1#DmjTSD=tpO0Y7tibdqW-i^#79cHlQhjE5lRae^_\rb+@^'ecu[OosU\FJoCAtFYlh@Vp[/'`EfU^il>FhP`lK2n>O%0A^eIY53TfWM)%P*B*nifeseV@o\;dGf^AoUo#;oi@N$/:Pm2Ldiiu)B="d,Wlp/*RO@&;o^3&)cEC$]bAq4*J#SFPMn\[iQ@rn<%DQ%*B<@8(t=QM*SaQniMTRJ>Or\R9bMeVLkl-o-^r2,+,-eE]Odm:\Ecd=8fRS$`9hT(,H$P=pQFS`S7L@&;ZrIJgte:u$<o2<+\%[;D?0Pj(pYPE7![<7!(be0>XjlU3,9;Orfl)3SGhR@6oTD:RQ$#ca9&$CnIOW-.7+R^e_Y4<t\BnLR&.9W+[Nh_2SMXYS52W\UJE%93#RQ>89G4h74SR:XWb+BkWdrdLf]blnYrj+tG6UA6^^NQ"C]'3DWAHG7d)Q-?34liJY:**jeOZZ\m3%ptSQc<AYXN-/D9c0Iba9%/Vd86r'#1%1Z\AUa2VlIQ,.%!0,7D-Zb)YTPm+@dea!),Of>_mlSoi_noWpBEgVOii6"YeH1%G&6>C<Ea2&)No#YeC8(P-C>2q0L%AK@67bbFIfRSl5c36i>HZW\i"GJuSSjG2][g7T%,rbUalpp$T8B,mdK?'UEI-EcYobeg:7i"L3Qfp+2Hd`ebDOJTPthj)@p0W+HA%HtPqFZ8-_2UK`/"Z&rg&R[_Jg17d96<&;L5.\P$L#Hi*KhV?n-?p#`;rU6i`4U2J(EQs_3%7BfF53=a<:s8=p;`RQ0V,#:DUp8tQ%)sbiEQg2d\XYf43fiHLglcLb#)*5+1<SV!+2ODI0B;R&CMdXc;SrObK=X9ffV$ic-LCr3T]hB37di:WrHUqtZ!:<a"ZflLT=b'7g%!%I)<e=Z(Y#8#2"(=*&(RKMcTMO>>WSE9f$-gsN_CmtUl1^DB)QAm=SSE9g?EdgM]J51.ch:]k]Vf1-HJ>_!?P=8ep;*O<'Co]&.%k9>i5-C<):AIu%s_k<o]Mt.`cA6XIZ4u5C2g7is9gB<L9']gQC?fNdUjg1tQ[CW)[VY)I+.a"Z[Ou1^8'f6LGA3P19_/`gGG)#Tg%r>*$bC9F_s,-c+Tlh["e#R;lm)leClK"I]reFdkoVmM&eIb%NtSDOce?.[Emh,$bpoi"r5qJN7nlM=Y=/A`g9W9\)uYT$%C/Pt'F%+Hq`2>E!u&:(;TYY+Ki!P@m=,rN&9eN3/hWheFWkf[]Z$#)GmVAaB1A$$V-gZ>T7a>o3NK/ACqM`.cX#N0B<+9g:i#>sVa\KD6C_%Wo%i"BhmL$p,>f.X6XD8lDd_.bLQ8aY\b<_]hD]rG<,,Mf(Ci_-#CURh:M>+m`!roG?<DBnj%n>UopAn+&t1XX83EXnnPJKbcCRh%pQ-q/f?a:A'!0\beFg-X\0eh.q7;#U!S97t39+43>sE+l4jNX?,ceM*ed#Ib\Y9J^p!X/nCTI:`;if7MO^RL$HqWAV+]n>@9g([%%-/M3OLQf;uejmYp[-]VkrJ^:ge>dtd;3n0HVqHfG<W*]X9!_*Jenm`Y0kUZ4rTnEp>"r9elRS9,e`0lD<k#4Qht#OKYc?T4p%VeG%dY>4ibh)N/<Jk_/Wh6ibb2nUDQ<!l71EToPoik!gg6-1\6Xrd>os:gd\'V6O#'Kk[nb'GrlY"oZp1CG$*hU+YjJX-Wd`M">L6/?&%*j3,F-f_4UDXL9/Wp@]9<Z1\?X?>uilM;C!!NZu>79r,n<8uG86!Z\i@n((B_7ae_Eh;FYqRQ6&C,+k\Y+M7j\XL*YQ?(PfoUpJ8%5AS6"j^ZK`os7[-k>)^,X6XDQ8lF3coOPmO>sIYTIRI3h?e<Ub*nVaMeob7_F,WD^JGiW6ZatV:#<;SHg-t?(=UU"q/C"FbqO%To%M4?Be7ZjP``u_Nk0YbPj\9?c5F)da\(M)WMc=/k>#N"dp(,a,E,LqPqb=]-$B-h]TCKt3)!K.)N-D7/"[FPR/)5#D%-GS,r9&oHu%7<^s[h)Y!"$@M"0;Xj.WQZ47kVlGNUc<=_]mjYp2"\4[+s&/mh`cf*(iU+=NCj9Uii]_b?r>p!Eb#b+6Hpr*]p$fW0<JTBTY'-Cr%E^u+Q-?mshs56Y!dO2oajft37Xr?+8mX"I"cJ<Hg*d@4]46(4R2Z`=iEZO54hptT6Q^>=.Y'D0c\QA=Hcb1A)cH"sb,sIn_%CaA6%IW.*72)Bf?5J74-_8R*D48mQEViE=uqFUC/s5s.9_].>#h48Cp[X1I#fk'PYlgrl?^7L=V"?(RC?R(]h3dpn:/+8.).\Lu$)'r$a%nWK!@[mKcQb/\?k*VA1@:urf<:TqD`359PjJV;GrDmXb]?qN],FTcbS'4g2;#T9rjmWI\=3$+\[_\c:4cPY5$n1M?uqY.O8nZ^)7%hqJB@mI[2=fm$*%60>1K*cLMF'&Lm'4EBt,dgJ0mk?R*qh8Db]\G3$;dFr&cCp_pHQA3`fIF[5tJ>Pp\((\kGDfFkbiJkkU2ir#`%p@u:ij\4GK$1@9"[g1dZq>(CChO_N8]Jj"*45S'K?/6Irfg(Y-IPNZQj'$\365]L[-6F`-gSJd<c3%%jrTtiu(b\Xl+rk7bI^pHg%OcPPdo[h=u2X@pKpNd7_/T,1t;iV7(iqO`P`IRm<QP;c)e:XQ%kI^aA$m3CXa'9_o+/ATUm/<]4g]c[=dn9N7-d0Jm%Be&"*_cus%\$s\>$V[nt7/,+qo`5H:hJS^+d+U&<dKcTsg6Kf*U%iStViMa9o`<LS4ppqu.BbjY5mui@EUhb#8H"Ph\Q4UG#A=hLL`*hUL`q.9%6:d>(Ki(&R6/d+[2+%m,Gl1F_?[L2@Z[K7M-<:`+GLZsU#pC<n.Ul]cN%fm*'94i(+e>@(4ZeXUB/tPI0D]pQ]+'nAM4Zqgn`.f2%&\WUHd(cil!DgUHJ68G%h]G:P6!rk)YF4ldl2b=p*,k4\jZWnJlfq4kn\q_+_GY/nkH*W7X]I!#O0Y!]aup[9-i:oSp.2_DmP/sJ%3R;;PeU>2S<Glp>dZb$;4!)j(^at/^&`:gmWs7jKL(N]/2e;KjD^?+E>:b'5SONWK&VS[+!.DM?b@LWra74(<N?J)`OXE2.r9Zr*%b;KL1<c9S"kt(fcPJCJF9Da-gH]2D7N]u==jgVuH3Vq?c8o8K;INImuZha$Fb_$_8fL2r#K9(f)lg^$3L?6%>_L+d'B#Mp%oFcO)%IAX$B`Em.$_mjITWj<`^]EBAM#BB]>D]KXdhSkl\d[#`$qSMb[IQrA^C@Ur"NhEgJ!r;u72uQ@mbpGHaWJ6"OgZb3kqJl3$fU(.R%a]Od[R\qpV^"ng>;,S*cpYh!`oZa<4\ZMQeW8&/<DNGhJQ,D9c@Rla*qshcVNuf;`P\7,);tO`^?d3IpF@sja)`Z[P8<qf2<dr`K%8fmWd'gbG=/@2a5&B&pO2F2^&D=AD4.R:$)dfc8__j-_'3[!PkI8$E,RcFSG$jcga*MJPY&0;2OGaXZH?S:h8g#%5mB:B!EHpG9n%bud/$7)./36rQG-o$Ph$I"0h!,2NY!#<^ohr_Ef33=OnaJN!`Sa\ICK+,6$e5N?gi`X$W\Qt$-dXLIY-DgbID,;3bf$Aq2']U-@3%QX7E7*AN%".T3.1$c:mC_k'RIlst?m]@qB-jNtprHM7R*,p<<)f00g%p``0kei3?`jb'*IL\a$m#`iL5F7!.m27Ro@O4!E,V=S@j%UVY5;0D"1hQp6ORcVDYMnDPS3*Sg+\q8cEK?hTQJhC"t968:LOFZTj'CBEoH$<23\LTPB4LUgG,g[PIPKK=-@gtKjc`2sT+X>1rj%i5=GBH[P5E0a:k@>(0uUr_d&jI?YX^k0gWJNT_f4MLW>fp5l60I5Wj3Ql+i7PNS]cpV(bM<0B[Co!0Js+#f+`Fc*s\?>Bsg8SbPI%;>Br<GAsu0MB<?2.A>FU2N7#C-A_DsKd`j!i1n$93ImSCPe<"6(I_8QQNl(%'4,U\%T2h>;(OQ=G50eTCR:7!Y6tR#CC4s6O-G#X%@/p+O,hEW%@c8.j'=KZjYHup?gV-JkX`UBTru;7:!9l.FV'%NK!'=bWPgmSa9N3Q7nL[uHA6(h",cUr1o#Xmc=)YMW71XE*E:[rd%nW8e9@0#j]%L;rX@13(ojr"!8LZ&Z3\GAo#Sd/=fMhR8-K#m7'm/UD"g92s@p>@ijOD3=b_TC(H#$9S@fdWoYiYt5N!+$(=&PYEs%_q/B<U1=Dram%7>CCMnQ[6EO+5$lU53N4!KF!RL_G\M,VCbZ"\2Bq<tSWE7\EG9C>l8r;/XmTslGcdJU+c5iW!aDJ;^#+L'*.U[s%UG'!g_9<s8r),nfBd=f-;)sV[PNb4&J$IqSeJVCUc5LYc^bX)H%fM,%5PCGb3LJJ3!ZrLt'X=m+8*h^i5=R2fhj&UYNd.@0OeA:K%I'nWJ5?&<*`XaGQ`e"8\`FDp'WmoKjMhJW>;6:6h7j>]jbT-n88[LH!qe4.*6TJi4"h9@m\rhO^E4:))6JTC]2/E`)B.4]85M8+J%#gLA$$#:=_qPt8t-&I56S:On]rhW5HaNe8ROnTHL(]0RsifUKnR2^M',GS,_fR&FG^+)IjH^I63h]A8)iWVhaD[FcUh5DM"l(TGf%0;8bOHoi>d0]j50N=*Ps&L)5R,mSH-.P;q[bjT&T/h9TU`>DYt=@Nb!Q.Il5E+1j`F,-ch*pn:7"27f^f`SZ_LC5r&#htW5I$XF!%e4NQn9/m]IcP*YD^$/&LeYfl'*uqJCAa4;\qbLmA%[dd0cU\KVZNp$ghJ(@HT/P21kKdKl_B50Oohc0<04`Nb2!>"rZN#kW_64L/%hVWlE7+/$+;Fq-XVNPi,j`bjn*Bgh)6Ns9nq[]b5<CS^;-eEu?!dAu^Q[:mu2)Z[Y6E(l>T;jEP+3=#<VbG`'&W9m7mFdgn`;/_u%UE#GOG<=SAs&F81`&>&d5p"q'GnaC0BRk=+U'Pd("5:eH:_=dmkE]0-LBLLqY\'Tk=A^gp3TSF+?rhiGL*(EY;5Z=5@iXD_<[%,f%6chj-BIt<gl$7C6%UAZPE?W"*^u_>\PH*!rA5?WE2#1["+"QmHaKR9)U"X,>#[baEOf%jQ_i1\KeLe)kaKYM-4NiMp:WotnOKILG%+ub__MlH-':PmoGopELeQtAp`q='Y>e5ee<:j!#8OqV&!#B%6fmmb_c6uD76%`%`g/9j&1VN;AFc[ga/1]ga*O.p]"7<V7DJ_7Em%$!GCi4F,"oHuK:EDkJ\.,=;'VHjoG5jLgVEQNitF?,0Ur(-K9`A$S8[X=Q=P8%]H&Wuk*tDO?VL*:Y/Bm=p0sjXOk.`+uD<b1YUZ%R(o*X='Demn,:'ur,r%ZIrSi*gAVGD)iptN_W<>Q^;#l8`fr:<+5AG3*KGXGL(Q#3\)^WpF]d*Y9ASma(l`b6ZTkOPn#O](IA:cX%Z#`mS.OR-tn)olBlm89KTD`?(iu=6'j5#J"HnpV'A\!5Xf8]0:jR_s>en?9UQHF+On937p>^V1,%cG/?olunO'/i#tltcuWEgs(V%F"0B(:I`G7\_q(Sj!NkRnapYt\QV`T?h)2YT/0I,Oe8oeNf5AhBK&<UgJ=HdEpVe.>^G9J]X^A?=;ZD.egOlgNU:"16^>30AGNI)%Fr85G<PAIBg'm#:?hGBd[?3gW>co8nMr0*$H)5u@jnF63nNse6mnTnE*ab0+@\VXXUBk=cHD-C<T3H]>*F]t7HaNRnkK`#hIm(G'%g[aVp?P%1;cP>XO&fQA@%Hur)kI:2ofRSY+:Xmm0bq`0a2B).)m!'a>UEa0A7hCJqL`St)^cX8A/4)$iN-M+ck_hCPm31%A3.E,7%R=jXIEYCEZ`jbGLf293I;u-l<k!n(>3S\INS'rl@>5d(&l)3Rd^+b>I#C't>L,!9FYVipUBP2!Q1G^!qisgE1oZFXj`j_C*<l:p1%Y&?5Al<ZjKAVo7*FKZk`Z7K4(+N$?+pJTe[$n$COj[tGP.CP2`U-gcB.ikD=%Cch?H$kjY(]?u[Z74#''JnNI9@=ZPXW]l?WNY"H%Pn=LR:dZgW7PB58j!tjSS5?aJhObK+,At9C5!Q$4oASar+Yq:;b7E.fF.o1O4kY>")JrQqcYo`'hV64#%as!jO/JJdf+[,KRb^O&%WSncMZ]Ddj0pW[6#l]4MVVH<H6aRJm!I@=eHkU[N%#;K0ieB?<Q#QKVZZ(&.45Q:/j)5(6pG;bH^Gr7#>5hXcTsO`TnZK"pP%)/a%EsXZ+5q(U]%1Uf^8)E#hR`*McX8tY:l/bL79R(q3lGVaO/qC1ATXR6J(>HAgr;;u?h`ghLE2ph66+'=<$gl'r>?Z#g^s><\30W1D%,ra5C=DVJ1H!u(^Km=D2ba#'$(Se#J?:HqCWNAL:YTB5/@9b>+Y5%>J/THSJ4(Cr?#XH:.dL%[HNH\C:kU5l066C`g-!oKPPo^J"%7bbW',9:#Z\6>3'f:#D3,Fs0F43i/"89gs(d>shB&el94puBXpFLm)M8F6ZhT$*o-pb[J&W$ecY8DN!*U5rP:[l#`"ar?lcpK-G!%+q+He(R3m]c<PK<?^;^X<%8Wtr<$U#Q"+P.`2RFhK(XUo^,VHqi#T3/fE&L<_i-KJSM=kkb)2`EON9/4ApS^>!K@tB#2HBRp>KWZ%WEcLkINuQNroa=eh9p&7QW0[>c%Y8;/,?a^M9?bJ9=ht+7OBL>NjmVlRu<8+pj6=3%3Jf+`iR"IUG;*%[33[7T<%@ei9$K'1$e5g%C3.3OgV#N6<I9aY?]:4&"E<UrGf(&CI;cW^W-T]5c2i=b6O)*taXddkYA]&7n'i;(IF#][8d3q*V#DIGrfED@FoEu]qD6L`@.1;M%gMWhB+Si<P5D;00M;uJg,<rr'%fXLbj;%P@Mu`VIXF5Z#Z(]P$?d'8LC3UC6m)!Z?H$su>s4AM0O%/j@m=h1A?EHqY^Z^;-ZJUW=%@q\L=lAPJY#,?22.\F5g-:p),5"duA<K))]Ne'.FkPd`Gl[91&h;Ui8O_UlOe?,70Fnb.N`/Qk7BY7]@Q9NdDP!e+",L[M-h7nBN%g:DqGT:C96L20)I^Bct;Y-,NG**Pr/09Z7F*?cIJli\X/._):_!_BTb?Dq&k[D!XI1&MjQ-X<3eGFrTH?L*BQetPa,pV46-RZk\)%[d[]<X72Gl*\TV;Q@Eu7nZnq?s18Z"QQ>eC?X7ocB7,Uh4C32lmk6=V??WP[rp%A\ATsrd=tdOig/%<KeT&UcWduQbbEMJpJ.uMa%_2Sjh:d[kQLjeYP)cEt\E=R/44tfLp8"5?,DSFc:XE:CMgt(84J0jI*iN4S$L!nLU6CfJ&DW<*%4,-tb8/JHnI2B6!ZQI0sg3O;?%(^TVThVJ(C@ZFf2C3AR=ISZKMEcl3e<cV<mG9JjceLiIG(Gs5j8MX@=`d"oU(P;Tp)D6^Ln?nSn%d5#`J(ON_HXHdGHT_do[7M\7%[PMP=!R.n%*$8321Pb[B6S1tIUmsGMf74qG"8U!/-FThY'a_rcGIr?u<:G?Kp@NOsq?/.V5$-I-Q<hLGE9A7]/*(<'EUj$*fp,+k%&%lac4J<dXW1j%V0b#SNL(n,RYBlOi2_fU5UAHEb#7i`Bfs&Eh-4Hm:CA,4l1.^p%G[Dm4&oeWm0Ultq$,DQF1()0f9*GJp/.-!M%V\fS^n)O3t8;K5jK"-:O#fnE-j\I`^aA%nG7e!'WRE";6Yt%-P5FBO!?ORu*.&]ANf"\@^l%&I#!;#/[,#4bZb=E1V4H"mdl*2*H%p^)ErZPGaM<C0"bfkD62/S_k9d"1?YjMe]<mX@%J%s2*YFp-mkf>>_TJ`pU+A\'#YPZ_m>"H+QC^ia,0bX(%.I`EnH>`>VO;C/EY%$%HFKdWTgRm-T<qPmE\p\mVLX0b+k)l&tGNl"U?'W^IlcG^b8t=>9AQW)RKF)Yr1_J9DLpiOuGZJt^@VLale#PltTW]>/N&LW]F`%_<<QRPqKUnq=9MgEBhe['i^$NX'QMUE:9Flm@;Rk"]RchS<%&oXpYm]F%YU]Q,YM/-oC(6`s:FA5!=l/=W1KM%$eh33lbkKcG;30%0q12-HEmY0kOk16cK-[3abt<P+]H[aQ,j`.#cVq1IL\aiLKs@5UH,PX3DU6E7(-3WOH(q60J6W9Mb@SsE_0V9>W0jZgYUTS('!JY%L81E:kAW1#^nJiP2]CS"nHQsYe/N,1CZK`YoV*8T<WS[h[OXf&2+8S0Mi(8]\0#a\@I7_k-3QN8+Z%k+i[`6o`B!][,NXLtlr>2%%/i@fm<]B<f:Ge#W<:@N<4UU<7<t3EJ_rI,+1uW-UJlk#fJ%Zne:IXLoAZ%9&KYQBgPmZ,IgOoHAmUd+OpfJP3p>.i7jbN."<B-K#%?KYOVZOPIB8r0$M0rc+>8f]E/;3L)3)1\;XHN^p<aG/Fi\"UI.hG;;L@jT_r-cp7bTDra+?:>I6S$A;LLiDlp$u=^(g:Y"a&A7L5%BjTU2gdDq7`Yj33apc"k%rKRY1(3)JT-*/A"2dXl+-ZpcHnHC'^'^\38EkFBo1c1_bsU:*ejG(o0K#3oSNkieCSeXk6>cP60I\h#%;l=Y(c\#>4:,nmCbld+FX`o4W//uoZh^s5dPao]!e8`\.O"R.gj9d]+0i"VOAKjI8YJV@e_9G_KBJr1IggN4-!B8+@9X=dlC4"oe%co4<sk=e9n`Ac0#Dt]2hOE8#IhReiA[Elf'D\)t+q)Y<ci8+IuEC@R&45B_\(Cqth"nZe4VtkP17_H>FgP1[@-A&E]`O0NBDY_BH%W$#G'EApU4LOmok\;7(SZ6eC7:30n'opOSD+o9oVID4;)ij@_rXqS=Ta7m=,CcN9caa+5&)di\omj6p*1A::GdG.a$"qSof.<^KM%iDensIlbPj`E&;S2-2prfQ0L5\(6a]:trZ2[mMA3(U30GU5\>W,WDFkL63Dbn]bK^\>uVTD@+o7?[IVu's`WDHa]m.N2o"]1+(\+%/7U$4EYEe'eGJ>5X4XKGib5uR"f-PJVfm+dB8n*A:jKK@*eP'U>b"><,qPRQ*m9<Jmj48Q]Ck]=DtgB(%prY.9D,2q1Y1X9r\.nW%@:na8$2>C0*5_8sgjmJ?8@]13\L7pE^e0bIMk./b5BEBNr4RKIT4\*HT$0.kgS>>6gmoor#AC4lTT87qg6F[=ZcSfU4L;sBX^_OR%MjkA#T;)(?cEf3DJ(4!GQJm(t<n\:?okGK(FH3e7[6ZW*L*r8SMVQ&HISo6!gKPX9FEf%f%;!eL#_U1)U"m[:HbVGAV8)s$4l\iS%`Z3d60g.)qcdQirO8AFFnuZD`?b/2pR/m9/-s,Lp)Vb]J+Qi7#K6m>c.X/?F:,FG3&UehG\V"(s88CG0J_1([k*+o&ZRS^p:>tLn%39`$($`+m86:K[DTSZ'fbod?'J#Ccbd=fcCYTPja@8XOD2H,&Q-%:;#LEUm8s6nl"q*=+oHbJf:/_(uA]I#&IOJpsS4g-"6%edP)%'@BO"9k^-M=PR=U2Q;3#DPG`(K\'WAmp;F%'Fo5$`1"")q\^*3.0S$.m).pJIF*jp,B2%96S-6PBoOSTb6m?YIig9*!%uMI+J#.\%n[b]AB=Mo/<kXf%VZAg,IpuR%i$Q>c%!Ks'b1n-^:1Jao[iZYqR/6?l0sp*)dmUp..c2]^Pu.HjT$=p>+T?[dKc<K;R*>UQ6]=LX%Al/*[DFnMbFu"kdV<[TsTe@\pB:U&_la;(u<16k8'q<%0+7tu9`FcP#NdgO??[:6!]T'BBp,M_uE7GAPhJbH()6-&YZTiHFE/5gc%YaiJFE'-<)b;!Whe[sQ3Jdb/sq%K)lSU.UB_ngJ0$lG#FB<'f:$n"0`E6cjk8FDdtb'&8qYC1fb,-E`%QnfX-K:B0:^VXs>]e?]3%k6u"7pZ%LsaE;ajpfoG55[:%p$T^t)T&Cf/-84`]`NAOJ**S?-T]88jqdA@eh7'/G+u6N_3T*/(n^$rK%P*`^M<R2Gq%UrQNsNI`%_mq)(md)+W.Wp9l*-&$BC*6!uY<q,\2"gLDn9XtnPH1'R.lp>p+)UsKQ32PP[9L*\Y-NI&/BrKsn%spiUTbdb+ndPH^<f9lWAOi!%`gO8F_0YO]&L!MOe\R4f)R1?E@r98Von7P`][j1)Z[cWKT(UI1Z>M3DL%Rjr=HCSs`=SZ#p:19B`sq>@+^QDEKo5UYLKP-eB7R[8%(hcq2kRRE+X=^:qVDc!@?.FML7qZ(PHqqp:I%;#0hG9\qpNdDP%:=dh;ND!c#7I3.4B)7NG`,Zi!$YcrUu4;\)#/1C_<hZd?b_XT%L.%KR:)PdLUO?[Kq%+'NO33:;Ho6FqA.U+0Q2/"0'*m;T&c8Y+fg1_^7`Y(j["7%MUjd>TEOtOD5t#q!>))l;.J.)VN49MPOPNKa%`+`oe.#tQp8%LtQZm&J$/J0U1N*spaPT*kbMshqnls8`l2FFllK1BOm<6i-\M0dX9UDYatibEZ&BEjrkJ)QA,c&CEgBf;UC2KlkW%jXipESD[9M=Ol+UQ2#[4b(76Uf8Lh02R*MJ#N6ut&TUgb4R[THOCU&[^TI8NMTP,9VGqnkGl*X3.boGj!'XVKr,;hrqZhf-7MJ?%%C%O,c_$,7h<VE#bF'?>7<n+Ht3CB>LCSrrtgN)b'L=;5<UKcI.APOc.(jM1Z]kkKJ9JiTm@0&L,6$A/6l\J3`g1X^WDq;uiN?Kep%f.W;1A\!JchK,OFJF4Y7780lIh-H`0ff;NrC`n=<ZNFr4'!jg4f32U5&<I>L&of$.M:^5F]4s.?^O9?'`5:j-Z*k'174hquY?M*Q%2?NUSl<3&Wc;hT2[%1Y0;0jGt/@2#43lG:P0;?V]!o(N_:u>u:=_2nu-`"u[o]hT_KgI?QZela_4`mAH0t/MK*1h#$9/5m]WN^8?%-#$Zn+V,3PIa"O*%"&8OV?H-q59%am$uH3Z3^rQdV,X?X:u1l?6ElZUK$qN0?+E1qdBAU@-6,o4'1Ut5X\+k_RNV-DiAr].:^gb4%[?$XUga.:YVH&s\LqLG)&79DUZ5'BMft'g`&pRoi@P$'L2^UWFlg:rTDeH!g7W(Lef9LQdS/qcY+g<g[e]e,e=]e_bTfNieK1P5o%C9AaMU;iAu'C+Pf-FtU'Ku5=TG'"*sCE:0fWH2cp:Y%,*qS>`R^FL+&0e%bumh]gi"EuJ4>DI;aNodu!b&`-$/BU'-'KI(t0=bU]%5-FafV2BZ;,;]L-&0@c<%X;LrN5[BNiGqG?U,=TmCMS="FHI6Z(LBk?Z7-b$T=q*ljuf\fNOjAj3B=>+=h8&V/B9es3!P=1p5==1%I[W(O=V9Rpd@(*^g>sP*o\/'CFl#A\@lP7Z"he*2A]1ie#)(4,MD)"jd+;u7jM&>sodlY$f2Tq&Dk)!SB5+b)d8[S!q3?uI.t:rJ%c\P.Q?r>-b_"1<KB1tq0ISh=*7:<B5;@j8<]50MTU'81!*i$j-6u*R7pKB5cU`?TecdGK:i.+6.N*2O4mk8#O^=M(%S^Zood2B@V%A;a2iIR[o`:bcT$aMFPd/eW59B%,u\6DIaj*@!aJg-_`]/o>.HH$lZtl)ZHtUY?\74h.*R(k,^=eK8;jZ/CUR,#(VX7N[\0hr2C%%P5F'*70>Ll&P60^MVQPH::kPM>60^DeZR2P?M=\CGa`YZP'^i+.p!EQ%r.V3if:85Y0m):d*othIIV?k[L92mAI(9hO"J/M@]hO;%q+_[IY'-^HG%Frrag"<(pATs%Pps$@hmbIcKf&l)-iI/B5aDT$.Gibb`,bPZi`:7ZUZIe$rhp1\V/=/#HrK!H]<_S]e*(9Sr3lof%E'>[d$5MN0(Z0ZE@PWXVF.C3<Qgrm.pK:=K][0p%+\H^*PX.-3k/!E*'ArTIG3(u6^$VB0]5NaT2L3%1Z\c&j7]<!pY1aUs6eMV%%D87RG:=3;g)UDNpCehf,rs!]-f8q?,3ku5IUfb9/i*\9nbghb;5*C8lM#$Al%b`p*W+$h`,oj3d.i9Ub)Jf.##,_G`ertrk/e7O[%K?c>,-4S5`>,^5Eb029Cr4C/]A'Bq3Gin`^WbJFe']jQVGG_*Mo8mR*YQeRVkM>Fj*A-a.U8S#-,jo-(3(g\c`MlK<@uPPF_7#E2%lqp]s9jc5jThA%"`b4Ld?\M,\pm?n:CK447BTp:]A=J%b):<m6$4%pdpfL+m$m4SWF>)6K-rF$3O6S@1-)rrd/,5p0-r+\6G<(IV%e=1]oKr>t?-6BH/Y90I:NaHC'dTJ$f^aV^I#Zbd$0a:s?$gr7eE:<HOkZLE*`Rr'8Lf3ba@:Ls*D<u797CKsDlsWi=j)\o#D(fSh%adSB4!6$/9P@)_f(Ps=AlD(g#&LS\VY9\l1gN"="O#_6W0?A8Y:<A2?IDJ_]L`J?qV'FLrZ&4SE+RFmbf;Sd8aM>og?efBkp99^u%1*Kg8';+hh1E&/nFbt41M^kZ%.@n2)6O>0=H7@fN?5dr8$"\B$]3l[l<-8MW,uU*9V(6,KiSK9=k57%V@U*`P6O>k=lX6U'lfYnA%rCfhRd`Tl,N;Q?jhl>#oN*)-R\PkW/H?'KtO2p)p^:^(pjM/3`cXp8i13NP!emhgt(!cPTEJeDRH9AplSDm[%4<EBHVg*@l%iSjU%8*)U9nQjW`?pJ-6BUe*@-Ukrr2KEA>JU-ihjY9SVZjX\u4PPtLZ->dVr27&bQ#i4'6%qi&N]L$_[S@q$(?@?Q%^Z#a!L;8M@/4TN%#06Gi.67ra:"GQ\kc/4m-!nLMN;/s`B,g@ZnDOLPZHuQH`mq><%[#O/Wk][&r@>NMn\_FZ@_dfOi,dsj+pL4eLcm#,!OFcg?3AgX%1r^e1Olh7/$:9Ziphc91*CRJ8)QKZGKibG`N21[uFl2b'rP#:(LpjaNp#1U&)_ql1Sh'K6\Fo];8poL_kf5kB\N[M<nf!RS[U[Hq%>48$>*N*FhK!rf]V:G((N/lN2GM9YljEJ^]$o<V9VP2[<GYR:60<!ng,]_PI<r;0,%;8@`.lp8`29JX>Mn=!Ln/?>i;kD/odh\Qo%2\8q3n($M>Y7V:@&0k?(i$sj9]Op=44M>BO#Jt9PCIcQ`"L7Hb065M5O^FR/=@>J:i\cqi])uB7]bU$TnJ^(QEckRST%Cch/EFTd%aD94kf<EuJhr?T4gLG+i/J3i!Y<3,*j-91(Sn`dkTgWq7s49_,rWQWGSA#T[#/V\"B"TH6(:VR>LcrE.cL[Kq3mqeeGMojo76.#U%6&%lMNUlAZ2K35;Tiph,]BeN@%jCO8#2FFf684j!nr][WV!N3'6oB!*KT3D07?6^D%d_M9K7c"C_b565XVhVu'XffoQ4Li5UtChO%@r$f$*dF+7UmCNf>=UC,eT^Gi+]gk>AiL?uL00HSI'#)m*@RE5&.:SqPdhIN+!\VFmgB%Vf5RAY619GKR/F3slA'4g4jr<+$_FiN%>jd'\@>cdc0'9?cBnPK-X19&j4XsCO?:sAR\V%LQ%XjZq,)pRdZ_PBo=;<=Fo-K5h<`757cOmp1*@"[78]7>bqu#2=^PEEcdI80P%F<5jq0KT?FECnq(GBY'@3$-sa4KR7/1ue:<S?\7Vik[V2q[:G@4$=E^.n]idK5lsu,]Xe5`Zs<^C2uJ%)#+7f(ok9k#@4.Z3hpkg%h5^fj,.fOM"U*HUphbGDcdqK#*@0ku0'j(GY^*L0#i@q4O+*>4UO9<<22UlIH$o$(V]>mdl9Z,'XY`c5F?T"C$^K*+NH%eSg!,&.%E.]PXM5+W"LLkBqGSQ@djPTpki=<RpM";"j`sUnc#88@Y^?piUR;=\(C*^bb(Ng[UKar)DS*4XKpA&mcb6(88_F7X2^7N)aeX]Es%.KHM3SME6q@]M;(YBQJK06'lR=#n$JKF%.AZPDAL[0f`:F$,P0c)DD?o3N"90C_JU6.-:s+LU#:?Q4-F6F.c6!u$R5:uQ3-nR':m%<]PC#R*i<R+f)U(m3@n'Qnc;*9R!HRX^^GV>-l'm^1l5JHG*5Ta&'ZX,f^WtLj+"#3/[ZDJ#sS6+KJnkf2;0-2'ajtn-)oCOpk[b%(GiWqc&=W@lYFa%@;1OZDF??1%<HOb<)h=E!f]2WdjQ0H!Ufu+Fmll47BW^$++_bSAhZ2.mMq1jEON^%)29sM(pFiD!s@]?Hi85N%rMu)B.,5i7[b:P+YB:;tQ??9.,upp:.[>$g39g7BDa%BeNScA&T);Eb*1ZK<X)6!3j]brE*7B$=h:LQr\n/EhX?0L<b$[jk.5o(Z%F&rl&pZh`012lUB<454Jm)o1L?nkf6dC<9?BS9nU4k_'[rHO<mWs<G?HsPTjcBWTdpZ!$%#iYYij4p]7S?!OjJPb+7RWe/pJ+u]B%'>=DncGZpbpp"g!BB!DRLcK,-iRRVW4!XK@fWq)j3*1/oqg:N3_>3n&XuuZT3tpMX&slnjSBA@n3q>uB92<4KnNlJ$'ogqiUrhdC%D[W"+A+9d!7OO8+aC^SOiud.:KCPN%g>;''Z?qUQZD6iYQlF-#BX#5JK@>0`ErM._gtof`p\3"Z+)q;?TuZC1[t<3Nqfdh8*=n,j%#%uq$EQ:;H*;obOH8DJAEn4sg>hI7L:O/Du>@cqk@HOLiAo'7ng1,Pcc;\CNnFGnCCR1B`f)62;bGI%98deZYFC*hX)OnF*Yb#:c%E#-gVO4uEk-`8Klld))VEKaXXnC"M:b*uWtf4fLphW'9?Soh.qg,A*s4#[V,UTX@DT1J.FXLJ5MHFIslm,T=6^;,`3lcb%s`OBc:%GP5a!SXc&VCAd&.CSZR>+3SLRl!-esq)U9/#aLt6F=$f_[l>D]I@7F,'+E]k(&@hm/!kC(LV\K3rcD%"='OXk0^$f9j"7]5A?<Y<%[nU4XFItD1?Ql2rah>9sb7<89[\J"tf1S]YD$R<WPJ.EcjSh8WSRq*9kSAq:"HCtMG[f3OgL9\bdB.Q`>F\X&=&WfRH,lr(]t,bs%ZbZ:e3;7/;X[?!sqo>3%l.rD>ZqbaJYWI1L9pTmsem[os55M+SXM;8J`TbiF^(d\ZqdLAqe7mae;5X_1Djh0LB0,),=`RI(m;H(-%>gWJmal?+qmJQY3XB-#mr3sP6CS*Q;mVSP3E`2QLiV&H_2b;%S59].Z@ZP_eSh(hkTT.@gDP**s]!HVZT$.@4f$<P=BrZ*F94C`5%EKu=?ZBMY5/M)Bee-OC*?^dcjVCe!OYU&`<LkUfdQd3N\A!43BhA(J.I";sl+7bi=g?%3,%=Wa=D[]9YjBYX]?C<iIMFr*N:%6\?%g3rL]%j.B%g=c-[=";gDe6UH:4%X36$m54TROsuM:[Ut"Qo"Z#'q`6W#E,W)&!tJWE\\hLc9ObjkJR+>F8P#h]F<<bS\9k85"C(m%jN`k*AYf$c`aje#`plg-Cu4+mf?)-sS%sNVP$<%ocsOo@T.X35>$j7$cGH=c%MaFXDZ))2/SZM4I'e"-e.tjNgLVGF`U!eUYPt:!%qKnABL5pJ^p>O]RI82#2K7;Y1,H^QXLKr03a:j&0h'I496Y`tI-36&.UAc_o5"Bbg*SEN@G]kr#cWP#NrOV;pbmqiKb,(f(=T.7F%<H:$2B"iaZa,U<kq`3KE3Dq53r/SZ]GLWnACYc^sZXh)s=2JpTll+0%/mgREp)^>*X\WF`\'ZjY(E)&4S:29"q+LH7EjLP&lssX4%h.1uH_;`@r!:8n8>7/CaYHH$mpY3bO@4u=Zg%O;En(a9+Jo<+)P"G7Y79;HAI'_f$d/iS1R/Et'-WlnRH6W;;:Ro)08RML;RpXqn%6ZeSPq]B,"C&G!!q9.I;l1V15Ru^V\?9c3kA#l"jg<]$WX0d\p$gm,!qc.qXR\?>'oN@mR\@r@=k;[q@mehCk<uK]RLNlk3o?3G,%78)h!%fN_Ud].9Ig$>KI``)7XaSk,HH<?#AnWh2JbgNT[7*+&i\5;W^]Y93=@K4;C3Gk6VCSVYBP0_r.A.pKf`8.J<oJC(D+%+M\%>%OhA'4-%a2kPrA^3AbK9P7.meb+_CT8q$@\PHDgkDOJ_H09_M:NEDiFtcLt"EH7^hn2)2M0hl.i,c/lKQCt+IESWQ[V@_=VE2.`%1V#RsnCHCCql^NJM8rhU,;40h+8H^ZI]0U"%(fAcOTR01f"e*c,a6%HUB@F?E&cuD\Xh\ui;s&%92.ZlA+0W)Sq#h-f9LjKp4o)!%,PBC,r)>#h8:sG#>]D[B@4"d>_,FXFr7=ThZ+8)WZa[6Q[;c*iSH!m$RC><3I+^P+L%G(9D@G:^bFRJK(2&.ugGbGo,(g'p?*HJ;%NdR%IKtN[lk75c/S%F%kJgojVpn=orrlWD@iQLQ!I%GIK]m.+QeL<Q*Z13+Y>]k.[g0)Do(S_4LTfA=L0.ZG;K3S>GeOtlCj;G9u%#*F,:r(EahYKC+t(QKQ$LZ'&/*dhpMOm#(tgF3U-_'qRcPmLmo0q%u-n*KuBg&Q8+=VkS>-QMV8iQQDi'95`s-LZlCCu9VG,ru!F%_WeX4WJs[pBR@snej:\eUTV<C/T1eOY(:f5S=\P`GBJglZ-_6(Y?[S\n2EorV&@s]f?&(/p\Jb"(.``BS0.QpbjENkJPY!;o=G'.%hX/dA!rqcIV*-$1F2SmBe*u(TSc/'3`mM[ZU>%]ndU$7=q,Z@ECZSWWO'[#.(F_A?JSr^as'4HpE#NDhKN&H3l-_g-;*oEJol>iK%_J,YJ-m:H#j,uX5&fMP&4O^'[l73A]:dY2P=*AV^)JW,9s-u/Cki>V/YH4?;a:MstDR_'t$>J5bnrc4U/Fr2+F\ZK6o4]#]-\$C4%ESl2MV\'iX)W"TD<C(h2c_p-aL#5GW%QGusZ%)On+fnmm<p_tuHpO4bb'EK&nS-jI6V?r34Z`W7a%cTY^Xqq[?:f`M8+1Xo]b5Y'%e/b>dKR`+:EZ%_Vr%0k]Wu"_O1N$IcYKl>/!!h]SWS`_0]\Cc\gjcs4D%E8EO&nKU0/i%Z`6J2,oNJ0DA)e5u9!(H=i?&SUY@IrR%SMHDcoN*Dd/l&L<4PgO5jrXM.Y/hF$.1!<+DfaMHDr7n.::5:caj4L">0"ko\bY14cgb3%dna36d#-"nj(^M$=Q+?W*tL"$,.]o(%P5"`pDtn8"0NE>)c9AAf$5R"0\'=NICV11!1K]%3Q'^Z>FhN7Q7s[b%mV8#H>NOIk5#6e/NTZA!_aRblh(d%Fc+ba1oA[$fQ$2l=%aQL4!qhP0R9Zk86><fems1C=#?,Pn.DsmL@O10/D*.!s8pW/?]qJp9>(TA*e>AaO?Q10mkXA/*4N%JejSNG%A-84oc/d^7L*+%+B%5!p?4n]BUB^[K?+L3-/'^.a#Nleo$,<7dAF3\MiuF/uI+R4'\29l#9^+YL12\TD+umH<>3:X@AebF[dW\jjjS!c4AVTCWn*o6&=q%I?h,9`>oSfj,L[`,,[U:gqCXS+-oOdW,"RtkJQE7\g@[*=R9&GEaA/!ocn#+YdV4>P<>jb]IeT(XaN0VGrsg\o,X`44=4_(>nX2s%3b=2>V/=dsg3HciP-:K"o6V8I=XaKi_Y^5i<AN^UoI;<FPN"K5%ugFqO-U:NYl(ql4n-S^SAOTBcbqhnTWYHW<:7fsj`Rl#:4A;%%RU!U5`\ff(4M9d'F$!M%r)2qP1geVrnFUL`5o7q`c]Lf0_0\;*<N>h?#?i0tn_*6ihV(;O?a[P2a'\_N0^\?LlT"lQI?7e'>uB)3%\b+^Lh_$:5ZM\YnT@2#p.%am4P`Km<]8lFgoF<4R[*ij^Y3,8G8i=?Ro&HS]U]F7G]D'8@T-l1lRC>ro(!N`cLqXDT#Z>eH[&M`.%=-QKB<u.^>H5%/_!?OF-,AZK,2S[K&]6;N4kKB>ZKDFHUgOk.opeB0PRC+Oc1cJ!;8'B+.F]Y3J\Db3uBC6gTZj1TTpTW;I8c8Js%q.pOD:QJ(emEILC5ifeqr'l*T*8Y0u.-E)p2a-[\@9YTkpQn,3DY\4SrfC"(iBE#chqqlppgtCs*GT2_$p2t`cTsjPXtTK!nsj#G%pYa(ZINglQT?TM9:H0B^*U`jh(ZZXMp9FD-./2Yof9Trm^dHA<Rpqda0C3RKc[id*.2:3$Fi<VF'FJPhFekb%X1+^uM0!Qf1n9'm%j+u_$-aj+*:ZKRM=Y4iD95V"bmgd*FYq($//6+uf[([Dq^OCU[<><RXHR[KBRF==Sf]PpI]A`J>Qg80KH1LsX];=7;WH7QTmeVJi%Qgd_P`jkoQB)7UQ9>/I?rVOi@&(f[PGd0;0peU]H_kgV>BX`J'oDkQL#l3Hr/#;n0hjg2XK\PBKCoXt90DT(rk&8(&rp6Y&O,^bR%1#:$sP)C7Z6u"k,Ha/1,91J\PnJ=^LqiCJbiB;M&qjP/2qI>;8OTkX1No/sa5OE@@K+#;"B'qs!9O>XH>JH?j,KSWrSTWgG<F)#>%E0p1id)S<El^PHRis2cJY91sb'.QMu5@;lfV)_RO:2b0k%NhDcqSDJFGE,\5SE>``hN;&(q=W1sA6n?]+Z&?I"#c</)P;5LqhdTZ%o2tOH@B7F(iaq35:YU?hoUA(g]1]8-fDd3RK7.9G][tM5^9F#8AHp&,cD>(V,=<ilN6G\qs'@fDf]'sdbN_"+ZBJhP&sYIPrpnUs%;*N"L]?N+^]'JoJhJMDuRT&Q2pLXUcT7nAng\gDjHnjgZqJM5Kp%0p5U_`FAqmq,SBb$suDSLJ-bo$PBe@s7uD_JPNf1Z"].Q>JC%^RK<:i/;q$RX;HJn8pJ!G44l)ls?OfdB2`ThX+s:3$6dF_FEdlnCmX*[lEsAR)Wli]fLT-E3?#!+6-[%Ff3Ee@=Hn#/epCJDKVp?%?.@b%li:DTSM"Dj*8g",]?J1b4'Rrsa?*Z`o?FBiqbGc7#>\YDk2PSd>o2Ab=bG%c%c-MT>IAX$A5F5irYIZW&\R:k;`f3FqL<^E%G9l$fCE6tj:73kIl8,RmF3?D<>gqTp6G#D,(\t%uqrNGC[aoHdFRc7!X`/W:CL<[2F"kpXYdjOY?U],*D4P\]oNne"AN)cdHK;9T%YK"QsMlkaH`O&k3,M`5G;h=>#="MpphB2peFAG?tls+m^68jmKgN'WrL:N\H28IJbDa/[M^@h8N.l5iTQTM!mYE-A+0fCi?!h!.D%p156-0?FX2q4#-HF)u6qX6Xq@YY2K8EVM`O(nDP'dAtP-MtJ0=E^.SX0>D@h0<b<La'EI>a1TYOAj9pjFPFV@'!pnt<&is_I3\Jp%iA@dq8)@A+1Ze:KHgdr[4hAKh>LtlumYUgTA$0mpdl/eg=_!o(IFrqc0@S^In1-:6V%9DS$0QeA(G!Qgc#8rrR/:)[NNan!2h`@K%S",6oisT'%fn@"P*2]4]J+r6"dNM;M+,i2;cl8CcOLLUkmI9.=&Uo;%qXNKuGBSGHVu3NrKs)OL]]kF!0klU%K1it-qXD7cHZ7%T%etqONe95h\ObWDOY!bK-Y$irSH][-K*1qS>d1]U!]\"?.q!!ft:#e'0[tFYKq9<90Ha)re*EX+Vm,AF:9!<QBlS./Xe.Y?ghSWWG%(J!lOOIq^sG)b@DM0tfQ0c@0e*dau/D@r4K1KaRsf0<Vf#Jo_Fl^mf4Q;gqDX"QDCaLDRTrX^/fEQ6'7qUO=Dc$+Zl]D_7mfFZt#%V<Tr3ktfe^-hlQpi96`TN_fYY6?@;4JF,7EkhF"A&tci9M#?'>:[Te6P5++q/h9-=[,sis-U7M!o)eI(KJk%YflZuVXF3'U\gu*I%)nUiCUUui:A_T(iro.*>QYk?ubR_=n2;52^?iCC=^!#lf%:.h<hrWK4O#r^E-F&":llFoXH2/pP,a\)@SdN01Fc@Zo6==r.SZBYI%qk%dc3DR[AiTM3I1H]qsXR<^>U$e*bgXG]@q=;ERa)e:sfC-s9^&S*$s7-gRnj(fFs1`VaFlS@EB6ij#e`8J\XH$<l`[2gmGA8^6%7qU.2ejK8:h:jpOcM[8HY=>IlZch&8>[82;1qO)HB#b^2!#HH29ba[Tl<T+qlT`Bp(iAUAc4B]+/=2^l4a5L]*Kkn7j3HHP3Nhg#%hpCrM>GLc[K>/]W!UUnqgZP)fE8fk)D^pOnNf;KclJC_?/TB+K9RcA25]be%I;:[I9rNO<7s]QX/YLCF_U%Mu.';8MQ$dB5BQ!fB%o!MfRDc>?S6Q'OHn`4B\d=ogkR9*fjYk+M(.1SSgkuQ\@fu.(fSY'/bPpSUonm_#Kf,:Kaa<kNf4)`)f^[9m%Sf,!.>^cIie3;$%%?+`G&k%,o?F0NYm4nn]nQdb-1,E@KT"jd+3\\q6LEg5B%&!S+[e+^ki1t[/kR73*O@_=@@Vp\`&'2kUO+-\^o]DXPNj$mO@V)2Fi%D635Z&gp(67&1/"pAC\d\&`N7oDXit;X,jse%a":$EgBg_TbmVT!P9cq'7OfhOgotQg12=VrhM(U/Ya+jX.Wsm@,iYIg<07\H?ls%IW/E\2*QAWgL]cjlc206#gZ+]2<$_D\'JE!q+$XZ*W7QfHN][q3(/:Gh45h-ihLnYIsW]1Z&Cl]W4WeVHN%EdjT:ga/i/0nh3<\)%iV(^>?/g&c\7CT=fms)crTs.Gr5I2dX0S2)%!?^,[G2c:h5lkDmq+-+guJWTYLU6P^)_XF0^nGP7=q6CgN)JFIsa!>meLe9+l?&_%_=i5"KXU?#*DN\TF%1r>o)/_edBTMlKReWMk>N:Cqc)e^^A,C])CCTH5ir2a$nT][6"6UBL'nonkmp$a=WWrB[<Yd'<0->Q)(4m8%ks']qHF`LJm!alG93NP,jDT.?Sqttrj\H,n]Tl0JA:I+H);F=ENAEce]'1;#52B8/A6AMX#OH'jORID+m_><bgEoimn4R6V);f3U%gM6K%:AOGs;EgGGHIT)!<'IC0ijg@R@I=*WpFK>Rn+AGFT9o>Pn6Q(=2h0pj]Ou6\IRsIU!Uj1Hr-m&kLJ-@EP1(@A.rO^[2:(C5%0'W3cHI&<?P*X;c/2#aL)Lpq`'N4tue^I6-;Z<>(>^iK^S[8@Ji>RRO6F+9"H1A@UGDWl_SXEDhDB<V6%_.=%rOYL)ir**0P9Vm?%-VnT/lU27Pgu*9=cX-#h=7D7MNpNNFF1[B%pr^u"O3>:>jnV)YY=JMXi",_SX?8OB?%"S=-SDDVk`Bk2Qu0Ph!.&M:Hi8'3gN^%(%kiqXp+[OA$Z-eE"bE/CA8%\>;-km;i[&#:#Qg:*^9]-^[o^'/$J%W3pZT;1N<'`f>P*#bg6+,7@NF5TIlsYaBNKBf@7K3d=!UPiZ%QW2<'ZVLh:bk#f,2_O1iQgI5<9h;m-EY#*RK%#]!HV+.9-2TiLhYHi!eM0(U9-M!bDh%0[H]Phl['H]:Wt54-_DbEaF3f4Kfesg1%D92fk*974q+Q=,]7t*Gd1[X]rduOJ%q2<_`3m!+j.:qf:D(g,Sm\akMaU#ps?<UjESkdl8Q1^2..RfH2SR$B24KGYI&=h:[hm9O_%ld_6Kn$VYm`q*E&Zr0L<prS_d[?Z#2AmFk-)+?gNngmgGdaB`j=^3PtLFbmnFfc,l^935%ZXH.7F@glg%kKAA/*-f5r,m3=iEmtW%IBfQT-7G(hkhD,f#L^hs)u;MXl%Sfq&*lm5+8l)(lPn@rDQPaFOAfn+^A?<p7/PHj5@<9Irc$jSJ'cl4b#E`X)X#"Bb>$kOS6<`L%*iq8LU(2SKS]X^Y.fF^doA7I!h,9clYE&dbVb+,=o9)"7-X:5Z>_aC@Y?%+lk>Iiao"iF9<\!5/_'>Q(Dg_EE*WPt8OX1J.AYR1_%n`jX^q0?c%N`VHG,noK3ajetL^N&sf;,E>PP8r@2mCL;OjM>W%7fK<RD+*R7RRO-DMTU)DkWJRS)8b^qJ'pF9[f>"ZnjN=r_9Rt8%QZB8"IBX7Id%/tPYb"Chj[dsts5p,F(oQJ8`LBBgoKp85Z`&=6^%1?dr2Dl:=co.D3c6cg2NHlpjWM9_+%s_;[O!<rrUb?Of!A`P%5HNEdng]LJm`i$pT2($M2/e;ej/qSWn"WK24HJfHGsd>8_,9fUiUbU5[F:+N[F>/\`P>fm<rHNsf>5R`54?d(XDnVn?>V2Sq)?Ur%I!]#pUp^*tI43:=79sh+o"6sY]I2ikr,HL^lY3/5"<>(3p!LO_G"lroE"KH%<=3Z-Xn&i#al1+=-i9g<a`dMq;Q:dAb#n><1oa(.%KtFW+m&e!(Q4$fsF\/"'h#0iV]+aJ2qbKl@G'IZ)g>+tq.ue<(dK9C+fX&/5VYUt*/(0a0-C1Nl?V7?Xh$_nHZ:C87/\%S,4nb`(%p24erodgisqm)i<5%",+^s;O9ea%7sI8o)oWi<8mjS"kg8Q(8-h@6N\prsg;/+9I?j:M6=C<Aj@`Xj"Fs(?C"o<N$f$U&EOmEs8+%BA`0-s7$$*Qe@Xl)`)9aa1hTKbIaq_hp9UI3;`19]ru@((2%""B@geJ[X[0t50i0$ZaX<!S^"=9R@@r\*,8fE=s7_R\!=#)-h>/N%8&%3uH+GB9B:JUCT#L3_-D/RIifar!Z`n]CGs8_.cNj<qCGFdiG/)A*gjQam\*DcYe4-Z[lKPaf;EE-fiq^UZl[uD*PL+YhRGd2=%,24X*mbPU"-i^H>*Gmp,*.3/UrOMt,YNMK>fK?[SIIjR?j-i?iCe1sO0?=Z-qYT1uhl?M8j3tQ(5@<hWj.AH)>?F&%_V]R,s1'kn%\fEu-YJ0^NDXkX-c+2@X&-(X1+MMW]2tqa(FYEVJo@CeY9:#PI]pE?is!>j;]rtcpr4cdqk;WiZiVt4IIM9P'0)WIpff+(AgDB3b%Hc<)k^s)_$MSi-hR`YNJ^kGL6o(GP^0lUQ"TXJ"7N.DA+!d3)o/n<hVV?!`%VD1n&Pp$q068k9Ii,qPTVBVGcrCNIOm-3AFmsa\'%O8XM%kiqs$pV/?I5M<SoHY;m?pBS1YcBG#oI;e\sNTVZr2@i%Pq=LlXUL`eP^=uQ"b:k38<u$e/oCO>cgnuZd[1?=[>Z7Ed/PLUm%44f\^C^$o_lVqmL]1S[9$Z`nobh8aLPs\NO5=5;4<F-9JVmlFjh*__jDpCIHg9U:!ol(cEK3&<$>c[mM<-jVgS,`&#B!3_Y\5QO"%]Xda<CbhtcBr$to_WGiT-/=o%rZT$l=]m6KrC6&)YtF-Ph-2LM$'^__mkI[RC%`Nq>@6Dtl(@UoUYXOo[a.QWG5+V'9p:"nVn%WO%9'+HZT:PX^$Y6^.:*!JZ:Kq_?m_@fc&s(?"UXlf$M@K0!@$UJjJ!P<7k,uDBmV(bhZ>ArViC?W%JO:Vb3h/T.gP,B>rla0mml/!6%l1+Cd2fM.@I-*R;3PYA*J(WC#<0mG?2nsEVY9NN1RR:Os9p(M?p_=?IgV$Kg:7Zsnr??=;4PlFrRpRGuPS-iYrV:A3p?_\1L\kFl%mFp3;/bQ1"DD`\p^H#KqMp78BfbqsP2i:+Ao$=S;'J2N15Q.JYFQ;uQHWo=+Kn)DOkNeUg1f1^Ps")uPZ?/_0Z@"oen0bN0ndgWd%>;&0!h'1s\)OE.ks,"JZkt`4MT0>'E;DNZIs"6AK=1C-6N5<':f_!hF\Z]fG7.JD`FlfqGZC`DkKf<'Tr?_3UU-mHPrA"Kt5a7i/%;X]:srBo6Er.jH](Jno>0)1ZZX1I5Tbb.mY_YhF/l`(Vm[AFVI4eJ0<OLh<e$b"VNIAsecBqFISd0Zjr-^7;9-^6umG="q=gcVe&%rm/-P$cmpZI_<0kG='>4fNNcD?;BjX`B/2Y*;r%2o'p_M"]BV*o:WaQ_J\<)WZTjkQDoO/PQX1A/[Q.P\N0OYr:mXDOZ'GQHMu`t%Mb!sih94Vk+K=`,%'dONEhTW]4.g^b0(^#/d:>K]B')0GaB(,d9rd=?0ksJs?p-E*KR=fKOm[,?<gqp3DI0pkLQ]FUo(/]9Bc-LW%'5BnhN0p#WHK&I\V3ckl#)<1C%:fr]\Q8!jEOp.n+VDH`lt8A9Qg'T'A[OhdI]c8T^U\M"fhbIsK792U+2$g>?9S!.M'#e/O*2uc%a_sg*^5)`'oaZ3F>qG:^I.WmL97Gn,p=FUbcF)+[a1B"MnF;+-Fc8==Zt%0<`"Sq`P0V;+do9Xd]n"&%gM5m7Q;Ta<1QJWp>+8i'%NB&?Ga=m*%8'-VF1<5,Ar6a)jTVi7V2qRtr^eo2;H+]iSaSqZqoDOlQWss"(0/'fCTj!T5>#CIXk"dq8X>Y%SOfRa3Kd9t.hfj2h%YK38llYWph9']"q48'J$fNp"lVVA`@07QTtZX`L1EY.\gWL^4oc2NPn/RIkcX6m]8hojiPo*&/qjiP3[E%ni*S`7!!<UO[CEYZ;?%6?_G[2jIs+J!KPhE\"kU*N[d1oq(T$?N91g'q%Ckl(\0Tr;<pFEL6>_S1MFWs0/O'iFR=9s'a1EEo1Y;I-j_*;L+&hhND4=Gi;B1%J%hZWiI1@$rkh,b400Jc[F7B=c4fc??g`r[aDo$`SMl<)p[(=jElrHC]lY2om]+o=SmFN(*j3WV&-)%J0mDA>^I123/;],H-N.k'%)c4N\Q(*H-&Pnl\[#Qm$]H6HfT"JFaIdgC.aG>cB439;BT$C*8G]^/EOs6X@3?TE8giR&RZM3+gs1J2:s7s83]U/2EhooGUj7h6M%YaSmJ7,!FbD5Ho)H*UVe;SMmEQPIH&[;+\c+kgl6B$^"(?YpH>Ol8!$q5:Ir.8g<BD\NNVqRd5XGkG)Ir:@<C_X=s9d<Vn>2GO?N%mq"Znofqek\m"OWI/4]3>D.hSnF?>Kq>HS+nYNmFA\Pflh,S.f0uIEXj1i"HTCCRoII>V"l(;TaGT5U[^]#\/:D:T\GMbnq)M.TE%4F$hfZe`=VD"6Fks6cN5NN=VXLZSUfL"75ZdM'(k.f]F5kDm4<_<n3s.dGhI:VCd=l:>d2/T'DCAuMK^,8Fca^<aPgVNtGeCEIH.%iS_?33JlO`hl@FVF@5F_OcT#6`"VODn*l\"]e])=<7kBL];kH=dU(*hEE,a4]@;t4];o[ZmdD695,lFb6ZIDEmb'\f#bsBeP]tq=%^PmGf]TCYun"j>69f4AbPgi*3_j&o'L\EsB*?&7tnUA*E/WVSr=R(tIZT3):AtDd"?gW>gVk4%9bg050mq:fJq8UBnr+bE]rJ*$R%VuJdS53'ths*=6$r\r)7r?.R=ig>1O\b+t-b^uoXlS$PTI$pCP[C6&4I.+u-o+,3CS::LaloGqG]mK>FG].bR<n2UeF`5JV:i!^F%<1Eloa@D;pW.hEe]\./un*,>Hr1s@>1uh<YfF*N2,Y@SQ$fqn*&-VVmmeKF")b0ltq:..uTjM]d%j,G:g&IN6^"L$(02_iU;)6o"%s*oC%n!N^AR8lHY-XIW;oX3O$#lSGFi5/lbL2f'9qtVN3rFGUX'aFX_p!S*9O5`_Fql).=ZAB\"frQ:E%tQ:TP=ZSqZ[NN^dPMED%-qbmQ7"=mYHkQ9qc=L]XAQ1>PK1XuI0pa3c,Yhp[B9OH4AA'C^pi2a#)%fHHN6=P;')9sDIU<#9S!$IX`1uIkre197fQ`S?8O,X7%7$<Kn,FrA-QVm(IHK7S$7,Jj#fkg(NZ7KK`Tf;N4gn.:I*d\Ka6prd@ZW[:K82`?f_4_M,^>+cs.cIgK@6>L+oSEmL&gA<MrbNEM%_fP7%1n!Db%;6SR&jHl),`=$i9YE\u'ZM:pcDfQshe.S3^+nWnof_T6O9c!Z,c=+QOe:#+H.4AD,R\0TQqXfUL5Ptn"UWZO',mg*%7_nbtEi?]0R!>2eRo;OA!EZ#k0Zc-92]<PeP=$!q&Igtpo;PC2N/ODU,"1S>dO^7GKYR8*RR-\':YJ_[Z2^8@+f?AUY^DTZeGF8'%]J,SV0'&XgYUTKdbYK.g9R[e.J"@7.5g`1('a"AD>03S$7-"a2ki(D]VRI;d0Sr\!hW*9lp9X36;,d6m(O>!X-VF#9Ghp[mJYJD0%.Ko[ip9RK-^l9E7bp3*Ga@PJ?XCt/SK!IoEGiGQqFm;:\MoMH*d:WS`rTk(D=p^ig^jflZ46-e)ki(D]ZCcQn9Sl:!'%?-.dpg*%%nOW7tXQ?KL@ppQ-8;^%l&Ir(=ZU:C!,Cg/-rZh<n+^a.s&-(dSrCe^O/Y"((0c9sg/eqKSdjWXb<gRN94fu9%Q7G&5_9,Mrcilgi%,/AD-pY)t^gt70"3j*+0rQTRU-JK`=[?]K32Gldj^F@V@-Mel5fo]"5TX%cBE.Pj($nraSYn$:*[<CbhNpG>VD3]V\'N.Sl-WO,4%<hE0'C0bG=SbXO(I+8KA/%a@u(Dr.S!9\?-lOY^WF,,50\@t\Y)Y[pn#Gc/[)ED[<rKp)`es,F]46`A"<,R>@Q$qtkM\\,t".[F)%X[BaOboQY[j8,(-6um$U0]R]=&->`S,&\)!dbZY#F>o$2W]U\i:Y8e&[gp!bBNXD;*nRk2nH(UmkbjI,gQ9+^PdE@E<9/kWSd<E"%amuM^e(i'\M^Fi68>F/?b.`#F711#u!RBa%efeA8jpq@>EIAc/jAV6?6&I%#iF%pH9-[N>b7(RZ\tr;JCoH]'#@(Xj.KbW")IPJn%!k!48LQ;$R-6Ysu/:2qNS?bpX(!5S\H`f!MpGV#u)W@YbfN?f=%_BGh:kgrjlWT'g!Ll1C;b-L4c[E7pLi8eT08=</..r4i8D>:3%naR7&D.DV9%if,2OGK:IE`A)\U^PPp@Ga#H1WdE?nmjXOM2YD#!P?qD&6:+%eljtgUPO]R#4]1WYQDW,!ghH95.'MhTR?o+C/jp2%+cVEsb`Y>UOTeFk_dno7H!H[m)j)$&D_L'lcpmPLgUI=C5`*Bq<"I]9$dcg8+#^,06X&C\)?R4faR*ON,h#&bW(NM\>I)^5:T=mD%`F!NC$@i4)%_#;`BG3!`'8LtfW'6/2$Uetk988hhr[h_k>1>ZTaf:M9ZTDcof40eKU\N#L>QJf:`8NVS%rK/eB]>*a)qB`1+N1q?%:K'L$QoVbj]SU!\1rf^JXO>G&;>fN6XoLFXic#jeLGn)m1i^TlNU"E71p7^lHk6q05&7Ef/Liq\.8-*3PpiU/!ZT*cDW;(WF%T\T%j8.+H>_".2q63_ER!OrMiD"im*3GHr'2l%@NE9E6*'o_`#a1_01E4;?DW;(WF%T\Tj").-DulCejMT"1@5c5[L`H;V*7L9VJioFq%)/m!K-/,%u54LbGO(G*]bACJbE,LNUD,_V2KF?/F+WiVB&(t"+jDeauah8_PUB->OX=e7J3Vh;_Q+j5OP")m>.fdjH!UN9uU.r1;%gGnE?7Wi08?B7nJ3r,D^0@)D!Im6TIFK^S/ULDTkE?7dH(/FOtKe*cJ(-*qd);7"5!jm%$pPj5paKYDJioXl1ZX[S3dti9p;A\Sq%l?TeK3C)8g2RL7r\&dYkXugLK"`!8*0-&T9AAJKWn(UKbNI:CY#l&pg<f9?gf-qo=<>IIBQ1Nc2$4Lm3$mt#Gc)+ZH/aN@sELdin%]I$j22WYqgl(Roe^uqMB?)0u+jHD:AA`/=QP^R13$O?o)0$eONBTk&F6\g*K\Gi:8.c^\nG`kN9]#$N51p:Vrf0rE4Mk?.:;'e+q%G,L<N&/(3e$qK_NR$8!.b!BAnDAOMVjbm(@T?+:&9)a02VNmK<FcdFaj<kVO&bjr^b+0Lk>%":5jRO;@Rh"Za20@IeNn][=/'I\#%Lh8e!@qg.@\PL3qX_Lju*ak7-@QmilliQ:oNX[Q_'GS)?a6i<IU^P]!@:)!3GCk3cGm$q'OsHINiUJp5d'$(6fJI>G)6[\he/")O%/0GK<3=NrFo%907d)nWr`uR`&nrUaQ3"FHAp^@Q.XNrM#I@jbre3&+i]on,md$"3H3.c<sSTq;W<ZTJg1V9B14"\a<^UuZ*DtX"r%k?l"(VtrQD?";[`Qh(`cT0JkFq!dCYbg<*g!Qm=8Rn73.(2'7'R=^biPh0RY_(Xs_No]\NAngO<iK+f^?7P%3(5\l[Vu"b1j@TZ>%+#IOkoWY>r8Fs/EdCClbf-]X5C<@kh)+;A"akTMd`1gEORT06IG<o`FDI$r*c'(`CiQ$8p]$.+@P2XRb5C1Scbc$p4PDK,I;bX2H%ULlnE2BPr`2=!#m-HF>UBk#SnbH.n>"E>Da+((>u29@2dPL*]D([:V6WQLsZ@,2N2@mn%\Q=gE8]#`f&.qS&dh,>-Sp!SZY?XV6]%MtD>&Lj3oUd&W)sH8<X&MY2j$R8K1G+.op/;6ql2C.@8rqF80(`2FF6eGm'6c^Q\bAsuC[5$ccUen%<F5+>?Bd&>W^C#]j$*mHih%r2Lr^S5Ym$VDL2B7a6b?(>kPnFdZ**/e>\Db,3C]8`i;OQkcYGUE7&IWAuQ!1;,%-fd%#9UQnQA;3Np@q8RtlZS"%KP.?n_R5*\q%R8GaH-Wun-im<qSEg(bu&kK3/QPhW$>5,?O1.A8odq_Dm:)c[B$uX4HRUMl7.J9-PR8Gc_-[qGNCHu0;e4c$^T6j$hRkh\>dc6b9%1\oP$?o3Sf0Rg-`J,*iNr,N;30B\FV[Rc/Ea@Ge<1Um:u-Kt[ta<,2U2ICRjp0:O0f^^V:@p4aGh/kC;;R7Q##Z\Z)/Tm0lAket%%QRjq<Psql[Q'jKiVBQJnRT5bY1X%*tUT%7]=YobWmT#ZXPQ'Iu?Bpp9BuOu"QSkg!ZY#M=grjkAAQCI04=H=`ZnA`NqP>!Fe?'([%]"Gt.8SZhY$E^me!m]YohV>]hWZ)1\-e*iN?/FL\VEe-peKq7]:/7R%<G9q-4oSu5`n#jph"#^4V.P)?6E;^DmA6LV[jncMP*t`s%79sTWNI5Rob4aD?<o#a``hK23(#![1-=gCqeP1+//F#R&DP\b?p?L@a(AK>ciaDf^6L23IeqouM`F''b4H!QbT(p(W54O-9J`;`u%:o7VTej,X4CMBkQ1'NU9JISnl^I&e7HKbpZ9(uoa_J+>*hM#`"g4G9jI%5ps#%"k#7R$/aMS*3OKsPMp)f>l1]$RN_D7CI+lU%@a%[H",cXilZleW-,*ZS"%K<]b2Fc+;,t=m```2=!#mB!pZrf<!/sY?*f'k/Wg"HHg3J9rhA4l1M&.2f4ZA,/%<jjegG+M[[>]QCH1/%.amW_>AdWX\k'#+D7OBRl6<oJ^#PtiCs%^*eW-,*ZS"%KW]`;S?<LaeWcm1iH?GWQZeBEJCY!&dc"b9n)j[AF(r(+79d<dWRH%Q?%\EOao18AHhj/1G0bD_n?Ngj@]/i.7.>Aec+WlV,?mC;BqlS;s6<]b3qKWN@URamFf?F)7?C0!E6HHj%FW*/MtC#d[,))\H82k=Pd%AkH19j(=*L<MnBLGMKQo9pnkbg2YSWen%=qC<'&P=dL!`WuX.4AmK#uFA?l1es.Wm3;=tT23"_g.&@skP"aa>W,!:j!HlY!+/#d8%DZeM^RU(H@OkM-Ih8X%;TWY22!S$b1*It_m^&_'^C]+4DT'lU0oc!;6Y,=A]Fo**7^TOKHr_:-aSq#3D]&V\tD#F:0VXF.:2&ia6%WMquXFXo>A^T"3Er!gojj)8\t%Y%E`nb8NA]"?kLCqT_DVXEe0m;.1KVP`eH2tNs;oU?/_48M[r`m8R<l>D&LZgmUUR_"\i[o;ng%S!ppHhp?1%r2-@Zi+ita:-$5*Dec0;UbeP<VO`,nVQk?k3KV*'M-73LgeXq,;]K=57Vj3b^G;fW.[\FbY/Eu0?,Z8)Sr,Z>fMmgj%c*Mp79,a+_:VBRoD$OK/@AD;t,?c$L'ateU=AOs1o&<X*HfCE<ehk$gH]_hNOKt0RL4+@C?)CO-rN[_c&S/Gb4r?b#;g8qA<trNI%Cl6R):!E-+oUBS%%:\\I!:n4kQ>e;k)$q^0-V$JQP#,aMOS,?J-+(sOOUP0JW]oqZi+Ff6'Ip0#@QOA!N-aO=d!Th/?K]Yr,pbe;%99O,9<+V]p_8th-jQF*V'hN)6M\\,t".ZF%R*I/ARo?72=MQ6nrOh*;aK]lXZ\E>*,`SWh8G5f?H!sW`b[*%U1H>VEX9p&Vd03"W%17.V%5'.&GY_b_3Df?d&*\!n<XZk&YJP"qI:K"&=O%E>^#^]n>JTIM?C=!/$(_"S-^4SMoV,tG:%fEcorPt%*3N#.da"#Br?*tg9%bWT[oPVnman2uu!i\Q,-rc>jY"J[0-mI:+]knUFN"$^XIpMh+ZJ9>_Kf2pID+_;`CHm-6SdoR,>*`Rk>(TX92D01?VYfu2k]E]I/%"`32FcPt_r.D,4-+!V4_.a<d"SKuMI=-r0P0"G9L2(KInqp7VF/SIrb3"PIFLL:.P3:ufspEA3d;<Dp4#VsW!M!'7YepPD[XQhRs%8g22_>Zra<<^usIkb87JQ6FPkqp6Kg^a9Qi]YT"5qOB^tA+q1DOXR[GGg-cZVG+JaaLOjY9Nc["<q`5>/m?Vp$ud9CLG$CE2K@sD%%I_2rf6g=i&pk;LP?Ejc"JoZm#b!Nd$I70"[*J_&qp7VF(_+YncGTP++]uN,%fO'!I2MR]T-Q2V8=mdUd%:1gT*M2Be%GtV,iW&i%H7i7[A?aGb7`.!JoC+qc#SsY$6U,L6+7d*qSBOWu(AoG@c:"&ig<YCLQ0E0e3XHG\N&a_fKatVC?rZ3m*Su?*]`PW\i27%Q^7<f'%p+"0AQ8uQ$O&u:e.FS1BLqNU]#2e*!H.B`c((cAH*3Oq+cD=Tmjph6k_*&S<eS<E576Gk[-OQp)^+(oYpT3($E3Z_G*-BS[#%`>V%n.'OG(9iW_5Atcg7b)8"<uoalcBu+FmAi!jUP%(%Q_j8%N.[CDkb*hL1aiHrL\IK0Y^fFfqK^!U:i9\1D&um?6XQ](MUH7IYKHK3%TTJp$@s,u8`i9tN2S*QfK/15fGTSsL$eWCkTD/5mKCWWTLK$_aB!JU*<L)h')/PsldXJ3%FLhD`KXqETPO=I\odXg^O^+qlhH_r2%)P]i@4)8H257'[2CeH*p'Uq!X'(AY(?nSM5,d(%HQVE=9Fe3DTUBG:CqLQ"g)PJLe0TaE7RlMDWX^p+JVU&s2:ST%L.3!Kc2YCYa%5?8)IGg"K9-Pfrfp-^\b<0h'd])ShIe8D#j/?_@GB,g@)L>PVGALSV#U6^R[/GG\+]Rug#<<0,S>tncl1SlikLuJnj2I?L39JIaS%;aqf4.TLO/7@1=\BLPeT\`='(DO+di/nY43MP<3]ec`(.TZpTK@(h8c]HlA5bmn(]^j7AS.F%4hl]Z2*!hf4;k5E%sY,C*HfPhT+%X\VA=Ahm6P5W>2:5jP.2AY_B`-Y(%s!44B#Uj3T]Ac'EBi@Fu?:bqKZL9dIRPT-42^_nVn\iW^A-]H>F!$'H[3I,r)f.=^8\6u2#%&13<^qon.P!*H(889i=bDcd$M!ROLpRUgskp.dcd=TGh'kjs5u54JWC"[K-+Ss[iMH6a=](+r_:USU*AeM/[`!PjScFRT(5+CH`#%>&Rl2U'@+k5\lqCZ^(U2_?K8Cgp>eHHj'N91U1RU#)i^NldF3q0*&`'_<SnmA'-c9"i0EGVQkKZA_F;#*-BS[mSZ!T`AK-SMbUjg%/NIJE\oo(!`K36:/0\WR!365?(<AC!X#jLWd0bf_aHfh$?`h,DK,+rmqiUSAqA3gAU]cf$6^e;E&u6#!7(Y42jD(&uN,qj:T6tno%S>.b3_FRt,%b(k8ZA2E'6K9Ha4'oIT;mE%]<8RbXE6p"oI9@hn=;sP]Y5hrW(oaSc4K;8AKrkJ``WDf5,_MG';FHs8<<>*MdH)nZ%>#@u+/5ifTmBgA\/nY43MIIVRZ&I1i"*ne;7a^?L!1G>`.e/qhrO5Y23=C?qg.9M<QFD@Ob?4hPd?!.;ApaDW]:9$iCLcbpq1JmG%IB6`"!hcssaP!H-f^o![>2q.6=q_d&VCr8)p5s>T$\6f]>!DlIja!KBBUf5k(QJ@a@$Y^XFc*TH=TGfErPN2<d]7UL`khn#:es9K%s5O"n3d_)21I9=EPQ\[j#T*r"Ar?5U$sMj4BY[aN1fI'pS;+4[.K[?$_5b#D36_5Q`Si9H<mgMd0C9Ke^fLLm;iK3>NI<8]E#&GU%.)q)Xr,/nJ3"(6pg=WO=!G;G[7R)&L07^A/BPjRBQ9`5g!-C@;q\En]=#a;V;YmI#LT:DW9pU.-*5GUb?qo<fk"qs$)cht$0"NnT%;Ds7M2CbDp9jCWf``E3<&=Ida8jdb;ZBUHQK<,euD]jr=XncY\7dD[13BPeUD=p4'&6_HJ.cBT3Ul1@!72cd&1o-Cu?9t$rQ#.e=%5fO"cagdk2r!5laWhIbg$7>^'H%jB##I?`7#M);:&tMF^%_5[V@;DX+@Pl1/cFH4#OQS*\$W;(,$\2iHo#>1B7Q-I^$SY#9ZN+YR%<ZHJW"fmT#I($N3jX^D#.AlCm!RK07cWUXdN.hX?o].;aQAtGa-qr"H.f`Z`N)D*@c+.Bn6(>+ZBVUFNcpr'\7@UU`BVQ7:Tjf\A%De%$p!44K-!WTFjX)6,`TT.(7@GC/km4oG0fFSj;'#bmOip[Z_X@Y87P!"QSB9(/;!-HW05*s66ego,dB*$@_(d=9TlCIH?XeTkO%!3P\3-IapOD0.cGJEDsl>eS&)gQ*t"!ROLpS&@(GHI#Cic2sZ,+t$dCe%Wp0(^h.]XsrEO^sFG]/meXpMI7,jg$b5?^fUTDU?MK'%^X`FU"[Fl_=D^(lBh#m@!4:.nDWM<e$\1/3Z#b0kN.hWt#.f-^FSQ7D2J-Fm)@[MkJ2X4"gPu9("[Hi9h.Q$Rc2sXrXeT#fSJ#em%3]=S5elbQ0)"uULbiTCT:#R%`Ka^C\l60XHR9RI768f?0>EIfp9F%s"KB4&S^h=>I=9ab=$nOh\0gWt`;!:Ft,INCC,>rAL3<Af)%1^"G3,c4DbL5F'o2\.-J&'(g#[sND!DQ7]6Q9:=Y,k'T<2D,/3_dsWE:j)HU"uAR1Y;f@L*e[\K7aU6I!14(i1am>f7lCk,*?7Jo%jXU=5&X6pJ4F<5NC2KZf<rfJ94r>TNR\EBT+r2n!S$)g"752uO\ATj,(=I9W$5]baah,64j<^[9E>8JS2ilkRc0Tf<)EF:fE3X``%nU<_A[LTOZ<<0*a^):9WnQX&cALda_T7L.`q]<H2g[GpXXNLmaUR&s&"6/kd!3Ahu$uBdWkHYgT[a:g5j5`a;Y70#f"i*%J@C[cq%imnFrEYU3macVIA3!X"jo,On7@$r(8b;;ohHI(\&>V'7",o&)Nh0VWCi@4h.dIVW:Z=j"7[K;!04^hO6H3FH@'`b<j/'4-qH6a?s%'`b<@`_i@[!F1<\/b;0JWs7DFcf$;Q<,5^9D?`4W"4_b$Hg,Ko$38UH[X2]j>Qk,nF0Br\"agIRlb_%d*WWnUJ9Bi<2IHMl!Pl9i%BhY'mnMLam)dIKb-DXsi$Yt^%@aip$\c,1An3aW'1;AnSKo@-^`unRhfFu=Q5jLI7RaLC-(<DM):1'sH@cK'X8EhA<NH?gOT<8Ad%C<Y3s8>.0.J-6h6-5*LJ&i.a&M95A]_d%Y9q4;oJ(MGTgZ_F`R="gg;2ht9G9)'93V+<X\VO6pO=t"`fr7ms1U<?[>1fMVsCI;)k%YcsCeb?4hPb,Q%#I)a3@A[8P2U<?[>[%`rLTb<YFQZ&X.MCrNBd%(*^,OtA(3U9$saZCp)S-;/.MDBsIINo7u"IoW\)f=YDd^8\J%!G;G[7R-JBc`$N;!G;G[qH0Z+3]cZqa-s=7BRN(AAHJ75Z#2N/JC\9YAOY*'_d1OhTQRe?'9ue0:M(Nj!h]oq"&PE0bLn8p%;,^g%H6sQEN>O&11?3Bj!3I;eN)ECUd+:aRZN+[9aN*g:f\_`BB*$@QOYc7lD:?5(Fu]q\Ar>FjQ91.Uo?lYN!*Z5aO\3>hAmEU_TG>F2%mX"TJ2;g"cROOE-POLYb4h:l;('(HbW]RsYq@RZ^!,]*J>DE=+!hbO%ls=<)B*$BU=SJnNJ?o5hI6RA+f7:1-BO,6HC^QN8!,,Z@%qs5AjZN+ZEpG<X`[p5DGO,Ybqcs=4Q\';q&2\'h5mH^BuN(.@O+i=bW?GLePjps4TTF$4/#\4.4KcD\`BJJmX%eTu7/P0VQ6-B=+%lpruYjbhP4;K,/q+XI6@";5f%W^tcsM9@kSL\fAq:6ZjcV2:E`lGJ,m8sp;DQ4HW(C!sLYI-K`Q==KjPRORA4REj+@)&Ta/F86.J%X0U5(kM9'LL2H!fVS\$:C2(u6I8mt?=G5a?Xoa-ATK`a85flV27BPAN(^kjp'GGriQY1]9H=8<mQa6[*78`p/H?tJbMDf)Jcpes7%=dST$:p`4jJ2[6Y@[UpNB>@XMZn^(h,Y4['TlrF(JC^T,)R/uarBjjH(,!*/Pglo)_KAVmL9#9d\f=Y:+03&s*J2]n'`_HOnt(0'%LuNkDDYOQhf!@_AR@P90ka@1/E3N"f+r/-I])(,nEtn\uoYO2>o;T5!>eU94R:8Em]P#bN^jr`kBU.^8QWo\;1D"L@!3IXRI)!$a%8-!9'cqKS5R9q$('4em]!48I;k%WVOC]J)Kd#+Pi-eP1*!G;G[7N8t)2W-+dg??TFK`uE2!,[[;pY#j3$\6gkA)H;4EY\YWb=nQ$%i,TS5XikjZIH,>`!3L%.`Y.R&CX^/*d7"GS9D@X.fGK[h+g*>CrNhT*ka6S06pl,516ms+K?P'@E$1>F/c'/6G#r"WI!.)mbp%lX%,.*`1jT$`OUlpj<7;<D`2Pce'E^Ask#riPp,\4g2A=P$2B?G"SY%"+lEB3Q"`+Mj3;MN?=CpLR5gQedLau34VV$#l@c5q1_nln7Q%V>j!f?+pAjR@p`)0]4)^ni4Ym&RPRS.fH`5*oqSYQ-kMGTZ^C:YTh/V&UEe5TpN48F4gm:bN(u.HB,Mrq&QB8+7*q]!3>=_FRr4)%5"O"2.fe48TJuE>XS%3O^&ihm%SZGM(I_2>")G?^`TdPqA.pWi>6ig>.KEMAJVh&,(A&&T_c?cA/gC[0WCpDb`8rKL=I8"mY4@p$%b"0EO!-"XR4/X\#]j<.*p^.!RoN,^8^3,jN&TmgU!+pi)KN$h&2:,nb>\kRUF-BD[Fn[$:.KGe!d@);D8TtY!@OhGG$&5f2ak>3%%#n^MF^kGHf:Fg26,://L!+87BQTLk2@Z:'h!+pgHf`lJd[7egg^&ig"6']^,;\L@h!e?7GG,]5p<rfJ]LRi2ei[Y"2+6Cee%e186%XO"f0jV[M&!3AgcO29cF'`b=nEfWfPneD/+WLCj#knI^bU2dC@`jTY$h;B43[Fh9tjfX)pCQBX&$<]g=Z2rM_1,+fLJC]"M<hnal%XdF@<7I+O:P,GKe@,XD0#?h+h%S(7NBi:`8OZl,^$#(-M(m&PYnO+!J6qBfC/RdSZYG(ulGo)^ek4l!`-nuenTmGg!>m<u+:(EAB%EAfn=YG8DMQa(h'R*/G/[%\tpRs:S=H.*$4F;YH&XBp48H22\?Ug_p46AM`E?m\u&s5Otu^=\5J\r6eX.uH+$TR:3F4oU-a\srph%.uNV?-S9%W$UpPk!,/-e,g&F,5&4EK!hbO%N(DCN]?t1@>d,s0r1pXM50sdH!PnP*jHmY<GspCCco#;6d(6T'ZM$->T8O.k!RSD3%;cs[Rc(T#pBfHKN/sP!9Ue#0)knW?8WA&nCHV!!=o=EIG_bU7T'B?`c**LY;1;Hih1fNK%Oh='3drBoE!,/7N)(Kq#WFp/NB*$@Q%On2u'M:F`i!G;G[MPA>'fdA"pZN+\3q@ok"lk*^B=#a;N9dU>:dkVD7!O.HQH9\;t%g'HHTT'_1lY=4<!4:U8h9-+4/6oD6`n_#o%b?"\J4q5,*AAD9V?sQTTC^-60!+9)uHRp)N=9,_2D]/_V>F#`)`^(CmkUq:YRpI<Z(RKATRrm!i6j=YcacKMV$mT<:+QETm(Vi:$%CHPdtd6`bWb-o8a?aJ,-K,+unrfI7P.bIaq8.d%WL=?f3-qG]cYssn5KPQs"N,r(qH1N.[:2$6AA>3L3jd"lPN7:MSbp,4/q.8iB%8d?m.d6TQWc<eQ]EpQHql:F*/dH)nZRON9;]Ne1saA]t^.Cu#Q5cY,*<@5G5ZcWI=D0.cGJ6!@q^-A3'E@A.j@#?RL!RQ^5*m1U8%:gIXJVeC,e!6l5$gkGUb7P,<kc2sYu2Y-*@df.cLB*$@K5C+!8'iJrhCX*!Sos'Nu.a-Seg>sjc>+^jq`WGE!Nci6B!44@70q[aN%rU[;Q/-&k?COW0<;G+8oAfAqrTF4HrE1jG-[Eh@0ZN+\!;,Yhqh>lB\E#&GuYDlFMk8[UNf1)+5!,/63--GT=8&/7-1fNHLPu7!H%"3/1]1Hc4@m[oFj>N'&AK<6W<B90R4C]sehJtC]mm$;>#=9(0VjHQ>XajHl+!+u>ZMINZgRVp@U3"(6pg=WO@!G;G[7R)("0S$J0%BRQh+<^FN(!44X#HPUA3=L_a5<dIFGQ`Y53\hNjq4"a_<^q.6oXJ0T@2JaB=?1_e\Ui1@%ClC=5&D'pqr`R<=7&D"\er[Fr$moNU%+JT+.*QW1b90ZUmdIN22d&nZk>K"lDKGG3)'EE!11bqt/81c%)L/\ga/kA,*!=(B;jD:KfN:Uiuc5B\YVSH:1!rUtj-pK.+s!][p%nmm5(;#:;(<m%:lAr;^s&QLlZZ'%IFdH)nZRON9G4H@.N7O1jZ9$h-#>d/PH>c$GDY&_nG6AM`E?m]";qkJG&Ahr-Q'6G*"J6!@a%<^E2!WMfZ/8C?NM!*W6!\I5h>=^*<.S-;.sD+q!()/U()c2s[3IO'mak!Al8]:9$ilU)]5,`6?GUU)$]c2s[3aiHEjK!^$/)pSMX%Fb,B@&H%QNEB+DWeqKR8.fJ!K0b%ard"NhGEA5Mp]R;uTS-;.oqKp&Kn3s>L:;t\$(')SnX&PF6D0.cGJ0p.nPpiuB+'m.nTU?uO%W!q,2Ym-^%5VpA/%;*q6"IoW\1W:isArk.9c2sXR7?u9,8$2l*!RQ^uarB'0HN7[ZcqH/H?^pN3O+=P:BVURC3ZN)S!3Q!*cT2.f%$\6gK\n<GpS-;1Do<EYI#)n6Deg736S8e92!7lk8a5R,Y"[MC2Vm25mL"`nYCin("[ZKLrXg0\\NC-t&q>+_IEtK:;^gof5(G_MB%l%=p2A:>X'!gs%%&P("u>"H8k6@CQjb7RoSd#rpD3`=-lYp._SPT*Lr8AQD`!JDH7.290u_D9ESaWf9;nc18+8^,)Rb"7rhI3+gM%/^2?oC4)lo.0n+K9&Xm-9TTqFEU!]']KDJDlQAK[Y5hrWQmtmrbCW,oZA&Kf^&ig"6'];?k*0uQC^gtuq$I+6JlSC-)Yc!fEs35a%q$I+&"D'2PT!p30"/P+c'eWOL;s=d+U'G#WqS<YC!O-nA,4`7=f$AKL$5[K"?W\W>k\OSM<<0*T^&aL1XY\=8.fe4hJc<T+s'D%o%E3Y.NGbe-0f(M+/"i0CI*7<")<.o:iJCJB=!#M*.;d$1WU3)93_cHhWd=A2E9%<Z[Q]>e4$5^nHWmm(mm;ocEJ7X%,HHD`gFP.!$%-A#rs_m3p.?+pAj'g\*5ZZ?<P[_g!=\LJD.[tM7r"i)n,.c4mJ"9Z(6J/(@F.GCn3!*A,E'etu[Zs3Jh49^7MD<o]rJ>[@Z7aH30%*=bjGTZ4cj/o?->!+9<rFY:CYY5hrt1cik`^fLN?0"g!E%,`W9=P#0bWRE</V?(1ZMb_fU[#8g1NH&!8g:BW&57&3VaEBr5(UB]q%&HqG;A;^G7!nd]i>mF"Y>$fShfs/]a$Pci]^k.,Z5#C!)ocj(nC-\T7>[<!s$IT8PYb>kWnJWYrUO8<Ij(r_s1eK!<Z6"9k<]Tm,%!pSH.*bR`r;H];3nn+#BAJ&t19TaDJEE7a[o?,0+$^d[3=TC9Wj:$==Rd7]1ja\ekS-;/6`@;B?NAl.9m;6r*$\27l<OP,\<M;(P%hdMBpB*$@IdB@QtZH"$.RG13Yjt$L9;,iqk8O!'FI:N=j!RO:TrJB_5E<eq%ZN+[P+'JMAph*AACX*!Sos*X)K437neh1S9d/&-c%1)2=o4k'pNiIZ3/M,JfB[sp<eHj'N966212">\eC\%jhZ"[Elmpf!T.qm]G#)pSMX$OogAU^?o5:W$<81fLK=3VKl.jX^D#.97lB%qte_%/-)+f<f&:&L>(`?!1G?;kq@B1UWZcL@'XG9.`H"l\2\j>!%WZl8na8R,K9eXR:;F5Zs2i=c2sXR7?s(D>;IJK!hbN2G%ts6%=TGhcO52;pi[b(5+6r8o&9/HcX\Zt)Po=WX!3HW&T/GSJ('(HEFe?Y5EY\YW/"Xa=l5"-`ij$m"$bB"$kZ6@Ba2TF.l[8Z;OL^/U%5%LrBUC3G`aRDKm$T(&/q1&kRY_8cO(bMOh9;0(eU#cP3-tl1kPUfXm8AQGaKp3!D'1gKTP!EK:";QdI0OYj^i<5Z</rJ`qA?"@Y%MLm>0*1poD^qM4q18@]LT#mHg/lkTBK4^"2cd#JFjS='O6'niq_*fs;P^/B2M6NM/OIj?j\6)0pA`_s2f:d:u+[)0o!+7/;.i4SN%<"sV[*t/toJ6!@aJjFG@8N,$uMCrNBd#+PiA&rB%jfUlg6(>,u_0QJ\h#&:1s(7%i!+<JR8^+k-lM>%\YlJHcS2g_]IG+\@_?F`(%0T&H#jf*7o.+`9hMq+XLMNl'R9Z)Ue!+9)oUMrO/ka.KfYlNuS'6u'#b#P9:OrM[JTF23'AYdMe?=hT)(')SnX2L$HD0.cGJ7a[=%qT-C"F?'_ZAr9TOb+>:2S-;/6`@;U7cX[0K"[FSq5ofSj$XbMj0[m(cHM5Fdb?"\J,,d8Pp1PG]=9,_&(h?P84*;`T/6oF9_B,iH%neD/+pL2Cb!Z2;qejm8`m/rj^5jL52Dfp4`$\6g)V8mt&)%.7^bB';,j7!c`XK.l2''^6Fe%i69716\"jleVT(k9OKY%rC_Z]K1j%RWlP66WOsXP`VjHN"olA+HlgWqIn\SCG/jT],!Y[#t'U^>"6k*J5eO*`^l^GPmETmdS!-=+Q\-l)[IjTZ!h)scBF)EWE^8gQd(lm%s.ZGa5"FLpW^Hqd<2E3F3NJ]eWrnVrl%"UubSfhheO`%Xmm06k/meXp9T[`eabW:S&0mT4!>,H^"TU?p.T[_$+cY2Z#l"`,<Wl?h%GFNn-+W%eNTZ^C:0GCON%MG&F9Cm=Y2I?L#MP/+.aSQ10N51)L?+pAjN>@Z^T?%.c/Hfq)!e?7oN$^h3[>qQ9<rfHZat/3plR9Am%"T[l[0Hs(!g-=9P.f`\<P__+CVS2T*i@=n1QXqZ<1R\'D;c4OJ!e:YQl6C51,sg:m!IP%N(E/[`d\pO-1jfH,1Vkio@o!24[_g!=%\QJ*VSfW!a$@l]6<PHWD+U2`d!&MG@.;&<""FL@Q1Vo`s(tpPgJ?Jr\78TiTlkX-I<raofXE',?WuAcT!3dZ7qL7;!$is]9^d\\n%eMZ88!8-MQc34C@'``'/Ep&Sjp^.#Pk@++Z%/:/0eg705CiK1W!7jTLa09RZ$38XV9k+3HMR$[Bf[p78gGOt.G)c#tCson8f09OC%K?0]Q2An9NOCa*()e>Q`'*DADBV@q32-b%HMV5E$l0B*eHI256Q2m`"OWm9+'WFHqd?%6mH3L8P,i)!VOc0_]PB$Rpb)_(Q!'lst%JL5A?V4if,3OLoO9<-c]*#4j??F->'.NL2VXE*.e2"5(8*[^)+('(Hbk)o;Qdn/]DPR<ePb?4g%;loQ`;.&L[fA8u`ZN+[9)"F"u%.OS6!S6/>/ALq)jU.9*M-7<\sa>[*R6&2WD?q!n'3M`WGh;7"F/n4q/7MA>njMe5ZJi7,tJrMB.h%RncQ?l_:nJ)%?N%t]J/-B%%%qQOQ_!*Z"O+c1L\%2e5rZN+ZE>/I@5nBjB4)pSMXFb-DFdR3EXk].F=>r89_,q/!kk_??]_1`)jZ78889BA!X"TU?p.fX!S$NX`<%cqL^e1>1-5J?o5hVHDrclksKP=TC9WX:f.=9Lcg#!48K!Y(63O%,`Z:ROOQ55C5d:0GZ9Cd8Tj0]60.W<k)7#N`[XA9$q3#!8(sl%\(V%F"[MB:fX\-b^;@]),M^!%3Eua'l>s1BBa/qg5jNI=@m0n<!ha[=m]g^2B*$Aj^1iP"DHSkk*!]cVTY'iUDMF-jB,op"T%C[`%=bk)66RE^,Z@J?r/0/9&!-86F$u"$Yb;NOKdF-^Uq!%)\>(Y*FJsHG5aH7qVaqX&,UskE/EYSs[%S4BtLa!u]-78*%cm6lRS/icA%UOG(!".H3<L#=m`j!8.9FNZkopj&8C/P%kYSEu0L0,"Wpm,+(HL5,!M%Z(DQ)dm#&i8^RpVD:s0^m<N>B0,'&PI:+5&Dre2bQe^S%Cah7u%n>ofV.N2Q:d-UKg^*&kY0`+rjoj@GAfb`7jG&sJFgXHTZ$\iRXK+?U^bfjV.c!SHho\IM9QP2CZRa)unjDM^RXCoe;a&WA%TCjo]J(9`Snm!`H-^c\Bn8a.*c'OAV8*.q$SohISg;PP!Z-ig*\WbgpbW3N.\babQa'<G^UrZ]U=[I4fo[P]!Lk,b8*3>kO9kYmG%pES\W?kl*Lh:>'BO+=P:kdGrY'Q)+sTViZCQa6\UU'6P!>gDGOfqNJ6;ra)u]8`RI2i#\gU%;s]lkh4G"6;\iq3iYr;7WMO7kjZb%#oO=LRA"Ot;I_K6N/NrGR*cfbjX.qtRfj^I&b(e&6j=DL[#7ou':$]si)HDLRM0gj@TLc0nc<g:Z'&QkAciL48WfWMMdcdJ\2[SZ%0rEJSO8JedENud+U5a&),O.e7=TEPJ59bt;B*$@XN&BNE!4lj3.B(JP4@&n:RGGm1SXVuZgsC='FES(Xd!kd$I#j6:KP`%k&4:_/%0(;666#s*OYcYt`ajhnu%[QuRn<+*W3Kp1-VJ].0%9mFqVqs*1BG[]tAh)D6^hIo@.atb[XQW>l435CW8rA'k^B>=k:u+8hg'G2J%=@J@$ag7YT*t];.X!l]c[Pi_d"IoW\\+F/<7@UU`kUFLiE#&FZ[%Ph5EB3d:^H8c+3.e\$FN+c\7mgq0:^J-bs5]iW,=bMd,Zi%X%jF*-%OYoS=(R:08,@+=T-qB?tSpH63P4L%bHh[0)]'fg=/lWG,-iDIDG=%gu#B9";Gj6<uc^9EGPiP/[]>uqQ`@=R1BHCPi+Vd#C%k(9tLo+2-7WQ85p[ar![kAh:;gY-o_3L?dcZ,=W5jXL8=^fX]LEucCdp)M*=^bd#j]nXe#J[8dP&.Xe?),_FEAd><):q^9Xa./2f%.l0(P3,sg/?NkVWEnhk=&<b.D:^e[*5<od)!U7'IBL0748Wcfi"5_\R1Nfh+d+cH^)H3UA+Vu)u-rLj-\OA5MnI,U?ENud3+rOot%*"V7'^r=-i2VRB'2M-A\S-;0eocp3pEY\X<`E35f!hbGe1b*Q,&!2-NB")^^F*$Q()`j%7cAnS23^E\nLo^Z,H6Q!B\LW/WRSH16%DMn)Rc^`anhE/3/Eqn('#?E2go)%@MgcC]LQQXjF.WV%EQLe-g4uGSH[qK!NA.8:-U5+!G=@Fs::et1-ZZ>YE7jBWE<`5`#jOSHL%%g!e1;Dlh<[^?Y<TYjb0Cg.DOH7iD&^f(ZHb?"[_J\e##ANN06S[mOmc^Bh]BA(YB1N6(tPfEg1SgS%kn-,5E<)b9`3WiDH;5BKA%#9,+)=t:+FCoeU<@\;gL?rH%geE%(1\L2=l+LI&,'VgMOAh!h'jsqsf3G9Qla]DXXEj;lC1%`+M(8M_b]R"Zk6b?T.XJ-P*E^(Pj%O"M4bX1m:W\$Zh@UWZd?FB^sRMCrNBd*mr]b?4ged=Oi!0'<8@n'(,VNpb[B3obt?US5#(W.alf5<k)W:G(Xk>35A/6$Z@)Q[Lb6%)G\g8K8Z"Xi0S't3^peGoACk?aRc/B[#7oubL7&K:XD$BVre7sFm+CE=AVRB-r3\sH@].oo%1*rLCI8Ub0uZj5"&'aXJ0C'gR8EE%&9&Bbh:@FMU<Qg@oJGUpEY\X\[%L9abIM!Rh-&RRd@HU+Vq]!i1j!UDQ-B>m+7a\GR`L9qcVr."o+?Q*'H*#?dPXl4h-!9/G[YmI%Tof`YUa&cGq+7U#ai-;37BS`bnO"?-oh]P^'Q4V[.Za_;Yb7.c<1]WDoR\hIY(fA-CoF(0T!7kZ*b&P$'fcZVdQGm'/lr(XD;>H\%\SMEL%j,,n<rd2jk6<>Tfaa*cB-+POF6;Jt.5l/-%%In3-#nI"-fq=\+7f,T;Ea_#:BKf:,Pm3[/Q\p?*NU6kR*RTeP@C%`0l%j/%TYd9#g;PP!jlqOBn5GsYq4:GK:6Ht,XrnMc.k)h,3Jg&,4=;l;#e2ir7BnsPl0V!Z`PsBb2S-#MTH=2I!RNFsfL"!J/-(!RYm-^%%5Sl"c1j`KQ"!lclfe"2[g`/B8L<cQfZX]qe%Zp]a*EQ')a>?_3'P?WtTJ"[Q%/H/8o`13cPbXS2-QNCO?bKAWpldDV,E-c-MOlj@%n]Bo#PYSAbicEuL1:=^:^qrZHR6!:SBpH^c7ah?c'<$_de!7Xb6OYNA,%k?=)X$g`b>eOYCWAHr>ctr_%N\W:WGnO7L;G-mk5b%\%V_7*9VVe%l2/']4S-Qq7Y@".e'rO0Nn9p;uoMs'"Eqd=$1Lc&Zl4@ZZ\6(b%H$PEY:^kM0fmF830Ct[EBGW2&0R2-)LW<U;nspGr%4i,(_lHH7\(E9D'<bEX<`U[i`5U.m><`8S5;j?-f"C)qJC86c+CSTXFLpI*F[XLUY?-WMELQ==P/-*7p6)-3%F2-)61E1C'F*$Q(%)`j%7cAnS23^E[sl=@bqQOHj]\*?5O.b!hinFf:QB)f0AEWh$[?pgh/Q7nlW8'=ZGBG[]t<bEO3/7+R>KQm)PKij`uT3JhX=@J?J%95KL9Bo.j>>\pL;)"P4031q>o(C."pBVX>9M#,N\/-*8`*t^r.ZN03'`nKN*!4li0UGA2-!;UhNFrNqqD@W4W6g)kDfeHGm#KVBo%SPG:Cn8jl;26'CSW\WTE:e#u68f_>LjTn>'[__c!FGb(+(n?g8l)gT^m:$gLne<>s_^j!V`)Ie'?`CUb#+8Ri8MB5T&rU(==JB:+%%i_P4nYo,7TFV&:#HPSk7^k5eoqBQ3!-DEm,)S!c!RT;SZccJOFO>\0AM3-HZL?$&2NI4<*&uaYcD%"RA#O2ROF2>o.*H8FXs(,;%AaT!:c+U,J^HkFp.eb01X3s>7HcCH7i>^k=mA)T%cV46r^eb97W0N,[H)P&Beh/Q;M6a<K@g3]F;Nk1Q9PX-q'.I$(l8#SpMHY:i%dbSnnJIPT./8.]2gjX<i$5_FEDigF,;n135A*WOt0!rDj:uq*c+PP,ZD.2VO^1"?_fPDE`$O4c0mk\b6a1hSofmfX?Y1(Fp*IL(5%Hi3!]f@^o3gM(YNr8lbfJ(*jP4M1=aq:G*8W=*=i(qBP+r57d^&#VWUI!JMa2eHT5aaSRqPKYX1c9?Y3%@^lV)iKDB+qXW3?VZmt%3cYi_m0?B4VFpE<T1*jO:cGgq?gqq<BDHEAs1c8#GKoN.4A_C4orBHCWlhi0Q[V\ngu*l3?=/+sLduV#dg#K6,-pF<9HCTc24!]=%Vd?Ie6QMAi<NM+#JlOpg<j+.(lIG&a9tdDpY?,U!C"93rX]B;$C>I;T_V/WR4e?9.V>i>-3u^2dVdPYeEYb?-Op-c[FEp'/lj7'O%)cDD?EdE^-%C*kHIPsb1R8p,e=I5F5AWjYr?!#@Q[";kW=Yh@&.nU64FdZAgcU]j[bf_3*?4b%3]k-?X\merWer5#\&7d\b\s7E+%=Yn;LJX7<$bG(tI-hRF/A;:TT?Tta4?dBqmodg<Ndc4Jh?(n0(0j#Z-Y*,bAMRM;L/]1H3BrpA.enf/R1msGP't)a#br(<3VH0SG%XB&H:AlGSWXOgRVVH0SG/=0MQ@U5e[X4LMAH^Z^bAr#b_<@"V'8YSBnVllqsm)W&aZ=ZdF/CkPZj=##3@\^.P7u<]mCP<e^3o$[3%.I>,Qi`[9YFWEIlgn\&Qlc@Z8V7J9"F88%-ribn6M-$4H)ZcAiWP&20Lr9*'5>\>2GR#@0C418VC0/Q0(,^1N26E0`T`p$k'H,Ck%nGV%Rrc%.]N'qq9.[m04MH]2"+7dZiO*X%4Wd>3fT;:[^Hlu(")\%-ho0_>1cH+9$GfJimbTcX!<@m2W.Cn=Sn6>TARBBkSI5X9U%dA`u(*GD!ZW,b]PA_'@Bh2q/ZMn/Xpj?86so49rWZ6W&502&t)qD-%,r3@l7@f+>(IW3a31?lOl>WJ@ZQeGe^HpmX=WV^7@(e<_T%j^?:6)Dh96BH4jTV:LtZ1hQHJ`TemHK3C`SQ8r<<JhKda0:U88)XKXmbgIEq6?ndjObsK+hjDGmK7;h+2QE`]DsI_Rfr25^hAE:_%^+.RBX=:047X&gM/d_+'Umt1*bU91ojL#:4;OQg^0%33;8ugZW/l^YpZbZeJUEZ&,(t)?;^8gB3Y^HU<D2Rc)Br9Y@a0.PW4K;9-%]$H,2m^'_5"J[0-m1eAhd48W%#(G9*h3Z)HCj07'bD4%]Fh>tQ<o%D?$OB3j0&*A:06OnQDVr6*RqAu])SF5nPhhQF!+1-3%%3Qk%nWR9f@-FGe8GfckBN-a6VSbubfK)^#:u:3o(bC,"RENGuea3Yq9#E&,>@8T(*3lc&>d8l/jZF($K`(bDNLn<o!3dZ7LV0uk=ldVC%)aTgo!+;Xf,C\%!dmBkq[RgimS$)g"753oVTfG>L*m;i["C8_CJ4mSrM+5&"pJl6.9[MoP!*BgAoNBa3cXeV3XO06&n)F$aEOZ@+%eN;.@?)4EAcF@Zo!:*!GY*u`)HTJCi.f`\DKN.*Q6*$6[Hj'N9@cDI'U%V9*q$I,Qjd=1Q'm8%U-4O;_^dTL<I'"n)>JJg%.pT/f%\bPhTXY)K[0GQ3>Gu.Z/qn9+QQjS@DoXrNYH[F(M.fd)@c:ecS]u00A'eWOhJT6iB^%9S/.KEMso/t=Cfe"=sXT2a?,-'IoD@m)#%"TU')@@6/)3X5'g!3?Geb:9<#ZP>+DBO@ZtG.@s1eN:!^&HQ\O!:*#-^!$Mk!eBr(fY%gu^&igB)<nRD!*eDkFW'VPA/q`R@!*L=%fK>][Cg&SP\EHmg8B9A[QLA!pH'29q>@fl7)VR]IRu(-<;X.A%OIj]t!-#IU#J"EV!J2q2!PkP&i)jlITZ^C:YVK`50=38h8C6KL%!4[-]inUip!'usT!+85L[4O=.cXn\4XO04+X$V+]ZJ8-ThLW8lmqSJ'\_1A=M"QJ$UB>AV/U&bTC,5!'B?(RQQCA?7`C+(e4!pY<%\Y[)^;Z`fM*Z\^!>AbdtBI$onNB6.QZootAk)\en>J$=Y/L(Y'P[N]WDLe7p;uj#Jd]m;m!I?A&!PiGM8o;`\cu[kI(TYW&No^K/%3Eua'QE.6"\NtO">62O9S`!Uf/j[9S!-#JQkZD_aTZpO<Y]f$TXTJT.iF7f?Fm<Y,WrQ88"1o?]^fCH>5/c:#*8i=I=J(6%$SgQi%!*GGI*_X=\.pT/._`a<E_c6]<Y%)RsX[@h;9?%/P(u1fpCf=!g-.U)Uj><cpjd*J-eNd.cLl#,I>S&3AjlXp2fa7^3=(,LI3<WX%%!e<p*+\Nj!%1ooB$34*0F3Y,&$(XH1jXU=u$"ahm=DiY^buXnL,1sJdX3l"A$5[Kbcd8\BT'L;U=M4f2[GTh)bAoDTq@K,(;elW,%QCA?7-_\(k[LTQZ\`Jk5<_ZY:BlBPqVWDEBFZD?sO&dti(O$g'1_O`\7]g]I>AaXG40L@j[l-*R>AaXEBiTB'%?PXu$@l.K<9unH%n%!6<!39ZVM#2tZALh#e>3&X>9[EWX\-da<=(*b'/2r?Ub>nU^Bd`C]ffg!kq$I*S%k<.lAeP;p"TU')"*>Yn.pT1'^.o^9EYSST%G@:.h!n[h[eq^b^R0.g?!:+^1B-DHo$38XfUrQAPfa8OrbA`Lgj)>_5X6UVOEbgqKgN%B0gtEJWdP8>429"8=i/hJkDVXcF?P@Y&%3ODcXAKA!S(27.*'FdTTlNEoH^""5$L#U\eLgX01c&H*M(B(*WYSlcXCng37;o>?je<4T:`Mk08NJ\Yf:T(901O?4+$\q1-$%Qo/%+m;;/=TEPJ+1h)L^;@]]0ua])!O+0'OY(-&?e%=r!`AXKJ@IfX]I6&?U2$DA^,R\9;,(g^d'8^JF%D%=8?-B@L.&%;G!dI/"B2=7%D2(foFlBR/9**CV/HgJ-3"(8VI>I.@I"d3D@Z2>1!ao5!@pteK[hLnKr)E@IJ=o[P\LKl2WbS7I]/hM2[?P5VXmIOg@I^VFisM>k%NT+B%7+*P<fSl;:lb['b[fW5W=pXs9E#&H0eqYk@Q`kA4;iJ!!<<-j_K#M:Z?SUR2N#=HR>&[ZPMJbAIa>Oa'L'#RqN#2on6BPFo%fEqdUTqEbI[tI)/;"P;+!,@SRdJ!c?0F\AFEFW0K>RH??6/`t8_?0pTTKil!/:le$@)rD*3^Af0K22HS>7gXAFH5/H@6HYj7q^uJ%fGgAdUVg_`IZ2R&d5`g?MFFGBkWfiQBso*VRR(BMq&h`Y"35NAW!sc6TbB)$BEc\Pd+K!ls+*["kS+4@UnGVe5mJ=^`>*GL>,MZ$%quN?3TORu/PE.W^d=+./&kC^1BPSOR/u&kb[)\*5C"mi8c,kdY%,GbnYk*Zo&&A_ug;HAUE*t1*D25qZ/[R$^2O;/8&DH"ZZpuA0%)Ej[[J$l``rI"(Og[bq_^RTcQcg3\-XjVa'4ZY\'4M.hGSBi5mhnFP(TAB>>o?4`foRH&e?]2nV'rne%a[g^'>N?6Zn%=XcYd:\7%p?g2cdF[tgVPu&NT@up-d>.JrS?$rZohoS=5JDSF[8s8Rg8gd7M3?R%qJR]6pMs#PB'-R`j&c+bhOU29kNr*2lHK2(K@BR-IsaKZ%nG2GJbkiK[s52Mrl'F'Yo!<9,QeD,jc[MC6rI-[%j.EOT`?bYdWmB#[h`mM(rrEC9#NP~>%AI9_PrivateDataEnd